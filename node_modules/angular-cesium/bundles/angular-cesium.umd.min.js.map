{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-cesium/lib/angular-cesium/services/viewer-factory/viewer-factory.service.ts","ng://angular-cesium/lib/angular-cesium/services/viewer-configuration/viewer-configuration.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium/cesium.service.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/StaticGeometryColorBatch.ts","ng://angular-cesium/lib/angular-cesium/cesium-enhancements/ConfigurationService.ts","ng://angular-cesium/lib/angular-cesium/models/scene-mode.enum.ts","ng://angular-cesium/lib/angular-cesium/services/camera/camera.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event.enum.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/pickOptions.enum.ts","ng://angular-cesium/lib/angular-cesium/services/context-menu/context-menu.service.ts","ng://angular-cesium/lib/angular-cesium/services/coordinate-converter/coordinate-converter.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/basic-drawer/basic-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/primitives-drawer/primitives-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/geo-utils/geo-utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/arc-drawer/arc-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/enums/graphics-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/optimized-entity-collection.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/entities-drawer/entities-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-drawer/billboard-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/czml-drawer/czml-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-drawer/label-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-drawer/point-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-drawer/polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/models/ac-keyboard-action.enum.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/predefined-actions.ts","ng://angular-cesium/lib/angular-cesium/services/keyboard-control/keyboard-control.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-pure-event-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-long-press-observer.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/cesium-event-builder.ts","ng://angular-cesium/lib/angular-cesium/services/plonter/plonter.service.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.service.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/event-observers/cesium-drag-drop-helper.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/map-events-manager.ts","ng://angular-cesium/lib/angular-cesium/services/map-layers/map-layers.service.ts","ng://angular-cesium/lib/angular-cesium/services/maps-manager/maps-manager.service.ts","ng://angular-cesium/lib/angular-cesium/services/screenshot/screenshot.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map/ac-map.component.ts","ng://angular-cesium/lib/angular-cesium/services/layer-service/layer-service.service.ts","ng://angular-cesium/lib/angular-cesium/models/action-type.enum.ts","ng://angular-cesium/lib/angular-cesium/services/computation-cache/computation-cache.service.ts","ng://angular-cesium/lib/angular-cesium/utils/checker.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/model-drawer/model-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/box-dawer/box-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/corridor-dawer/corridor-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/cylinder-dawer/cylinder-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/ellipoid-drawer/ellipsoid-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/polyline-volume-dawer/polyline-volume-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/wall-dawer/wall-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/rectangle-dawer/rectangle-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/label-primitive-drawer/label-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/point-primitive-drawer/point-primitive-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/services/drawers/html-drawer/html-drawer.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-layer/ac-layer.component.ts","ng://angular-cesium/lib/angular-cesium/services/entity-on-map/entity-on-map.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard/ac-billboard.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-desc/basic-desc.service.ts","ng://angular-cesium/lib/angular-cesium/services/json-mapper/json-mapper.service.ts","ng://angular-cesium/lib/angular-cesium/services/smart-assigner/smart-assigner.service.ts","ng://angular-cesium/lib/angular-cesium/services/cesium-properties/cesium-properties.service.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billborad-desc/ac-billborad-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse-desc/ac-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-desc/ac-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pixel-offset/pixel-offset.pipe.ts","ng://angular-cesium/lib/angular-cesium/pipes/radians-to-degrees/radians-to-degrees.pipe.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-desc/ac-label-desc.component.ts","ng://angular-cesium/lib/angular-cesium/utils/utils.module.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle-desc/ac-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc-desc/ac-arc-desc.component.ts","ng://angular-cesium/lib/angular-cesium/models/ac-entity.ts","ng://angular-cesium/lib/angular-cesium/models/ac-notification.ts","ng://angular-cesium/lib/angular-cesium/models/map-layer-provider-options.enum.ts","ng://angular-cesium/lib/angular-cesium/components/ac-map-layer-provider/ac-map-layer-provider.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-desc/ac-point-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label/ac-label.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline/ac-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipse/ac-ellipse.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point/ac-point.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html/ac-html.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-circle/ac-circle.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-arc/ac-arc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon-desc/ac-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-default-plonter/ac-default-plonter.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polygon/ac-polygon.component.ts","ng://angular-cesium/lib/angular-cesium/services/basic-primitive-desc/basic-static-primitive-desc.service.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-model-desc/ac-model-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-3d-tileset/ac-tileset-3d.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-box-desc/ac-box-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-cylinder-desc/ac-cylinder-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-corridor-desc/ac-corridor-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-ellipsoid-desc/ac-ellipsoid-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-volume-desc/ac-polyline-volume-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-wall-desc/ac-wall-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-rectangle-desc/ac-rectangle-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-label-primitive-desc/ac-label-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component.ts","ng://angular-cesium/lib/cesium-extender/primitives/html.ts","ng://angular-cesium/lib/cesium-extender/collections/html.ts","ng://angular-cesium/lib/cesium-extender/extender.ts","ng://angular-cesium/lib/angular-cesium/services/ac-html-manager/ac-html-manager.service.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html/ac-html.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-html-desc/ac-html-desc.component.ts","ng://angular-cesium/lib/angular-cesium/directives/ac-html-container/ac-html-container.directive.ts","ng://angular-cesium/lib/angular-cesium/components/ac-context-menu-wrapper/ac-context-menu-wrapper.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-array-desc/ac-array-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-point-primitive-desc/ac-point-primitive-desc.component.ts","ng://angular-cesium/lib/angular-cesium/components/ac-primitive-polyline/ac-primitive-polyline.component.ts","ng://angular-cesium/lib/angular-cesium/pipes/pipe-config-map.ts","ng://angular-cesium/lib/angular-cesium/components/ac-czml-desc/ac-czml-desc.component.ts","ng://angular-cesium/lib/angular-cesium/angular-cesium.module.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/disposable-observable.ts","ng://angular-cesium/lib/angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum.ts","ng://angular-cesium/lib/angular-cesium/services/selection-manager/selection-manager.service.ts","ng://angular-cesium/lib/heatmap/cesium-heatmap-material-creator.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-mode.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-actions.enum.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-point.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/label-props.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polygon.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/utils.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polygons-editor/polygons-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polygons-editor/polygons-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/edit-arc.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-circle.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/circles-editor/circles-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/circles-editor/circles-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-ellipse.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/ellipses-editor/ellipses-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/ellipses-editor/ellipses-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-polyline.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polyline-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/polygon-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/circle-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/ellipse-editor-observable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/hippodrome-editor-oboservable.ts","ng://angular-cesium/lib/angular-cesium-widgets/models/editable-hippodrome.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/polyline-editor/polylines-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/polylines-editor/polylines-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-manager.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/entity-editors/hippodrome-editor/hippodrome-editor.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/hippodrome-editor/hippodrome-editor.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/draggable-to-map.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/directives/draggable-to-map.directive.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/ac-toolbar.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar/drag-icon.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/toolbar/ac-toolbar-button/ac-toolbar-button.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/components/range-and-bearing/range-and-bearing.component.ts","ng://angular-cesium/lib/angular-cesium-widgets/services/zoom-to-rectangle.service.ts","ng://angular-cesium/lib/angular-cesium-widgets/angular-cesium-widgets.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ViewerFactory","cesium","Cesium","createViewer","mapContainer","options","Viewer","contextOptions","webgl","preserveDrawingBuffer","Injectable","ViewerConfiguration","nextViewerOptionsIndex","nextViewerModifierIndex","defineProperty","_viewerOptions","getNextViewerOptions","_viewerModifier","getNextViewerModifier","CesiumService","ngZone","viewerFactory","viewerConfiguration","init","map","_this","runOutsideAngular","undefined","cesiumViewer","viewerModifier","getViewer","getScene","scene","getCanvas","getMap","NgZone","decorators","type","Optional","AssociativeArray","Color","ColorGeometryInstanceAttribute","defined","DistanceDisplayCondition","DistanceDisplayConditionGeometryInstanceAttribute","ShowGeometryInstanceAttribute","Primitive","ShadowMode","BoundingSphereState","ColorMaterialProperty","MaterialProperty","Property","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","depthFailMaterial","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","definitionChanged","addEventListener","onMaterialChanged","isMaterial","updater","material","updaterMaterial","equals","add","instance","id","set","hasConstantFill","fillMaterialProperty","isConstant","distanceDisplayConditionProperty","that","entity","propertyName","newValue","oldValue","remove","unsubscribe","get","update","time","isUpdated","removedCount","geometries","values","geometriesLength","geometryItem","originalAttributes","show","color","depthFailColor","depthFailAppearance","getValue","asynchronous","geometryInstances","appearance","flat","DISABLED","CAST_ONLY","removeAll","ready","getGeometryInstanceAttributes","colorProperty","resultColor","getValueOrDefault","WHITE","_lastColor","clone","toValue","depthFailColorProperty","depthColor","_lastDepthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","updateShows","contains","getBoundingSphere","result","PENDING","boundingSphere","FAILED","DONE","removeAllPrimitives","destroy","wasFixed","ANGULAR_CESIUM_CONFIG","InjectionToken","ConfigurationService","config","fixEntitiesShadows","StaticGeometryColorBatch","items","createFillGeometryInstance","_solidItems","_translucentItems","item","batch","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","Inject","args","SCENE3D","COLUMBUS_VIEW","SCENE2D","PERFORMANCE_SCENE2D","CameraService","isSceneModePerformance2D","cesiumService","viewer","screenSpaceCameraController","camera","lastRotate","enableRotate","lastTilt","enableTilt","lastLook","enableLook","_listenToSceneModeMorph","callback","morphListenerCancelFn","morphStart","_revertCameraProperties","getCamera","getScreenSpaceCameraController","getMinimumZoom","minimumZoomDistance","setMinimumZoom","amount","getMaximumZoom","maximumZoomDistance","setMaximumZoom","tilt","rotate","lock","enableTranslate","translate","enableZoom","zoom","enableInputs","inputs","setSceneMode","sceneMode","duration","SceneMode","morphTo3D","morphToColumbusView","morphTo2D","morphCompleteEventListener_1","morphComplete","setView","destination","Cartesian3","fromDegrees","Math","min","PERFORMANCE_2D_ALTITUDE","orientation","pitch","toRadians","bind","cameraFlyTo","flyTo","target","zoomIn","defaultZoomAmount","zoomOut","zoomTo","offset","setRotation","degreesInRadians","heading","lockRotation","trackEntity","cesiumEntity","trackedEntity","Promise","resolve","flyToDuration","altitude","entPosCar3","position","JulianDate","now","entPosCart","Cartographic","fromCartesian","zoomAmount_1","height","flyToPosition","fromRadians","longitude","latitude","complete","setTimeout","untrackEntity","MOUSE_MOVE","ScreenSpaceEventType","LEFT_CLICK","LEFT_DOUBLE_CLICK","LEFT_DOWN","LEFT_UP","MIDDLE_CLICK","MIDDLE_DOUBLE_CLICK","MIDDLE_DOWN","MIDDLE_UP","PINCH_START","PINCH_END","PINCH_MOVE","RIGHT_CLICK","RIGHT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","WHEEL","LONG_LEFT_PRESS","LONG_RIGHT_PRESS","LONG_MIDDLE_PRESS","LEFT_CLICK_DRAG","RIGHT_CLICK_DRAG","MIDDLE_CLICK_DRAG","NO_PICK","PICK_FIRST","PICK_ONE","PICK_ALL","ContextMenuService","_showContextMenu","_contextMenuChangeNotifier","EventEmitter","_onOpen","_onClose","_defaultContextMenuOptions","closeOnLeftCLick","closeOnLeftClickPriority","_options","_position","_content","mapEventsManager","open","contentComponent","close","leftClickRegistration","register","event","CesiumEvent","pick","PickOptions","priority","leftClickSubscription","subscribe","emit","dispose","LatLonVectors","geodesy['LatLonVectors']","window","geodesy","CoordinateConverter","cartesian3ToLatLon","cartesian3","ellipsoid","cart","lon","toDegrees","lat","screenToCartesian3","screenPos","addMapCanvasBoundsToPos","screenPosition","mapBounds","canvas","getBoundingClientRect","x","left","y","top","pickEllipsoid","Error","screenToCartographic","cartesian3ToCartographic","cartesian","degreesToCartographic","radiansToCartographic","degreesToUTM","LatLonEllipsoidal","toUtm","UTMToDegrees","zone","hemisphereType","easting","northing","geodesyToCesiumObject","Utm","toLatLonE","geodesyRadians","midPointToCartesian3","first","second","toDeg","rad","firstPoint","secondPoint","middlePoint","midpointTo","middlePointByScreen","position0","position1","screenPosition1","SceneTransforms","wgs84ToWindowCoordinates","screenPosition2","middleScreenPoint","Cartesian2","pickPosition","bearingTo","bearingToCartesian","firstCartesian3","secondCartesian3","firstCart","secondCart","BasicDrawerService","setPropsAssigner","assigner","_propsAssigner","PrimitivesDrawerService","drawerType","_super","_show","tslib_1.__extends","_cesiumCollection","_primitiveCollectionWrap","PrimitiveCollection","cesiumProps","_i","setShow","showValue","getShow","GeoUtilsService","pointByLocationDistanceAndAzimuth","currentLocation","meterDistance","radianAzimuth","deprecated","resultPosition","resultDistance","distance","Ellipsoid","WGS84","maximumRadius","cartographicLocation","cartesianLocation","counter","distanceFactorRangeMax","distanceFactorRangeMin","max","factor","_pointByLocationDistanceAndAzimuth","curLat","curLon","destinationLat","asin","sin","cos","destinationLon","atan2","PI","pos0","pos1","getPositionsDelta","z","addDeltaToPosition","delta","updateReference","cartographic","middleCartesian3Point","screenPositionToCartesian3","ArcDrawerService","PolylineCollection","_calculateArcPositions","quality","pointsArray","point","center","radius","angle","_calculateTriangle","_calculateArc","arcPoints","drawEdges","positions","Material","fromType","uniforms","constantColor","width","ellipse","EllipseGraphics","EllipsoidGraphics","polygon","PolygonGraphics","polyline","PolylineGraphics","polylineVolume","PolylineVolumeGraphics","box","BoxGraphics","corridor","CorridorGraphics","cylinder","CylinderGraphics","label","LabelGraphics","billboard","BillboardGraphics","model","ModelGraphics","path","PathGraphics","PointGraphics","rectangle","RectangleGraphics","wall","WallGraphics","OptimizedEntityCollection","entityCollection","collectionSize","updateRate","_isSuspended","_isHardSuspend","_updateRate","_collectionSize","collection","isFree","suspend","removeNoSuspend","onEventSuspension","once","_onEventSuspensionCallback","onEventResume","_onEventResumeCallback","triggerEventResume","triggerEventSuspension","suspendEvents","_suspensionTimeout","resumeEvents","hardSuspend","hardResume","EntitiesDrawerService","graphicsType","defaultOptions","collectionMaxSize","collectionSuspensionTime","collectionsNumber","entityCollections","Map","graphicsTypeName","GraphicsType","getFreeEntitiesCollection","freeEntityCollection","forEach","finalOptions","dataSources","dataSource","CustomDataSource","entities","optimizedEntityCollection","entityObject","_a","description","viewFrom","name","availability","suspendEntityCollection","CallbackProperty","_isConstant","has","BillboardDrawerService","CzmlDrawerService","czmlStream","CzmlDataSource","process","czmlPacket","removeById","acEntity","EllipseDrawerService","LabelDrawerService","PointDrawerService","PolygonDrawerService","PolylineDrawerService","PolylinePrimitiveDrawerService","withColorMaterial","cesiumObject","CAMERA_FORWARD","CAMERA_BACKWARD","CAMERA_RIGHT","CAMERA_LEFT","CAMERA_UP","CAMERA_DOWN","CAMERA_LOOK_RIGHT","CAMERA_LOOK_LEFT","CAMERA_LOOK_UP","CAMERA_LOOK_DOWN","CAMERA_TWIST_RIGHT","CAMERA_TWIST_LEFT","CAMERA_ROTATE_RIGHT","CAMERA_ROTATE_LEFT","CAMERA_ROTATE_UP","CAMERA_ROTATE_DOWN","CAMERA_ZOOM_IN","CAMERA_ZOOM_OUT","PREDEFINED_KEYBOARD_ACTIONS","KeyboardAction","params","moveRate","globe","cartesianToCartographic","moveForward","moveBackward","moveUp","moveDown","moveRight","moveLeft","currentPosition","positionCartographic","lookFactor","lookRight","lookLeft","lookUp","lookDown","twistRight","twistLeft","rotateRight","rotateLeft","rotateUp","rotateDown","IGNORED","NOT_PRESSED","PRESSED","KeyboardControlService","document","_currentDefinitions","_activeDefinitions","_keyMappingFn","defaultKeyMappingFn","focus","handleKeydown","handleKeyup","handleTick","setKeyboardControls","definitions","keyMappingFn","outsideOfAngularZone","removeKeyboardControls","registerEvents","keys","key","state","KeyEventState","action","keyboardEvent","unregisterEvents","getAction","char","keyEvent","String","fromCharCode","keyCode","execute","getParams","validation","actionState","executeAction","paramsDef","execution","isNumber","predefinedAction","registerToEvents","clock","onTick","removeEventListener","DOCUMENT","CesiumPureEventObserver","modifier","eventsHandler","observer","Observable","setInputAction","movement","startPosition","endPosition","CesiumLongPressObserver","eventFactory","startEvent","stopEvent","startEventObservable","stopEventObservable","publish","pipe","mergeMap","observableOf","delay","LONG_PRESS_EVENTS_DURATION","takeUntil","CesiumEventBuilder","cesiumEventsObservables","getEventFullName","toString","screenSpaceEventHandler","eventName","eventObserver","createCesiumEventObservable","cesiumEventObservable","longPressEvents","createSpecialCesiumEventObservable","connect","Set","PlonterService","_entitesToPlonter","_plonterChangeNotifier","_plonterObserver","Subject","_plonterShown","_eventResult","plonterIt","eventResult","resolvePlonter","UtilsService","array","reduce","accumulator","currentValue","indexOf","CesiumDragDropHelper","getDragEventTypes","dragEvent","mouseDownEvent","mouseUpEvent","dragEvents","Registration","observable","stopper","isPaused","MapEventsManagerService","eventBuilder","plonterService","eventRegistrations","input","entityType","eventRegistration","createEventRegistration","pickFilter","registrationObservable","disposeObservable","sortRegistrationsByPriority","registrations","index","splice","sort","a","currentPriority","registration","pickOption","createDragEvent","filter","triggerPick","cesiumEntities","picksAndMovement","addEntities","switchMap","entitiesAndMovement","plonter","mouseUpObservable","mouseMoveObservable","mouseDownRegistration","dropSubject","dragObserver","lastMove","dragStartPositionX","dragStartPositionY","drop","tap","dropEvent","merge","pickOptions","picks","drillPick","Entity","MapLayersService","layersDataSources","registerLayerDataSources","zIndex","ds","drawAllLayers","updateAndRefresh","newZIndex","removeDataSources","MapsManagerService","defaultIdCounter","_Maps","eventRemoveCallbacks","firstMap","_registerMap","acMap","mapId","generateDefaultId","_removeMapById","delete","sync2DMapsCameras","mapsConfiguration","unsyncMapsCameras","maps","sensitivity","bindZoom","masterMapConfig","masterMap","masterCamera","getCameraService","masterCameraCartographic","percentageChanged","removeCallback","changed","slaveMapConfig","slaveMap","slaveMapOptions","slaveCamera","slaveCameraCartographic","cartographicToCartesian","getCesiumViewer","mode","MORPHING","ScreenshotService","getMapScreenshotDataUrlBase64","toDataURL","downloadMapScreenshot","filename","dataUrl","downloadURI","uri","link","createElement","download","href","body","appendChild","click","removeChild","AcMapComponent","_cesiumService","_cameraService","_elemRef","mapsManagerService","billboardDrawerService","labelDrawerService","ellipseDrawerService","polylineDrawerService","polygonDrawerService","arcDrawerService","pointDrawerService","czmlDrawerService","keyboardControlService","mapLayersService","configurationService","screenshotService","contextMenuService","coordinateConverter","disableDefaultPlonter","style","className","ngOnInit","containerId","nativeElement","ngOnChanges","changes","firstChange","element","getElementById","ngAfterViewInit","ngOnDestroy","getCesiumService","getId","getMapContainer","getMapEventsManager","getContextMenuService","getScreenshotService","getKeyboardControlService","getCoordinateConverter","Component","selector","template","providers","ElementRef","Input","LayerService","_cache","descriptions","layerUpdate","_zIndex","_context","context","setEntityName","_entityName","getEntityName","registerDescription","descriptionComponent","unregisterDescription","getDescriptions","layerUpdates","ADD_UPDATE","DELETE","ComputationCache","expression","insertFn","clear","Checker","throwIfAnyNotPresent","propertyNames","throwIfNotPresent","present","DynamicEllipseDrawerService","EllipsePrimitive","updateLocationData","DynamicPolylineDrawerService","StaticPrimitiveDrawer","geometryType","geometryProps","instanceProps","primitiveProps","GeometryInstance","StaticCircleDrawerService","CircleGeometry","StaticPolylineDrawerService","PolylineGeometry","when","readyPromise","then","readyPrimitive","StaticPolygonDrawerService","PolygonGeometry","StaticEllipseDrawerService","EllipseGeometry","ModelDrawerService","BoxDrawerService","CorridorDrawerService","CylinderDrawerService","EllipsoidDrawerService","PolylineVolumeDrawerService","WallDrawerService","RectangleDrawerService","LabelPrimitiveDrawerService","LabelCollection","BillboardPrimitiveDrawerService","BillboardCollection","PointPrimitiveDrawerService","PointPrimitiveCollection","HtmlDrawerService","HtmlCollection","AcLayerComponent","layerService","_computationCache","modelDrawerService","boxDrawerService","corridorDrawerService","cylinderDrawerService","ellipsoidDrawerSerice","polylineVolumeDrawerService","wallDrawerService","rectangleDrawerService","dynamicEllipseDrawerService","dynamicPolylineDrawerService","staticCircleDrawerService","staticPolylineDrawerService","staticPolygonDrawerService","staticEllipseDrawerService","polylinePrimitiveDrawerService","labelPrimitiveDrawerService","billboardPrimitiveDrawerService","pointPrimitiveDrawerService","htmlDrawerService","store","debug","acForRgx","stopObservable","_updateStream","entitiesStore","layerDrawerDataSources","_drawerList","initValidParams","observableMerge","notification","console","log","contextEntity","updateStore","entityName","actionType","ActionType","draw","test","acFor","acForArr","split","isObservable","obj","ngAfterContentInit","drawer","drawerName","initOptions","drawerDataSources","showValue_1","zIndexValue","getLayerService","getLayerDrawerDataSources","getDrawerDataSourcesByName","getStore","entityId","updateNotification","refreshAll","observableFrom","changeDetection","ChangeDetectionStrategy","OnPush","EntityOnMapComponent","_drawer","mapLayers","selfPrimitiveIsDraw","drawOnMap","props","previousValue","updateOnMap","selfPrimitive","removeFromMap","AcBillboardComponent","billboardDrawer","BasicDesc","_layerService","_cesiumProperties","onDraw","onRemove","_cesiumObjectsMap","_propsEvaluator","_propsEvaluateFn","_getPropsAssigner","desc","_propsAssignerFn","setLayerService","createEvaluator","cache","createAssigner","getCesiumObjectsMap","Output","JsonMapper","_mapper","JsonStringMapper","SmartAssigner","allowUndefined","fnBody","prop","assignFn","Function","obj1","obj2","CesiumProperties","_parser","_jsonMapper","_assignersCache","_evaluatorsCache","_compile","withCache","cesiumDesc","propsMap","resultExpression","eval","JSON","stringify","replace","getFn","_build","from","smartAssigner","oldVal","newVal","newEvaluator","evaluatorFn","Parse","AcBillboardDescComponent","computationCache","cesiumProperties","provide","useExisting","forwardRef","AcEllipseDescComponent","ellipseDrawer","AcPolylineDescComponent","PixelOffsetPipe","transform","Pipe","RadiansToDegreesPipe","round","AcLabelDescComponent","labelDrawer","UtilsModule","NgModule","imports","CommonModule","AcCircleDescComponent","semiMajorAxis","semiMinorAxis","AcArcDescComponent","arcDrawer","AcEntity","json","AcNotification","ArcGisMapServer","ArcGisMapServerImageryProvider","WebMapTileService","WebMapTileServiceImageryProvider","MapTileService","createTileMapServiceImageryProvider","WebMapService","WebMapServiceImageryProvider","SingleTileImagery","SingleTileImageryProvider","OpenStreetMap","createOpenStreetMapImageryProvider","BingMaps","BingMapsImageryProvider","GoogleEarthEnterpriseMaps","GoogleEarthEnterpriseMapsProvider","MapBox","MapboxImageryProvider","UrlTemplateImagery","UrlTemplateImageryProvider","OFFLINE","AcMapLayerProviderComponent","provider","MapLayerProviderOptions","alpha","brightness","contrast","imageryLayersCollection","imageryLayers","createOfflineMapProvider","url","buildModuleUrl","layerProvider","imageryLayer","addImageryProvider","isFirstChange","AcPointDescComponent","AcLabelComponent","AcPolylineComponent","polylineDrawer","AcEllipseComponent","AcPointComponent","pointDrawer","AcHtmlComponent","elementRef","renderer","isDraw","setScreenPosition","setStyle","hideElement","preRender","preRenderEventListener","ngDoCheck","Renderer2","AcCircleComponent","updateEllipseProps","rotation","AcArcComponent","AcPolygonDescComponent","polygonDrawer","AcDefaultPlonterComponent","cd","geoConverter","plonterChangeNotifier","detectChanges","plonterShown","plonterClickPosition","chooseEntity","ChangeDetectorRef","AcPolygonComponent","BasicStaticPrimitiveDesc","_staticPrimitiveDrawer","_geometryPropsEvaluator","_instancePropsEvaluator","_primitivePropsEvaluator","AcStaticEllipseDescComponent","AcDynamicEllipseDescComponent","AcDynamicPolylineDescComponent","AcStaticPolygonDescComponent","AcStaticCircleDescComponent","staticCircleDrawer","AcDynamicCircleDescComponent","AcStaticPolylineDescComponent","AcModelDescComponent","modelDrawer","AcTileset3dComponent","tilesetInstance","_3dtilesCollection","Cesium3DTileset","Cesium3DTileStyle","AcBoxDescComponent","drawerService","AcCylinderDescComponent","AcCorridorDescComponent","AcEllipsoidDescComponent","AcPolylineVolumeDescComponent","AcWallDescComponent","AcRectangleDescComponent","AcBillboardPrimitiveDescComponent","billboardPrimitiveDrawer","AcLabelPrimitiveDescComponent","labelPrimitiveDrawer","AcPolylinePrimitiveDescComponent","HtmlPrimitive","_mapContainer","pixelOffset","_scene","_element","display","_pixelOffset","Number","MAX_VALUE","_collection","_lastPosition","html","len","pop","CesiumExtender","extend","AcHtmlManager","_entities","addOrUpdate","info","AcHtmlContext","AcHtmlDirective","_templateRef","_viewContainerRef","_changeDetector","_acHtmlManager","_views","_handleView","$implicit","viewRef","createEmbeddedView","Directive","TemplateRef","ViewContainerRef","AcHtmlDescComponent","htmlDrawer","acHtmlCreator","acHtmlTemplate","ViewChild","static","ContentChild","AcHtmlContainerDirective","_id","AcContextMenuWrapperComponent","componentFactoryResolver","contextMenuChangeSubscription","contextMenuChangeNotifier","contextMenuOpenSubscription","onOpen","componentFactory","resolveComponentFactory","viewContainerRef","createComponent","data","ComponentFactoryResolver","read","AcArrayDescComponent","entitiesMap","arrayObservable$","acForString","arrayPath","layer","layerServiceSubscription","basicDescs","_results","component","arrayDescs","entitiesArray","_get","previousEntitiesIdArray","entitiesIdArray","arrayItemId","generateCombinedId","entitiesToRemove","idGetter","getAcForString","arrayItem","MAX_SAFE_INTEGER","ContentChildren","descendants","AcPointPrimitiveDescComponent","AcPrimitivePolylineComponent","PARSE_PIPES_CONFIG_MAP","pipeName","pipeInstance","AcCzmlDescComponent","czmlDrawer","AngularCesiumModule","forRoot","ngModule","useValue","PIPES_CONFIG","multi","customPipes","Angular2ParseModule","declarations","exports","DisposableObservable","ALT","KeyboardEventModifier","CTRL","SHIFT","SelectionManagerService","mapsManager","selectedEntitiesItems$","BehaviorSubject","selectedEntitySubject$","selectedEntities$","asObservable","selectedEntities","selectedEntity$","toggleSelection","addSelectedIndicator","addToSelected","removeSelected","current","entityIndex","initSelection","selectionOptions","eventPriority","mapComponent","mapEventsManagerService","h337","CesiumHeatMapMaterialCreator","heatmapOptionsDefaults","minCanvasSize","maxCanvasSize","radiusFactor","spacingFactor","maxOpacity","minOpacity","blur","gradient",".3",".65",".8",".95","WMP","WebMercatorProjection","wgs84PointToHeatmapPoint","mercatorPointToHeatmapPoint","wgs84ToMercator","rad2deg","calcCircleContainingRect","calcEllipseContainingRect","ellipsePoints","Rectangle","fromCartesianArray","calculateContainingRectFromPoints","points","setData","heatmap","setWGS84Data","convdata","gp","hp","pn","_xoffset","_factor","_spacing","_yoffset","createContainer","containerCanvasCounter","container","setAttribute","mp","project","wgs84ToMercatorBB","bb","sw","west","south","ne","east","north","mercatorToWgs84BB","unproject","setWidthAndHeight","mbb","abs","containingBoundingRect","heatmapDataSet","heatmapOptions","userBB","heatPointsData","finalHeatmapOptions","_mbounds","bounds","_rectangle","_c","h337.create","heatMapCanvas","_renderer","heatMapMaterial","ImageMaterialProperty","image","transparent","setClear","elem","parentNode","CREATE","EDIT","CREATE_OR_EDIT","INIT","ADD_POINT","ADD_LAST_POINT","CHANGE_TO_EDIT","REMOVE_POINT","DRAG_POINT","DRAG_POINT_FINISH","DRAG_SHAPE","DRAG_SHAPE_FINISH","DISABLE","ENABLE","DISPOSE","SET_EDIT_LABELS_RENDER_CALLBACK","UPDATE_EDIT_LABELS","SET_MANUALLY","TRANSFORM","EditPoint","pointProps","virtualPoint","editedEntityId","generateId","_virtualEditPoint","isVirtualEditPoint","setVirtualEditPoint","getEditedEntityId","getPosition","getPositionCallbackProperty","setPosition","EditPolyline","polylineProps","_polylineProps","getPositions","getPositionsCallbackProperty","validatePositions","getStartPosition","getEndPosition","setStartPosition","setEndPosition","defaultLabelProps","backgroundColor","backgroundPadding","fillColor","font","heightReference","HeightReference","NONE","horizontalOrigin","HorizontalOrigin","LEFT","outlineColor","BLACK","outlineWidth","ZERO","pixelOffsetScaleByDistance","scale","scaleByDistance","showBackground","LabelStyle","FILL","text","translucencyByDistance","verticalOrigin","VerticalOrigin","BASELINE","disableDepthTestDistance","POSITIVE_INFINITY","EditablePolygon","polygonsLayer","pointsLayer","polylinesLayer","polygonOptions","polylines","doneCreation","_enableEdit","_labels","polygonProps","defaultPointProps","defaultPolylineProps","createFromExisting","labels","getRealPositions","_defaultPolylineProps","_defaultPointProps","_polygonProps","updatePointsLayer","addPointFromExisting","addAllVirtualEditPoints","updatePolygonsLayer","setPointsManually","newPoints","pointOrCartesian","newPoint","currentPoints","pos","currentPoint","nextIndex","nextPoint","midPoint","setMiddleVirtualPoint","firstP","secondP","midPointCartesian3","lerp","firstIndex","updateMiddleVirtualPoint","virtualEditPoint","prevPoint","changeVirtualPointToRealPoint","pointsCount","pointIndex","preIndex","prePoint","firstMidPoint","secMidPoint","renderPolylines","realPoints","addPoint","movingPoint","movePointFinish","editPoint","clampHeightTo3D","movePoint","toPosition","nextVirtualPoint","nextRealPoint","prevVirtualPoint","prevRealPoint","moveTempMovingPoint","movePolygon","startMovingPosition","draggedToPosition","lastDraggedToPosition","newPos","endMovePolygon","removePoint","pointToRemove","removePosition","getPointsCount","addLastPoint","getRealPoints","getPositionsHierarchy","PolygonHierarchy","getPositionsHierarchyCallbackProperty","findIndex","line","PolygonsManagerService","polygons","createEditablePolygon","editPolygonsLayer","editPointsLayer","editPolylinesLayer","editablePolygon","generateKey","possible","charAt","floor","random","DEFAULT_POLYGON_OPTIONS","addPointEvent","addLastPointEvent","removePointEvent","dragPointEvent","dragShapeEvent","allowDrag","withAlpha","pixelSize","virtualPointPixelSize","showVirtual","CORNFLOWERBLUE","fill","classificationType","ClassificationType","BOTH","clampToGround","clampHeightTo3DOptions","clampToTerrain","PolygonsEditorService","updateSubject","updatePublisher","observablesMap","cameraService","polygonsManager","cesiumScene","onUpdate","screenToPosition","cartesian2","cartesian3PickPosition","ray","getPickRay","clampToHeight","setOptions","clientEditSubject","editAction","editMode","EditModes","finishedCreate","EditActions","mouseMoveRegistration","addPointRegistration","addLastPointRegistration","editorObservable","createEditorObservable","updatedPosition","allPositions","find","updateValue","getPoints","maximumNumberOfPoints","switchToEditMode","changeMode","editPolygon","edit","editSubject","editObservable","shapeDragRegistration","pointDragRegistration","pointRemoveRegistration","_b","updatedPoint","endDragPosition","startDragPosition","draggedPosition","observables","warn","defaultClone","parse","pickPositionSupported","clampToHeightSupported","pickTranslucentDepth","CLAMP_TO_GROUND","RELATIVE_TO_GROUND","observableToExtend","obs","enable","disable","setManually","setLabelsRenderFn","labelsRenderFn","updateLabels","getCurrentPoints","getEditValue","getLabels","PolygonsEditorComponent","polygonsEditor","editPoints$","editPolylines$","editPolygons$","startListeningToEditorUpdates","handleCreateUpdates","handleEditUpdates","getLabelId","renderEditLabels","editLabelsRenderFn","removeEditLabels","enableEdit","getPointSize","getPointShow","EditArc","_arcProps","_center","_radius","_delta","_angle","updateCenter","EditableCircle","circlesLayer","arcsLayer","_circleProps","circleProps","_pointProps","_radiusPoint","radiusPoint","centerPointProp","radiusPointProp","circleProp","_outlineArc","getRadius","createOutlineArc","updateArcsLayer","updateCirclesLayer","moveCircle","dragStartPosition","dragEndPosition","newCenterPosition","getCenter","getRadiusCallbackProperty","getCenterCallbackProperty","getRadiusPoint","CirclesManagerService","circles","createEditableCircle","editCirclesLayer","editArcsLayer","circleOptions","editableCircle","circle","DEFAULT_CIRCLE_OPTIONS","outline","CirclesEditorService","circlesManager","getCircleProperties","editCircle","pointIsCenter","getCenterPoint","getCenterPosition","getRadiusPosition","CirclesEditorComponent","circlesEditor","editCircles$","editArcs$","EditableEllipse","ellipsesLayer","_rotation","_minorRadiusPoints","_ellipseProps","ellipseProps","_majorRadiusPoint","midpoint","_minorRadius","getMinorRadiusPointPosition","getMajorRadiusPointPosition","majorRadius","minorRadius","ellipseProp","_majorRadius","majorRadiusPosition","updateMinorRadiusEditPoints","updateEllipsesLayer","updateRotation","transformToEllipse","getMajorRadius","newRadius","circleToEllipseTransformation","majorRadiusPoint","moveEllipse","getRotation","endMoveEllipse","getMinorRadius","azimuthInDegrees","getRotationCallbackProperty","getMinorRadiusCallbackProperty","getMajorRadiusCallbackProperty","EllipsesManagerService","ellipses","createEditableEllipse","editEllipsesLayer","ellipseOptions","editableEllipse","DEFAULT_ELLIPSE_OPTIONS","circleToEllipseTransformEvent","circleToEllipseTransformEventModifier","CesiumEventModifier","EllipsesEditorService","ellipsesManager","editEllipse","addSecondRadiusRegistration","getEllipseProperties","minorRadiusPointPosition","majorRadiusPointPosition","EllipsesEditorComponent","ellipsesEditor","editEllipses$","EditablePolyline","editOptions","moveShape","endMoveShape","EditorObservable","PolylineEditorObservable","PolygonEditorObservable","CircleEditorObservable","EllipseEditorObservable","HippodromeEditorObservable","EditableHippodrome","hippodromeLayer","hippodromeProps","_hippodromeProps","createHeightEditPoints","updateHippdromeLayer","widthMeters","secP","bearingDeg","upAzimuth","createMiddleEditablePoint","downAzimuth","azimuth","upEditCartesian3","changeWidthByNewPoint","normalizedBearingDeb","bearingDegHippodromeDots","fixedBearingDeg","distanceMeters","radiusWidth","endMovePoint","getRealPositionsCallbackProperty","getWidth","DEFAULT_POLYLINE_OPTIONS","PolylinesEditorService","polylinesManager","polylineOptions","editPolyline","PolylinesManagerService","createEditablePolyline","editablePolyline","PolylinesEditorComponent","polylinesEditor","polylineLabels$","polylineLabelsLayer","HippodromeManagerService","hippodromes","createEditableHippodrome","editHippodromeLayer","hippodromeEditOptions","editableHippodrome","hippodrome","DEFAULT_HIPPODROME_OPTIONS","HippodromeEditorService","managerService","hippodromeManager","hippodromeOptions","isFirstPoint","editHippodrome","firstPosition","secondPosition","firstPointProp","secondPointProp","getCurrentWidth","HippodromeEditorComponent","hippodromesEditor","hippodromesManager","editHippodromes$","editHippodromesLayer","DraggableToMapService","mainSubject","setCoordinateConverter","drag","imageSrc","cancel","imgElement","src","visibility","createDragObservable","dragObservable","clientWidth","clientHeight","dragUpdates","pointerUp","observableFromEvent","moveObservable","initialScreenPosition","mapPosition","DraggableToMapDirective","el","iconDragService","draggableToMap","onMouseDown","HostListener","AcToolbarComponent","onDrag","dragStyle","height.px","width.px","listenForDragging","dragSubscription","mouseDown$","mouseMove$","mouseUp$","drag$","DragIconComponent","AcToolbarButtonComponent","onClick","RangeAndBearingComponent","polylineEditor","lineEditOptions","labelsStyle","distanceLabelsStyle","bearingLabelsStyle","_d","_e","_f","bearingStringFn","distanceStringFn","rnb","totalDistance","previousPosition","bearing","toFixed","MIDDLE","RIGHT","ZoomToRectangleService","mapsZoomElements","animationDurationInSeconds","resetKeyCode","borderStyle","autoDisableOnZoom","threshold","keepRotation","mouseButton","MouseButtons","activate","mapZoomData","borderElement","mouse","endX","endY","startX","startY","onmousedown","button","onStart","rect","offsetX","clientX","offsetY","clientY","border","onmouseup","zoomApplied","zoomCameraToRectangle","onComplete","onmousemove","resetOnEscapePress","resetOnEscapePressFunc","animationDuration","cartesian1","cartographic1","cartographic2","AngularCesiumWidgetsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ViewerFactory {\n  cesium: any;\n\n\n  constructor() {\n    this.cesium = Cesium;\n  }\n\n  /**\n   * Creates a viewer with default or custom options\n   * @param mapContainer - container to initialize the viewer on\n   * @param options - Options to create the viewer with - Optional\n   *\n   * @returns new viewer\n   */\n  createViewer(mapContainer: HTMLElement, options?: any) {\n    let viewer = null;\n    if (options) {\n      viewer = new this.cesium.Viewer(mapContainer, {\n        contextOptions: {\n          webgl: {preserveDrawingBuffer: true}\n        },\n        ...options\n      });\n    } else {\n      viewer = new this.cesium.Viewer(mapContainer,\n        {\n          contextOptions: {\n            webgl: {preserveDrawingBuffer: true}\n          },\n        });\n    }\n\n    return viewer;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * ```typescript\n * constructor(viewerConf :ViewerConfiguration ) {\n *   viewerConf.viewerOptions = { timeline: false };\n * }\n * ```\n * notice this configuration will be for all <ac-maps> in your component.\n */\n@Injectable()\nexport class ViewerConfiguration {\n  /**\n   * cesium viewer options According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n   */\n  private _viewerOptions: object | object[];\n  private _viewerModifier: Function | Function[];\n  private nextViewerOptionsIndex = 0;\n  private nextViewerModifierIndex = 0;\n\n  get viewerOptions(): object | object[] {\n    return this._viewerOptions;\n  }\n\n  Ã;\n\n  getNextViewerOptions(): object | object[] {\n    if (this._viewerOptions instanceof Array) {\n      return this._viewerOptions[this.nextViewerOptionsIndex++];\n    } else {\n      return this._viewerOptions;\n    }\n  }\n\n  /**\n   * Can be used to set initial map viewer options.\n   * If there is more than one map you can give the function an array of options.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerOptions(value: object | object[]) {\n    this._viewerOptions = value;\n  }\n\n  get viewerModifier(): Function | Function[] {\n    return this._viewerModifier;\n  }\n\n  getNextViewerModifier(): Function | Function[] {\n    if (this._viewerModifier instanceof Array) {\n      return this._viewerModifier[this.nextViewerModifierIndex++];\n    } else {\n      return this._viewerModifier;\n    }\n  }\n\n  /**\n   * Can be used to set map viewer options after the map has been initialized.\n   * If there is more than one map you can give the function an array of functions.\n   * The map initialized first will be set with the first option object in the options array and so on.\n   */\n  set viewerModifier(value: Function | Function[]) {\n    this._viewerModifier = value;\n  }\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { ViewerFactory } from '../viewer-factory/viewer-factory.service';\nimport { ViewerConfiguration } from '../viewer-configuration/viewer-configuration.service';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  Service that initialize cesium viewer and expose cesium viewer and scene.\n */\n@Injectable()\nexport class CesiumService {\n  private cesiumViewer: any;\n  private map: AcMapComponent;\n\n  constructor(private ngZone: NgZone, private viewerFactory: ViewerFactory, @Optional() private viewerConfiguration: ViewerConfiguration) {\n  }\n\n  init(mapContainer: HTMLElement, map: AcMapComponent) {\n    this.map = map;\n    this.ngZone.runOutsideAngular(() => {\n      const options = this.viewerConfiguration ? this.viewerConfiguration.getNextViewerOptions() : undefined;\n      this.cesiumViewer = this.viewerFactory.createViewer(mapContainer, options);\n\n      const viewerModifier = this.viewerConfiguration && this.viewerConfiguration.getNextViewerModifier();\n      if (typeof viewerModifier === 'function') {\n        viewerModifier(this.cesiumViewer);\n      }\n    });\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewe\n   * @returns cesiumViewer\n   */\n  getViewer() {\n    return this.cesiumViewer;\n  }\n\n  /**\n   * For more information see https://cesiumjs.org/Cesium/Build/Documentation/Scene.html?classFilter=scene\n   * @returns cesium scene\n   */\n  getScene() {\n    return this.cesiumViewer.scene;\n  }\n\n  /**\n   * For more information see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\n   * @returns cesium canvas\n   */\n  getCanvas(): HTMLCanvasElement {\n    return this.cesiumViewer.canvas as HTMLCanvasElement;\n  }\n\n  getMap(): AcMapComponent {\n    return this.map;\n  }\n}\n","/**\n * Fix for the constant entity shadowing.\n * PR in Cesium repo: https://github.com/AnalyticalGraphicsInc/cesium/pull/5736\n */\n\n// tslint:disable\nconst AssociativeArray = Cesium.AssociativeArray;\nconst Color = Cesium.Color;\nconst ColorGeometryInstanceAttribute = Cesium.ColorGeometryInstanceAttribute;\nconst defined = Cesium.defined;\nconst DistanceDisplayCondition = Cesium.DistanceDisplayCondition;\nconst DistanceDisplayConditionGeometryInstanceAttribute = Cesium.DistanceDisplayConditionGeometryInstanceAttribute;\nconst ShowGeometryInstanceAttribute = Cesium.ShowGeometryInstanceAttribute;\nconst Primitive = Cesium.Primitive;\nconst ShadowMode = Cesium.ShadowMode;\nconst BoundingSphereState = Cesium.BoundingSphereState;\nconst ColorMaterialProperty = Cesium.ColorMaterialProperty;\nconst MaterialProperty = Cesium.MaterialProperty;\nconst Property = Cesium.Property;\n\nvar colorScratch = new Color();\nvar distanceDisplayConditionScratch = new DistanceDisplayCondition();\nvar defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, translucent, appearanceType, depthFailAppearanceType, depthFailMaterialProperty, closed, shadows) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n  \n  var removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(Batch.prototype.onMaterialChanged, this);\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  var material = this.depthFailMaterialProperty;\n  var updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  var id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (!updater.hasConstantFill || !updater.fillMaterialProperty.isConstant || !Property.isConstant(updater.distanceDisplayConditionProperty)) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    var that = this;\n    this.subscriptions.set(id, updater.entity.definitionChanged.addEventListener(function (entity, propertyName, newValue, oldValue) {\n      if (propertyName === 'isShowing') {\n        that.showsUpdated.set(updater.id, updater);\n      }\n    }));\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    var unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n  }\n};\n\nBatch.prototype.update = function (time) {\n  var isUpdated = true;\n  var removedCount = 0;\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  var attributes;\n  var i;\n  \n  if (this.createPrimitive) {\n    var geometries = this.geometry.values;\n    var geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n      \n      for (i = 0; i < geometriesLength; i++) {\n        var geometryItem = geometries[i];\n        var originalAttributes = geometryItem.attributes;\n        attributes = this.attributes.get(geometryItem.id.id);\n        \n        if (defined(attributes)) {\n          if (defined(originalAttributes.show)) {\n            originalAttributes.show.value = attributes.show;\n          }\n          if (defined(originalAttributes.color)) {\n            originalAttributes.color.value = attributes.color;\n          }\n          if (defined(originalAttributes.depthFailColor)) {\n            originalAttributes.depthFailColor.value = attributes.depthFailColor;\n          }\n        }\n      }\n      \n      var depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed\n        });\n      }\n      \n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries,\n        appearance: new this.appearanceType({\n          flat: this.shadows === ShadowMode.DISABLED || this.shadows === ShadowMode.CAST_ONLY,\n          translucent: this.translucent,\n          closed: this.closed\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      var oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n    \n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    \n    if (defined(this.depthFailAppearanceType) && !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)) {\n      this.depthFailMaterial = MaterialProperty.getValue(time, this.depthFailMaterialProperty, this.depthFailMaterial);\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n    \n    var updatersWithAttributes = this.updatersWithAttributes.values;\n    var length = updatersWithAttributes.length;\n    var waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      var updater = updatersWithAttributes[i];\n      var instance = this.geometry.get(updater.id);\n      \n      attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n      \n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        var colorProperty = updater.fillMaterialProperty.color;\n        var resultColor = Property.getValueOrDefault(colorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(resultColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(resultColor, attributes.color);\n          if ((this.translucent && attributes.color[3] === 255) || (!this.translucent && attributes.color[3] !== 255)) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n      \n      if (defined(this.depthFailAppearanceType) && updater.depthFailMaterialProperty instanceof ColorMaterialProperty && (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)) {\n        var depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        var depthColor = Property.getValueOrDefault(depthFailColorProperty, time, Color.WHITE, colorScratch);\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(depthColor, attributes._lastDepthFailColor);\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(depthColor, attributes.depthFailColor);\n        }\n      }\n      \n      var show = updater.entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      var currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n      }\n      \n      var distanceDisplayConditionProperty = updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        var distanceDisplayCondition = Property.getValueOrDefault(distanceDisplayConditionProperty, time, defaultDistanceDisplayCondition, distanceDisplayConditionScratch);\n        if (!DistanceDisplayCondition.equals(distanceDisplayCondition, attributes._lastDistanceDisplayCondition)) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(distanceDisplayCondition, attributes._lastDistanceDisplayCondition);\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(distanceDisplayCondition, attributes.distanceDisplayCondition);\n        }\n      }\n    }\n    \n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  var showsUpdated = this.showsUpdated.values;\n  var length = showsUpdated.length;\n  for (var i = 0; i < length; i++) {\n    var updater = showsUpdated[i];\n    var instance = this.geometry.get(updater.id);\n    \n    var attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n    \n    var show = updater.entity.isShowing;\n    var currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(show, attributes.show);\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  var primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  var attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (!defined(attributes) || !defined(attributes.boundingSphere) ||//\n    (defined(attributes.show) && attributes.show[0] === 0)) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  var primitives = this.primitives;\n  \n  var primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n  \n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\nBatch.prototype.destroy = function () {\n  var primitive = this.primitive;\n  var primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  var oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n\nlet wasFixed = false;\n\nexport function fixCesiumEntitiesShadows() {\n  if (wasFixed) {\n    return;\n  }\n  Cesium.StaticGeometryColorBatch.prototype.add = function (time: any, updater: any) {\n    var items;\n    var translucent;\n    var instance = updater.createFillGeometryInstance(time);\n    if (instance.attributes.color.value[3] === 255) {\n      items = this._solidItems;\n      translucent = false;\n    } else {\n      items = this._translucentItems;\n      translucent = true;\n    }\n    \n    var length = items.length;\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (item.isMaterial(updater)) {\n        item.add(updater, instance);\n        return;\n      }\n      \n    }\n    \n    var batch: any = new Batch(this._primitives, translucent, this._appearanceType, this._depthFailAppearanceType, updater.depthFailMaterialProperty, this._closed, this._shadows);\n    batch.add(updater, instance);\n    items.push(batch);\n  };\n  wasFixed = true;\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { fixCesiumEntitiesShadows } from './StaticGeometryColorBatch';\n\nexport const ANGULAR_CESIUM_CONFIG = new InjectionToken('ANGULAR_CESIUM_CONFIG');\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(@Optional() @Inject(ANGULAR_CESIUM_CONFIG) private config: any) {\n    const fixEntitiesShadows = config ? config.fixEntitiesShadows : true;\n    if (fixEntitiesShadows !== false) {\n      fixCesiumEntitiesShadows();\n    }\n  }\n}\n","/**\n * Cesium scene modes\n */\nexport enum SceneMode {\n  SCENE3D,\n  COLUMBUS_VIEW,\n  SCENE2D,\n  PERFORMANCE_SCENE2D\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { SceneMode } from '../../models/scene-mode.enum';\n\n/**\n *  The service exposes the scene's camera and screenSpaceCameraController\n *  SceneMode.PERFORMANCE_SCENE2D -  is a 3D scene mode that acts like Cesium 2D mode,\n *  but is more efficient performance wise.\n */\n@Injectable()\nexport class CameraService {\n  static PERFORMANCE_2D_ALTITUDE = 25000000;\n\n  private viewer: any;\n  private scene: any;\n  private camera: any;\n  private screenSpaceCameraController: any;\n  private morphListenerCancelFn: any;\n  private lastRotate: boolean;\n  private lastTilt: boolean;\n  private lastLook: boolean;\n  private isSceneModePerformance2D = false;\n\n  constructor() {\n  }\n\n  init(cesiumService: CesiumService) {\n    this.viewer = cesiumService.getViewer();\n    this.scene = cesiumService.getScene();\n    this.screenSpaceCameraController = this.scene.screenSpaceCameraController;\n    this.camera = this.scene.camera;\n    this.lastRotate = this.screenSpaceCameraController.enableRotate;\n    this.lastTilt = this.screenSpaceCameraController.enableTilt;\n    this.lastLook = this.screenSpaceCameraController.enableLook;\n  }\n\n  _listenToSceneModeMorph(callback: Function) {\n    this.morphListenerCancelFn = this.scene.morphStart.addEventListener(\n      callback\n    );\n  }\n\n  _revertCameraProperties() {\n    this.isSceneModePerformance2D = false;\n    this.enableTilt(this.lastTilt);\n    this.enableRotate(this.lastRotate);\n    this.enableLook(this.lastLook);\n  }\n\n  /**\n   * Gets the scene's camera\n   */\n  getCamera() {\n    return this.camera;\n  }\n\n  /**\n   * Gets the scene's screenSpaceCameraController\n   */\n  getScreenSpaceCameraController() {\n    return this.screenSpaceCameraController;\n  }\n\n  /**\n   * Gets the minimum zoom value in meters\n   */\n  getMinimumZoom(): number {\n    return this.screenSpaceCameraController.minimumZoomDistance;\n  }\n\n  /**\n   * Sets the minimum zoom value in meters\n   * @param zoom amount\n   */\n  setMinimumZoom(amount: number): void {\n    this.screenSpaceCameraController.minimumZoomDistance = amount;\n  }\n\n  /**\n   * Gets the maximum zoom value in meters\n   */\n  getMaximumZoom(): number {\n    return this.screenSpaceCameraController.maximumZoomDistance;\n  }\n\n  /**\n   * Sets the maximum zoom value in meters\n   * @param zoom amount\n   */\n  setMaximumZoom(amount: number): void {\n    this.screenSpaceCameraController.maximumZoomDistance = amount;\n  }\n\n  /**\n   * Sets if the camera is able to tilt\n   */\n  enableTilt(tilt: boolean): void {\n    this.screenSpaceCameraController.enableTilt = tilt;\n  }\n\n  /**\n   * Sets if the camera is able to rotate\n   */\n  enableRotate(rotate: boolean): void {\n    this.screenSpaceCameraController.enableRotate = rotate;\n  }\n\n  /**\n   * Sets if the camera is able to free-look\n   */\n  enableLook(lock: boolean): void {\n    this.screenSpaceCameraController.enableLook = lock;\n  }\n\n  /**\n   * Sets if the camera is able to translate\n   */\n  enableTranslate(translate: boolean): void {\n    this.screenSpaceCameraController.enableTranslate = translate;\n  }\n\n  /**\n   * Sets if the camera is able to zoom\n   */\n  enableZoom(zoom: boolean): void {\n    this.screenSpaceCameraController.enableZoom = zoom;\n  }\n\n  /**\n   * Sets if the camera receives inputs\n   */\n  enableInputs(inputs: boolean): void {\n    this.screenSpaceCameraController.enableInputs = inputs;\n  }\n\n  /**\n   * Sets the map's SceneMode\n   * @param sceneMode - The SceneMode to morph the scene into.\n   * @param duration - The duration of scene morph animations, in seconds\n   */\n  setSceneMode(sceneMode: SceneMode, duration?: number) {\n    switch (sceneMode) {\n      case SceneMode.SCENE3D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphTo3D(duration);\n\n        break;\n      }\n      case SceneMode.COLUMBUS_VIEW: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n\n        this.scene.morphToColumbusView(duration);\n\n        break;\n      }\n      case SceneMode.SCENE2D: {\n        if (this.isSceneModePerformance2D) {\n          this._revertCameraProperties();\n        }\n        this.scene.morphTo2D(duration);\n\n        break;\n      }\n      case SceneMode.PERFORMANCE_SCENE2D: {\n        this.isSceneModePerformance2D = true;\n        this.lastLook = this.screenSpaceCameraController.enableLook;\n        this.lastTilt = this.screenSpaceCameraController.enableTilt;\n        this.lastRotate = this.screenSpaceCameraController.enableRotate;\n        this.screenSpaceCameraController.enableTilt = false;\n        this.screenSpaceCameraController.enableRotate = false;\n        this.screenSpaceCameraController.enableLook = false;\n        if (this.morphListenerCancelFn) {\n          this.morphListenerCancelFn();\n        }\n        this.scene.morphToColumbusView(duration);\n        const morphCompleteEventListener = this.scene.morphComplete.addEventListener(\n          () => {\n            this.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(\n                0.0,\n                0.0,\n                Math.min(\n                  CameraService.PERFORMANCE_2D_ALTITUDE,\n                  this.getMaximumZoom()\n                )\n              ),\n              orientation: {\n                pitch: Cesium.Math.toRadians(-90)\n              }\n            });\n            morphCompleteEventListener();\n            this._listenToSceneModeMorph(\n              this._revertCameraProperties.bind(this)\n            );\n          }\n        );\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  cameraFlyTo(options: any) {\n    return this.camera.flyTo(options);\n  }\n\n  /**\n   * Flies the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#flyTo\n   * @returns Promise<boolean>\n   */\n  flyTo(target: any, options?: any) {\n    return this.viewer.flyTo(target, options);\n  }\n\n  /**\n   * Zooms amount along the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomIn\n   */\n  zoomIn(amount: number) {\n    return this.camera.zoomIn(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zooms amount along the opposite direction of the camera's view vector.\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html#zoomOut\n   */\n  zoomOut(amount: number) {\n    return this.camera.zoomOut(amount || this.camera.defaultZoomAmount);\n  }\n\n  /**\n   * Zoom the camera to a target\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#zoomTo\n   * @returns Promise<boolean>\n   */\n  zoomTo(target: any, offset?: any) {\n    return this.viewer.zoomTo(target, offset);\n  }\n\n  /**\n   * Flies the camera to a destination\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=camera#setView\n   * @param options viewer options\n   */\n  setView(options: any) {\n    this.camera.setView(options);\n  }\n\n  /**\n   * Set camera's rotation\n   */\n  setRotation(degreesInRadians: number) {\n    this.setView({orientation: {heading: degreesInRadians}});\n  }\n\n  /**\n   * Locks or unlocks camera rotation\n   */\n  lockRotation(lock: boolean) {\n    this.scene.screenSpaceCameraController.enableRotate = !lock;\n  }\n\n  /**\n   * Make the camera track a specific entity\n   * API: https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=viewer#trackedEntity\n   * @param cesiumEntity - cesium entity( billboard, polygon...) to track\n   * @param options - track entity options\n   */\n  trackEntity(\n    cesiumEntity?: any,\n    options?: { flyTo: boolean; flyToDuration?: number; altitude?: number }\n  ) {\n    const flyTo = (options && options.flyTo) || false;\n\n    this.viewer.trackedEntity = undefined;\n    return new Promise(resolve => {\n      if (flyTo) {\n        const flyToDuration = (options && options.flyToDuration) || 1;\n        const altitude = (options && options.altitude) || 10000;\n\n        // Calc entity flyTo position and wanted altitude\n        const entPosCar3 = cesiumEntity.position.getValue(Cesium.JulianDate.now());\n        const entPosCart = Cesium.Cartographic.fromCartesian(entPosCar3);\n        const zoomAmount = altitude - entPosCart.height;\n        entPosCart.height = altitude;\n        const flyToPosition = Cesium.Cartesian3.fromRadians(\n          entPosCart.longitude,\n          entPosCart.latitude,\n          entPosCart.height\n        );\n\n        this.cameraFlyTo({\n          duration: flyToDuration,\n          destination: flyToPosition,\n          complete: () => {\n            this.viewer.trackedEntity = cesiumEntity;\n            setTimeout(() => {\n              if (zoomAmount > 0) {\n                this.camera.zoomOut(zoomAmount);\n              } else {\n                this.camera.zoomIn(zoomAmount);\n              }\n            }, 0);\n            resolve();\n          }\n        });\n      } else {\n        this.viewer.trackedEntity = cesiumEntity;\n        resolve();\n      }\n    });\n  }\n\n  untrackEntity() {\n    this.trackEntity();\n  }\n}\n","/**\n * Event options for registration on map-event-manager.\n */\nexport enum CesiumEvent {\n  MOUSE_MOVE = Cesium.ScreenSpaceEventType.MOUSE_MOVE,\n  LEFT_CLICK = Cesium.ScreenSpaceEventType.LEFT_CLICK,\n  LEFT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK,\n  LEFT_DOWN = Cesium.ScreenSpaceEventType.LEFT_DOWN,\n  LEFT_UP = Cesium.ScreenSpaceEventType.LEFT_UP,\n  MIDDLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_CLICK,\n  MIDDLE_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.MIDDLE_DOUBLE_CLICK,\n  MIDDLE_DOWN = Cesium.ScreenSpaceEventType.MIDDLE_DOWN,\n  MIDDLE_UP = Cesium.ScreenSpaceEventType.MIDDLE_UP,\n  PINCH_START = Cesium.ScreenSpaceEventType.PINCH_START,\n  PINCH_END = Cesium.ScreenSpaceEventType.PINCH_END,\n  PINCH_MOVE = Cesium.ScreenSpaceEventType.PINCH_MOVE,\n  RIGHT_CLICK = Cesium.ScreenSpaceEventType.RIGHT_CLICK,\n  RIGHT_DOUBLE_CLICK = Cesium.ScreenSpaceEventType.RIGHT_DOUBLE_CLICK,\n  RIGHT_DOWN = Cesium.ScreenSpaceEventType.RIGHT_DOWN,\n  RIGHT_UP = Cesium.ScreenSpaceEventType.RIGHT_UP,\n  WHEEL = Cesium.ScreenSpaceEventType.WHEEL,\n  LONG_LEFT_PRESS = 110,\n  LONG_RIGHT_PRESS,\n  LONG_MIDDLE_PRESS,\n  LEFT_CLICK_DRAG,\n  RIGHT_CLICK_DRAG,\n  MIDDLE_CLICK_DRAG,\n}\n","/**\n *  NO_PICK,    - will not pick entities\n *  PICK_FIRST  - first entity will be picked . use Cesium.scene.pick()\n *  PICK_ONE    - in case a few entities are picked plonter is resolved . use Cesium.scene.drillPick()\n *  PICK_ALL    - all entities are picked. use Cesium.scene.drillPick()\n */\nexport enum PickOptions {\n  NO_PICK,\n  PICK_FIRST,\n  PICK_ONE,\n  PICK_ALL\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { ContextMenuOptions } from '../../models/context-menu-options';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\n *\n * notice, `data` will be injected to your custom menu component into the `data` field in the component.\n * __Usage :__\n * ```\n *  ngOnInit() {\n *   this.clickEvent$ = this.eventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.PICK_ONE });\n *   this.clickEvent$.subscribe(result => {\n *    if (result.entities) {\n *      const pickedMarker = result.entities[0];\n *      this.contextMenuService.open(MapContextmenuComponent, pickedMarker.position, {\n *        data: {\n *          myData: data,\n *          onDelete: () => this.delete(pickedMarker.id)\n *        }\n *      });\n *    }\n *   });\n *  }\n *\n *\n *  private delete(id) {\n *    this.mapMenu.close();\n *    this.detailedSiteService.removeMarker(id);\n *  }\n * ```\n */\n@Injectable()\nexport class ContextMenuService {\n  private _showContextMenu = false;\n  private _options: ContextMenuOptions;\n  private _position: Cartesian3;\n  private _content: BasicContextMenu;\n  private mapEventsManager: MapEventsManagerService;\n  private leftClickRegistration: DisposableObservable<any>;\n  private leftClickSubscription: Subscription;\n  private _contextMenuChangeNotifier = new EventEmitter();\n  private _onOpen = new EventEmitter();\n  private _onClose = new EventEmitter();\n  private _defaultContextMenuOptions: ContextMenuOptions = {\n    closeOnLeftCLick: true,\n    closeOnLeftClickPriority: 10,\n  };\n\n  get contextMenuChangeNotifier(): EventEmitter<any> {\n    return this._contextMenuChangeNotifier;\n  }\n\n  get showContextMenu(): boolean {\n    return this._showContextMenu;\n  }\n\n  get options(): ContextMenuOptions {\n    return this._options;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  get content(): BasicContextMenu {\n    return this._content;\n  }\n\n  get onOpen(): EventEmitter<any> {\n    return this._onOpen;\n  }\n\n  get onClose(): EventEmitter<any> {\n    return this._onClose;\n  }\n\n\n  init(mapEventsManager: MapEventsManagerService) {\n    this.mapEventsManager = mapEventsManager;\n  }\n\n  open<D>(contentComponent: any, position: Cartesian3, options: ContextMenuOptions<D> = {}) {\n    this.close();\n    this._content = contentComponent;\n    this._position = position;\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\n    this._showContextMenu = true;\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\n      this.leftClickRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK,\n        pick: PickOptions.NO_PICK,\n        priority: this._options.closeOnLeftClickPriority,\n      });\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\n        this.leftClickSubscription.unsubscribe();\n        this.close();\n      });\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onOpen.emit();\n  }\n\n  close() {\n    this._content = undefined;\n    this._position = undefined;\n    this._options = undefined;\n    this._showContextMenu = false;\n    if (this.leftClickRegistration) {\n      this.leftClickRegistration.dispose();\n      this.leftClickRegistration = undefined;\n    }\n    if (this.leftClickSubscription) {\n      this.leftClickSubscription.unsubscribe();\n      this.leftClickSubscription = undefined;\n    }\n\n    this._contextMenuChangeNotifier.emit();\n    this._onClose.emit();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport * as geodesy from 'geodesy';\nimport { hemisphere, LatLon, LatLonEllipsoidal, Utm } from 'geodesy';\nimport { Cartesian3 } from '../../models/cartesian3';\n\nconst LatLonVectors = geodesy['LatLonVectors']; // doesnt exists on typings\n\nwindow['geodesy'] = geodesy;\n\n/**\n *  Given different types of coordinates, we provide you a service converting those types to the most common other types.\n *  We are using the geodesy implementation of UTM conversion. see: https://github.com/chrisveness/geodesy.\n *\n * @example\n * import { Component, OnInit } from '@angular/core';\n * import { CoordinateConverter } from 'angular2-cesium';\n *\n * @Component({\n * \t\tselector:'my-component',\n * \t\ttemplate:'<div>{{showCartographic}}</div>',\n * \t\tproviders:[CoordinateConverter]\n * })\n * export class MyComponent implements OnInit {\n * \t\tshowCartographic;\n *\n * \t\tconstructor(private coordinateConverter:CoordinateConverter){\n * \t\t}\n *\n * \t\tngOnInit(){\n * \t\t\tthis.showCartographic = this.coordinateConverter.degreesToCartographic(5, 5, 5);\n *  }\n * }\n *\n */\n@Injectable()\nexport class CoordinateConverter {\n  constructor(@Optional() private cesiumService?: CesiumService) {\n  }\n\n  static cartesian3ToLatLon(cartesian3: Cartesian3, ellipsoid?: any): {lon: number, lat: number; height: number} {\n    const cart = Cesium.Cartographic.fromCartesian(cartesian3, ellipsoid);\n    return {\n      lon: Cesium.Math.toDegrees(cart.longitude),\n      lat: Cesium.Math.toDegrees(cart.latitude),\n      height: cart.height\n    };\n  }\n\n  screenToCartesian3(screenPos: { x: number, y: number }, addMapCanvasBoundsToPos?: boolean) {\n    if (!this.cesiumService) {\n      throw new Error('ANGULAR2-CESIUM - Cesium service should be provided in order' +\n        ' to do screen position calculations');\n    } else {\n      const screenPosition = { ...screenPos };\n      if (addMapCanvasBoundsToPos) {\n        const mapBounds = this.cesiumService.getViewer().canvas.getBoundingClientRect();\n        screenPosition.x += mapBounds.left;\n        screenPosition.y += mapBounds.top;\n      }\n\n      const camera = this.cesiumService.getViewer().camera;\n      return camera.pickEllipsoid(screenPosition);\n    }\n  }\n\n  screenToCartographic(screenPos: { x: number, y: number }, ellipsoid?: any) {\n    return this.cartesian3ToCartographic(this.screenToCartesian3(screenPos), ellipsoid);\n  }\n\n  cartesian3ToCartographic(cartesian: Cartesian3, ellipsoid?: any) {\n    return Cesium.Cartographic.fromCartesian(cartesian, ellipsoid);\n  }\n\n  degreesToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromDegrees(longitude, latitude, height);\n  }\n\n  radiansToCartographic(longitude: number, latitude: number, height?: number) {\n    return Cesium.Cartographic.fromRadians(longitude, latitude, height);\n  }\n\n  degreesToUTM(longitude: number, latitude: number) {\n    return new LatLonEllipsoidal(latitude, longitude).toUtm();\n  }\n\n  UTMToDegrees(zone: number, hemisphereType: hemisphere, easting: number, northing: number) {\n    return this.geodesyToCesiumObject(new Utm(zone, hemisphereType, easting, northing).toLatLonE());\n  }\n\n  private geodesyToCesiumObject(geodesyRadians: LatLon) {\n    return {\n      longitude: geodesyRadians.lon,\n      latitude: geodesyRadians.lat,\n      height: geodesyRadians['height'] ? geodesyRadians['height'] : 0\n    };\n  }\n\n  /**\n   * middle point between two points\n   * @param first  (latitude,longitude) in radians\n   * @param second (latitude,longitude) in radians\n   */\n  midPointToCartesian3(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const middlePoint: any = firstPoint.midpointTo(secondPoint);\n\n    return Cesium.Cartesian3.fromDegrees(middlePoint.lon, middlePoint.lat);\n  }\n\n  middlePointByScreen(position0: Cartesian3, position1: Cartesian3): Cartesian3 {\n    const scene = this.cesiumService.getScene();\n    const screenPosition1 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position0);\n    const screenPosition2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position1);\n    const middleScreenPoint =\n      new Cesium.Cartesian2((screenPosition2.x + screenPosition1.x) / 2.0, (screenPosition2.y + screenPosition1.y) / 2.0);\n    return scene.pickPosition(middleScreenPoint);\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * * @return bearing in degrees\n   * @param first - {latitude,longitude} in radians\n   * @param second - {latitude,longitude} in radians\n   */\n  bearingTo(first: { latitude: number, longitude: number }, second: { latitude: number, longitude: number }) {\n    const toDeg = (rad: number) => Cesium.Math.toDegrees(rad);\n    const firstPoint = new LatLonVectors(toDeg(first.latitude), toDeg(first.longitude));\n    const secondPoint = new LatLonVectors(toDeg(second.latitude), toDeg(second.longitude));\n    const bearing = firstPoint.bearingTo(secondPoint);\n\n    return bearing;\n  }\n\n  /**\n   * initial bearing between two points\n   *\n   * @return bearing in degrees\n   */\n  bearingToCartesian(firstCartesian3: Cartesian3, secondCartesian3: Cartesian3) {\n    const firstCart = Cesium.Cartographic.fromCartesian(firstCartesian3);\n    const secondCart = Cesium.Cartographic.fromCartesian(secondCartesian3);\n\n    return this.bearingTo(firstCart, secondCart);\n  }\n}\n","/**\n *  Abstract drawer. All drawers extends this class.\n */\n\nexport abstract class BasicDrawerService {\n  protected _propsAssigner: Function;\n\n  constructor() {\n  }\n\n  abstract add(cesiumProps: any, ...args: any[]): any;\n\n  abstract update(primitive: any, cesiumProps: any, ...args: any[]): void;\n\n  abstract remove(primitive: any): void;\n\n  abstract removeAll(): void;\n\n  abstract setShow(showValue: boolean): void;\n\n  abstract init(options?: any): any;\n\n  setPropsAssigner(assigner: Function) {\n    this._propsAssigner = assigner;\n  }\n}\n","import { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\nexport abstract class PrimitivesDrawerService extends BasicDrawerService {\n  private _show = true;\n  private _primitiveCollectionWrap: any;\n  protected _cesiumCollection: any;\n  protected _propsAssigner: Function;\n\n  constructor(private drawerType: any, private cesiumService: CesiumService) {\n    super();\n  }\n\n  init() {\n    this._cesiumCollection = new this.drawerType();\n    this._primitiveCollectionWrap = new Cesium.PrimitiveCollection();\n    this._primitiveCollectionWrap.add(this._cesiumCollection);\n    this.cesiumService.getScene().primitives.add(this._primitiveCollectionWrap);\n  }\n\n  add(cesiumProps: any, ...args: any[]): any {\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(entity: any, cesiumProps: any, ...args: any[]) {\n    if (this._propsAssigner) {\n      this._propsAssigner(entity, cesiumProps);\n    } else {\n      Object.assign(entity, cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    this._cesiumCollection.remove(entity);\n  }\n\n  removeAll() {\n    this._cesiumCollection.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this._show = showValue;\n    this._primitiveCollectionWrap.show = showValue;\n  }\n\n  getShow(): boolean {\n    return this._show;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { Cartesian3 } from '../../models/cartesian3';\nimport { Vec3 } from '../../models/vec3';\n\n@Injectable()\nexport class GeoUtilsService {\n  static pointByLocationDistanceAndAzimuth(currentLocation: any, meterDistance: number, radianAzimuth: number, deprecated?) {\n    const distance = meterDistance / Cesium.Ellipsoid.WGS84.maximumRadius;\n    const cartographicLocation =\n      currentLocation instanceof Cesium.Cartesian3 ? Cesium.Cartographic.fromCartesian(currentLocation) : currentLocation;\n    const cartesianLocation =\n      currentLocation instanceof Cesium.Cartesian3\n        ? currentLocation\n        : Cesium.Cartesian3.fromRadians(currentLocation.longitude, currentLocation.latitude, currentLocation.height);\n\n    let resultPosition;\n    let resultDistance;\n    let counter = 0;\n    let distanceFactorRangeMax = 0.1;\n    let distanceFactorRangeMin = -0.1;\n    while (\n      counter === 0 ||\n      (counter < 16 && Math.max(resultDistance, meterDistance) / Math.min(resultDistance, meterDistance) > 1.000001)\n      ) {\n      const factor = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      resultPosition = GeoUtilsService._pointByLocationDistanceAndAzimuth(cartographicLocation, distance * (1 + factor), radianAzimuth);\n      resultDistance = this.distance(cartesianLocation, resultPosition);\n\n      if (resultDistance > meterDistance) {\n        distanceFactorRangeMax = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      } else {\n        distanceFactorRangeMin = distanceFactorRangeMin + (distanceFactorRangeMax - distanceFactorRangeMin) / 2;\n      }\n      counter++;\n    }\n\n    return resultPosition;\n  }\n\n  static _pointByLocationDistanceAndAzimuth(cartographicLocation: any, distance: number, radianAzimuth: number) {\n    const curLat = cartographicLocation.latitude;\n    const curLon = cartographicLocation.longitude;\n    const destinationLat = Math.asin(\n      Math.sin(curLat) * Math.cos(distance) + Math.cos(curLat) * Math.sin(distance) * Math.cos(radianAzimuth),\n    );\n\n    let destinationLon =\n      curLon +\n      Math.atan2(\n        Math.sin(radianAzimuth) * Math.sin(distance) * Math.cos(curLat),\n        Math.cos(distance) - Math.sin(curLat) * Math.sin(destinationLat),\n      );\n\n    destinationLon = ((destinationLon + 3 * Math.PI) % (2 * Math.PI)) - Math.PI;\n\n    return Cesium.Cartesian3.fromRadians(destinationLon, destinationLat);\n  }\n\n  static distance(pos0: Cartesian3, pos1: Cartesian3): number {\n    return Cesium.Cartesian3.distance(pos0, pos1);\n  }\n\n  static getPositionsDelta(position0: Cartesian3, position1: Cartesian3): Vec3 {\n    return {\n      x: position1.x - position0.x,\n      y: position1.y - position0.y,\n      z: position1.z - position0.z,\n    };\n  }\n\n  static addDeltaToPosition(position: Cartesian3, delta: Vec3, updateReference = false): Cartesian3 {\n    if (updateReference) {\n      position.x += delta.x;\n      position.y += delta.y;\n      position.z += delta.z;\n      const cartographic = Cesium.Cartographic.fromCartesian(position);\n      cartographic.height = 0;\n      const cartesian = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n      position.x = cartesian.x;\n      position.y = cartesian.y;\n      position.z = cartesian.z;\n      return position;\n    } else {\n      const cartesian = new Cesium.Cartesian3(position.x + delta.x, position.y + delta.y, position.z + delta.z);\n      const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n      cartographic.height = 0;\n      return Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height);\n    }\n  }\n\n  static middleCartesian3Point(position0: Cartesian3, position1: Cartesian3) {\n    return new Cesium.Cartesian3(position1.x - position0.x / 2, position1.y - position0.y / 2, position1.z - position0.z / 2);\n  }\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  screenPositionToCartesian3(screenPos: { x: number; y: number }) {\n    const camera = this.cesiumService.getViewer().camera;\n    return camera.pickEllipsoid(screenPos);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\n\n/**\n +  This drawer is responsible for drawing an arc over the Cesium map.\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\n */\n\n@Injectable()\nexport class ArcDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  _calculateArcPositions(cesiumProps: any) {\n    const quality = cesiumProps.quality || 18;\n    const delta = (cesiumProps.delta) / quality;\n    const pointsArray = [];\n    for (let i = 0; i < quality + 1; ++i) {\n      const point =\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\n      pointsArray.push(point);\n    }\n\n    return pointsArray;\n  }\n\n  _calculateTriangle(cesiumProps: any) {\n    return [\n      cesiumProps.center,\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\n    ];\n  }\n\n  _calculateArc(cesiumProps: any) {\n    const arcPoints = this._calculateArcPositions(cesiumProps);\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.positions = this._calculateArc(cesiumProps);\n    if (cesiumProps.color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.color;\n      cesiumProps.material = material;\n    }\n\n    return this._cesiumCollection.add(cesiumProps);\n  }\n\n  update(primitive: any, cesiumProps: any) {\n    if (!cesiumProps.constantColor && cesiumProps.color &&\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\n      primitive.material.uniforms.color = cesiumProps.color;\n    }\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\n    primitive.positions = this._calculateArc(cesiumProps);\n\n    return primitive;\n  }\n}\n","export enum GraphicsType {\n  ellipse = Cesium.EllipseGraphics,\n  ellipsoid = Cesium.EllipsoidGraphics,\n  polygon = Cesium.PolygonGraphics,\n  polyline = Cesium.PolylineGraphics,\n  polylineVolume = Cesium.PolylineVolumeGraphics,\n  box = Cesium.BoxGraphics,\n  corridor = Cesium.CorridorGraphics,\n  cylinder = Cesium.CylinderGraphics,\n  label = Cesium.LabelGraphics,\n  billboard = Cesium.BillboardGraphics,\n  model = Cesium.ModelGraphics,\n  path = Cesium.PathGraphics,\n  point = Cesium.PointGraphics,\n  rectangle = Cesium.RectangleGraphics,\n  wall = Cesium.WallGraphics,\n}\n","export class OptimizedEntityCollection {\n  private _updateRate: number;\n  private _collectionSize: number;\n  private _isSuspended = false;\n  private _isHardSuspend = false;\n  private _suspensionTimeout: any;\n  private _onEventSuspensionCallback: { once: boolean, callback: Function };\n  private _onEventResumeCallback: { once: boolean, callback: Function };\n\n  constructor(private entityCollection: any, collectionSize = -1, updateRate = -1) {\n    this._updateRate = updateRate;\n    this._collectionSize = collectionSize;\n\n  }\n\n  setShow(show: boolean) {\n    this.entityCollection.show = show;\n  }\n\n  get isSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  get updateRate(): number {\n    return this._updateRate;\n  }\n\n  set updateRate(value: number) {\n    this._updateRate = value;\n  }\n\n  get collectionSize(): number {\n    return this._collectionSize;\n  }\n\n  set collectionSize(value: number) {\n    this._collectionSize = value;\n  }\n\n  collection() {\n    return this.entityCollection;\n  }\n\n  isFree(): boolean {\n    return this._collectionSize < 1 || this.entityCollection.values.length < this._collectionSize;\n  }\n\n  add(entity: any) {\n    this.suspend();\n    return this.entityCollection.add(entity);\n  }\n\n  remove(entity: any) {\n    this.suspend();\n    return this.entityCollection.remove(entity);\n  }\n\n  removeNoSuspend(entity: any) {\n    this.entityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.suspend();\n    this.entityCollection.removeAll();\n  }\n\n  onEventSuspension(callback: Function, once = false): Function {\n    this._onEventSuspensionCallback = {callback, once};\n    return () => {\n      this._onEventSuspensionCallback = undefined;\n    };\n  }\n\n  onEventResume(callback: Function, once = false): Function {\n    this._onEventResumeCallback = {callback, once};\n    if (!this._isSuspended) {\n      this.triggerEventResume();\n    }\n    return () => {\n      this._onEventResumeCallback = undefined;\n    };\n  }\n\n  triggerEventSuspension() {\n    if (this._onEventSuspensionCallback !== undefined) {\n      const callback = this._onEventSuspensionCallback.callback;\n      if (this._onEventSuspensionCallback.once) {\n        this._onEventSuspensionCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  triggerEventResume() {\n    if (this._onEventResumeCallback !== undefined) {\n      const callback = this._onEventResumeCallback.callback;\n      if (this._onEventResumeCallback.once) {\n        this._onEventResumeCallback = undefined;\n      }\n      callback();\n    }\n  }\n\n  public suspend() {\n    if (this._updateRate < 0) {\n      return;\n    }\n    if (this._isHardSuspend) {\n      return;\n    }\n    if (!this._isSuspended) {\n      this._isSuspended = true;\n      this.entityCollection.suspendEvents();\n      this.triggerEventSuspension();\n      this._suspensionTimeout = setTimeout(() => {\n        this.entityCollection.resumeEvents();\n        this.triggerEventResume();\n        this._isSuspended = false;\n        this._suspensionTimeout = undefined;\n      }, this._updateRate);\n    }\n  }\n\n  public hardSuspend() {\n    this.entityCollection.suspendEvents();\n    this._isHardSuspend = true;\n  }\n\n  public hardResume() {\n    this.entityCollection.resumeEvents();\n    this._isHardSuspend = false;\n  }\n\n}\n","import { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from './enums/graphics-type.enum';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\nimport { OptimizedEntityCollection } from './optimized-entity-collection';\n\n/**\n *  General primitives drawer responsible of drawing Cesium primitives.\n *  Drawers the handle Cesium primitives extend it.\n */\n\nexport class EntitiesDrawerService extends BasicDrawerService {\n  private entityCollections = new Map<any, OptimizedEntityCollection>();\n  private graphicsTypeName: string;\n\n  constructor(\n    private cesiumService: CesiumService,\n    private graphicsType: GraphicsType,\n    private defaultOptions: EntitiesDrawerOptions = {\n      collectionMaxSize: -1,\n      collectionSuspensionTime: -1,\n      collectionsNumber: 1,\n    },\n  ) {\n    super();\n    this.graphicsTypeName = GraphicsType[this.graphicsType];\n\n    // Fix bad enum compilation\n    for (const i in GraphicsType) {\n      if (GraphicsType[i] as any === this.graphicsType) {\n        this.graphicsTypeName = i;\n      }\n    }\n  }\n\n  private getFreeEntitiesCollection(): OptimizedEntityCollection {\n    let freeEntityCollection = null;\n    this.entityCollections.forEach(entityCollection => {\n      if (entityCollection.isFree()) {\n        freeEntityCollection = entityCollection;\n      }\n    });\n\n    return freeEntityCollection;\n  }\n\n  init(options?: EntitiesDrawerOptions) {\n    const finalOptions = options || this.defaultOptions;\n    const dataSources = [];\n    for (let i = 0; i < finalOptions.collectionsNumber; i++) {\n      const dataSource = new Cesium.CustomDataSource(this.graphicsTypeName);\n      dataSources.push(dataSource);\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n      this.entityCollections.set(\n        dataSource.entities,\n        new OptimizedEntityCollection(dataSource.entities, finalOptions.collectionMaxSize, finalOptions.collectionSuspensionTime),\n      );\n    }\n\n    return dataSources;\n  }\n\n  add(cesiumProps: any): any {\n    const optimizedEntityCollection = this.getFreeEntitiesCollection();\n    if (optimizedEntityCollection === null) {\n      throw new Error('No more free entity collections');\n    }\n\n    const entityObject = {\n      position: cesiumProps.position !== undefined ? cesiumProps.position : undefined,\n      description: cesiumProps.description !== undefined ? cesiumProps.description : undefined,\n      orientation: cesiumProps.orientation !== undefined ? cesiumProps.orientation : undefined,\n      viewFrom: cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : undefined,\n      [this.graphicsTypeName]: cesiumProps,\n    };\n\n    if (cesiumProps.name !== undefined) {\n      entityObject.name = cesiumProps.name;\n    }\n    if (cesiumProps.availability !== undefined) {\n      entityObject.availability = cesiumProps.availability;\n    }\n\n    return optimizedEntityCollection.add(entityObject);\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.suspendEntityCollection(entity);\n\n    if (entity.position instanceof Cesium.CallbackProperty) {\n      if (entity.position._isConstant) {\n        entity.position = cesiumProps.position;\n      }\n    }\n    entity.position = cesiumProps.position !== undefined ? cesiumProps.position : undefined;\n    entity.name = cesiumProps.name !== undefined ? cesiumProps.name : entity.name;\n    entity.description = cesiumProps.description !== undefined ? cesiumProps.description : entity.description;\n    entity.orientation = cesiumProps.orientation !== undefined ? cesiumProps.orientation : entity.orientation;\n    entity.viewFrom = cesiumProps.viewFrom !== undefined ? cesiumProps.viewFrom : entity.viewFrom;\n    entity.availability = cesiumProps.availability !== undefined ? cesiumProps.availability : cesiumProps.availability;\n\n    if (this._propsAssigner) {\n      this._propsAssigner(entity[this.graphicsTypeName], cesiumProps);\n    } else {\n      Object.assign(entity[this.graphicsTypeName], cesiumProps);\n    }\n  }\n\n  remove(entity: any) {\n    const optimizedEntityCollection = this.entityCollections.get(entity.entityCollection);\n    optimizedEntityCollection.remove(entity);\n  }\n\n  removeAll() {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.removeAll();\n    });\n  }\n\n  setShow(showValue: boolean) {\n    this.entityCollections.forEach(entityCollection => {\n      entityCollection.setShow(showValue);\n    });\n  }\n\n  private suspendEntityCollection(entity: any) {\n    const id = entity.entityCollection;\n    if (!this.entityCollections.has(id)) {\n      throw new Error('No EntityCollection for entity.entityCollection');\n    }\n\n    const entityCollection = this.entityCollections.get(id);\n    entityCollection.suspend();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing billboards.\n */\n@Injectable()\nexport class BillboardDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.billboard);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { BasicDrawerService } from '../basic-drawer/basic-drawer.service';\nimport { EntitiesDrawerOptions } from '../../../models/entities-drawer-options';\n\n/**\n *  This drawer is responsible for drawing czml dataSources.\n */\n@Injectable()\nexport class CzmlDrawerService extends BasicDrawerService {\n\n  czmlStream: any;\n\n  constructor(\n    private cesiumService: CesiumService,\n  ) {\n    super();\n  }\n\n\n  init(options?: EntitiesDrawerOptions) {\n    const dataSources = [];\n\n    this.czmlStream = new Cesium.CzmlDataSource('czml');\n\n    dataSources.push(this.czmlStream);\n\n    this.cesiumService.getViewer().dataSources.add(this.czmlStream);\n\n    return dataSources;\n  }\n\n  // returns the packet, provided by the stream\n  add(cesiumProps: any): any {\n\n    this.czmlStream.process(cesiumProps.czmlPacket);\n\n    return cesiumProps;\n  }\n\n  update(entity: any, cesiumProps: any) {\n    this.czmlStream.process(cesiumProps.czmlPacket);\n  }\n\n  remove(entity: any) {\n    this.czmlStream.entities.removeById(entity.acEntity.id);\n  }\n\n  removeAll() {\n    this.czmlStream.entities.removeAll();\n  }\n\n  setShow(showValue: boolean) {\n    this.czmlStream.entities.show = showValue;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipses.\n */\n@Injectable()\nexport class EllipseDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipse, {\n      collectionsNumber: 10,\n      collectionMaxSize: 450,\n      collectionSuspensionTime: 100\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing labels.\n */\n@Injectable()\nexport class LabelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.label);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing points.\n */\n@Injectable()\nexport class PointDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.point);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class PolygonDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polygon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible of drawing polylines.\n */\n@Injectable()\nexport class PolylineDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polyline);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing polylines as primitives.\n *  This drawer is more efficient than PolylineDrawerService when drawing dynamic polylines.\n */\n@Injectable()\nexport class PolylinePrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n\n  add(cesiumProps: any) {\n    return this._cesiumCollection.add(this.withColorMaterial(cesiumProps));\n  }\n\n  update(cesiumObject: any, cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      if (cesiumObject.material && cesiumObject.material.uniforms &&\n        cesiumObject.material.uniforms.color instanceof Cesium.Color) {\n        this.withColorMaterial(cesiumProps);\n      } else if (!cesiumObject.material.uniforms.color.equals(cesiumProps.material)) {\n        cesiumObject.material.uniforms.color = cesiumProps.material;\n      }\n    }\n    super.update(cesiumObject, cesiumProps);\n  }\n\n  withColorMaterial(cesiumProps: any) {\n    if (cesiumProps.material instanceof Cesium.Color) {\n      const material = Cesium.Material.fromType('Color');\n      material.uniforms.color = cesiumProps.material;\n      cesiumProps.material = material;\n    }\n\n    return cesiumProps;\n  }\n}\n","export enum KeyboardAction {\n  CAMERA_FORWARD,\n  CAMERA_BACKWARD,\n  CAMERA_RIGHT,\n  CAMERA_LEFT,\n  CAMERA_UP,\n  CAMERA_DOWN,\n  CAMERA_LOOK_RIGHT,\n  CAMERA_LOOK_LEFT,\n  CAMERA_LOOK_UP,\n  CAMERA_LOOK_DOWN,\n  CAMERA_TWIST_RIGHT,\n  CAMERA_TWIST_LEFT,\n  CAMERA_ROTATE_RIGHT,\n  CAMERA_ROTATE_LEFT,\n  CAMERA_ROTATE_UP,\n  CAMERA_ROTATE_DOWN,\n  CAMERA_ZOOM_IN,\n  CAMERA_ZOOM_OUT,\n}\n","import { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { KeyboardControlActionFn } from './keyboard-control.service';\nimport { CesiumService } from '../cesium/cesium.service';\n\nconst CAMERA_MOVEMENT_DEFAULT_FACTOR = 100.0;\nconst CAMERA_LOOK_DEFAULT_FACTOR = 0.01;\nconst CAMERA_TWIST_DEFAULT_FACTOR = 0.01;\nconst CAMERA_ROTATE_DEFAULT_FACTOR = 0.01;\n\nexport const PREDEFINED_KEYBOARD_ACTIONS: { [key: number]: KeyboardControlActionFn } = {\n  /**\n   * Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_FORWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveForward(moveRate);\n  },\n  /**\n   * Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_BACKWARD]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveBackward(moveRate);\n  },\n  /**\n   * Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveUp(moveRate);\n  },\n  /**\n   * Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveDown(moveRate);\n  },\n  /**\n   * Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveRight(moveRate);\n  },\n  /**\n   * Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n   * the factor of movement, according to the camera height.\n   */\n  [KeyboardAction.CAMERA_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const scene = cesiumService.getScene();\n    const cameraHeight = scene.globe.ellipsoid.cartesianToCartographic(camera.position).height;\n    const moveRate = cameraHeight / (params.moveRate || CAMERA_MOVEMENT_DEFAULT_FACTOR);\n    camera.moveLeft(moveRate);\n  },\n  /**\n   * Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookRight(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookLeft(currentPosition.latitude * lookFactor);\n  },\n  /**\n   * Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookUp(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n   * the factor of looking, according to the camera current position.\n   */\n  [KeyboardAction.CAMERA_LOOK_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const currentPosition = camera.positionCartographic;\n    const lookFactor = params.lookFactor || CAMERA_LOOK_DEFAULT_FACTOR;\n    camera.lookDown(currentPosition.longitude * (lookFactor * -1));\n  },\n  /**\n   * Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistRight(lookFactor);\n  },\n  /**\n   * Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n   * the twist amount\n   */\n  [KeyboardAction.CAMERA_TWIST_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.amount || CAMERA_TWIST_DEFAULT_FACTOR;\n    camera.twistLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_RIGHT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateRight(lookFactor);\n  },\n  /**\n   * Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_LEFT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateLeft(lookFactor);\n  },\n  /**\n   * Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_UP]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateUp(lookFactor);\n  },\n  /**\n   * Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n   * the rotation angle\n   */\n  [KeyboardAction.CAMERA_ROTATE_DOWN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const lookFactor = params.angle || CAMERA_ROTATE_DEFAULT_FACTOR;\n    camera.rotateDown(lookFactor);\n  },\n  /**\n   * Zoom in into the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_IN]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomIn(amount);\n  },\n  /**\n   * Zoom out from the current camera center position, accepts a numeric parameter named\n   * `amount` that controls the amount of zoom in meters.\n   */\n  [KeyboardAction.CAMERA_ZOOM_OUT]: (cesiumService: CesiumService, params: any) => {\n    const camera = cesiumService.getViewer().camera;\n    const amount = params.amount;\n    camera.zoomOut(amount);\n  },\n};\n","import { isNumber } from 'util';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { KeyboardAction } from '../../models/ac-keyboard-action.enum';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { PREDEFINED_KEYBOARD_ACTIONS } from './predefined-actions';\n\nexport type KeyboardControlActionFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean | void;\nexport type KeyboardControlValidationFn = (cesiumService: CesiumService, params: any, event: KeyboardEvent) => boolean;\nexport type KeyboardControlDoneFn = (cesiumService: CesiumService, event: KeyboardEvent) => boolean;\n\nexport interface KeyboardControlParams {\n  action: KeyboardAction | KeyboardControlActionFn;\n  validation?: KeyboardControlValidationFn;\n  params?: { [paramName: string]: any };\n  done?: KeyboardControlDoneFn;\n}\n\nexport interface KeyboardControlDefinition {\n  [keyboardCharCode: string]: KeyboardControlParams;\n}\n\nenum KeyEventState {\n  IGNORED,\n  NOT_PRESSED,\n  PRESSED,\n}\n\ninterface ActiveDefinition {\n  keyboardEvent: KeyboardEvent;\n  state: KeyEventState;\n  action: KeyboardControlParams;\n}\n\n/**\n *  Service that manages keyboard keys and execute actions per request.\n *  Inject the keyboard control service into any layer, under your `ac-map` component,\n *  And defined you keyboard handlers using `setKeyboardControls`.\n *\n * <caption>Simple Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: { action: KeyboardAction.CAMERA_FORWARD },\n *       S: { action: KeyboardAction.CAMERA_BACKWARD },\n *       D: { action: KeyboardAction.CAMERA_RIGHT },\n *       A: { action: KeyboardAction.CAMERA_LEFT },\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n *\n * <caption>Advanced Example</caption>\n * ```typescript\n * Component({\n *   selector: 'keyboard-control-layer',\n *   template: '',\n * })\n * export class KeyboardControlLayerComponent implements OnInit, OnDestroy {\n *   constructor(private keyboardControlService: KeyboardControlService) {}\n *\n *   private myCustomValue = 10;\n *\n *   ngOnInit() {\n *     this.keyboardControlService.setKeyboardControls({\n *       W: {\n *          action: KeyboardAction.CAMERA_FORWARD,\n *          validate: (camera, scene, params, key) => {\n *            // Replace `checkCamera` you with your validation logic\n *            if (checkCamera(camera) || params.customParams === true) {\n *              return true;\n *            }\n *\n *            return false;\n *          },\n *          params: () => {\n *            return {\n *              myValue: this.myCustomValue,\n *            };\n *          },\n *        }\n *     });\n *    }\n *\n *   ngOnDestroy() {\n *     this.keyboardControlService.removeKeyboardControls();\n *   }\n * }\n * ```\n * <b>Predefined keyboard actions:</b>\n * + `KeyboardAction.CAMERA_FORWARD` - Moves the camera forward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_BACKWARD` - Moves the camera backward, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_UP` - Moves the camera up, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_DOWN` - Moves the camera down, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_RIGHT` - Moves the camera right, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LEFT` - Moves the camera left, accepts a numeric parameter named `moveRate` that controls\n * the factor of movement, according to the camera height.\n * + `KeyboardAction.CAMERA_LOOK_RIGHT` - Changes the camera to look to the right, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_LEFT` - Changes the camera to look to the left, accepts a numeric parameter named `lookFactor` that\n * controls the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_UP` - Changes the camera to look up, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_LOOK_DOWN` - Changes the camera to look down, accepts a numeric parameter named `lookFactor` that controls\n * the factor of looking, according to the camera current position.\n * + `KeyboardAction.CAMERA_TWIST_RIGHT` - Twists the camera to the right, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_TWIST_LEFT` - Twists the camera to the left, accepts a numeric parameter named `amount` that controls\n * the twist amount\n * + `KeyboardAction.CAMERA_ROTATE_RIGHT` - Rotates the camera to the right, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_LEFT` - Rotates the camera to the left, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_UP` - Rotates the camera upwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ROTATE_DOWN` - Rotates the camera downwards, accepts a numeric parameter named `angle` that controls\n * the rotation angle\n * + `KeyboardAction.CAMERA_ZOOM_IN` - Zoom in into the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n * + `KeyboardAction.CAMERA_ZOOM_OUT` -  Zoom out from the current camera center position, accepts a numeric parameter named\n * `amount` that controls the amount of zoom in meters.\n */\n@Injectable()\nexport class KeyboardControlService {\n  private _currentDefinitions: KeyboardControlDefinition = null;\n  private _activeDefinitions: { [definitionKey: string]: ActiveDefinition } = {};\n  private _keyMappingFn: Function = this.defaultKeyMappingFn;\n\n  /**\n   * Creats the keyboard control service.\n   */\n  constructor(private ngZone: NgZone, private cesiumService: CesiumService, @Inject(DOCUMENT) private document: any) {\n  }\n\n  /**\n   * Initializes the keyboard control service.\n   */\n  init() {\n    const canvas = this.cesiumService.getCanvas();\n    canvas.addEventListener('click', () => {\n      canvas.focus();\n    });\n\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n  }\n\n  /**\n   * Sets the current map keyboard control definitions.\n   * The definitions is a key mapping between a key string and a KeyboardControlDefinition:\n   * - `action` is a predefine action from `KeyboardAction` enum, or a custom method:\n   * `(camera, scene, params, key) => boolean | void` - returning false will cancel the current keydown.\n   * - `validation` is a method that validates if the event should occur or not (`camera, scene, params, key`)\n   * - `params` is an object (or function that returns object) that will be passed into the action executor.\n   * - `done` is a function that will be triggered when `keyup` is triggered.\n   * @param definitions Keyboard Control Definition\n   * @param keyMappingFn - Mapping function for custom keys\n   * @param outsideOfAngularZone - if key down events will run outside of angular zone.\n   */\n  setKeyboardControls(definitions: KeyboardControlDefinition,\n                      keyMappingFn?: (keyEvent: KeyboardEvent) => string,\n                      outsideOfAngularZone = false) {\n    if (!definitions) {\n      return this.removeKeyboardControls();\n    }\n\n    if (!this._currentDefinitions) {\n      this.registerEvents(outsideOfAngularZone);\n    }\n\n    this._currentDefinitions = definitions;\n    this._keyMappingFn = keyMappingFn || this.defaultKeyMappingFn;\n\n    Object.keys(this._currentDefinitions).forEach(key => {\n      this._activeDefinitions[key] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: null,\n      };\n    });\n  }\n\n  /**\n   * Removes the current set of keyboard control items, and unregister from map events.\n   */\n  removeKeyboardControls() {\n    this.unregisterEvents();\n    this._currentDefinitions = null;\n  }\n\n  /**\n   * Returns the current action that handles `char` key string, or `null` if not exists\n   */\n  private getAction(char: string): KeyboardControlParams {\n    return this._currentDefinitions[char] || null;\n  }\n\n  /**\n   * The default `defaultKeyMappingFn` that maps `KeyboardEvent` into a key string.\n   */\n  private defaultKeyMappingFn(keyEvent: KeyboardEvent): string {\n    return String.fromCharCode(keyEvent.keyCode);\n  }\n\n  /**\n   * document's `keydown` event handler\n   */\n  private handleKeydown(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      const actionState = this._activeDefinitions[char];\n\n      if (actionState.state !== KeyEventState.IGNORED) {\n        let execute = true;\n\n        const params = this.getParams(action.params, e);\n\n        if (action.validation) {\n          execute = action.validation(this.cesiumService, params, e);\n        }\n\n        if (execute === true) {\n          this._activeDefinitions[char] = {\n            state: KeyEventState.PRESSED,\n            action,\n            keyboardEvent: e,\n          };\n        }\n      }\n    }\n  }\n\n  /**\n   * document's `keyup` event handler\n   */\n  private handleKeyup(e: KeyboardEvent) {\n    const char = this._keyMappingFn(e);\n    const action = this.getAction(char);\n\n    if (action) {\n      this._activeDefinitions[char] = {\n        state: KeyEventState.NOT_PRESSED,\n        action: null,\n        keyboardEvent: e,\n      };\n\n      if (action.done && typeof action.done === 'function') {\n        action.done(this.cesiumService, e);\n      }\n    }\n  }\n\n  /**\n   * `tick` event handler that triggered by Cesium render loop\n   */\n  private handleTick() {\n    const activeKeys = Object.keys(this._activeDefinitions);\n\n    activeKeys.forEach(key => {\n      const actionState = this._activeDefinitions[key];\n\n      if (actionState !== null && actionState.action !== null && actionState.state === KeyEventState.PRESSED) {\n        this.executeAction(actionState.action, key, actionState.keyboardEvent);\n      }\n    });\n  }\n\n  /**\n   *\n   * Params resolve function, returns object.\n   * In case of params function, executes it and returns it's return value.\n   *\n   */\n  private getParams(paramsDef: any, keyboardEvent: KeyboardEvent): { [paramName: string]: any } {\n    if (!paramsDef) {\n      return {};\n    }\n\n    if (typeof paramsDef === 'function') {\n      return paramsDef(this.cesiumService, keyboardEvent);\n    }\n\n    return paramsDef;\n  }\n\n  /**\n   *\n   * Executes a given `KeyboardControlParams` object.\n   *\n   */\n  private executeAction(execution: KeyboardControlParams, key: string, keyboardEvent: KeyboardEvent) {\n    if (!this._currentDefinitions) {\n      return;\n    }\n\n    const params = this.getParams(execution.params, keyboardEvent);\n\n    if (isNumber(execution.action)) {\n      const predefinedAction = PREDEFINED_KEYBOARD_ACTIONS[execution.action as number];\n\n      if (predefinedAction) {\n        predefinedAction(this.cesiumService, params, keyboardEvent);\n      }\n    } else if (typeof execution.action === 'function') {\n      const shouldCancelEvent = execution.action(this.cesiumService, params, keyboardEvent);\n\n      if (shouldCancelEvent === false) {\n        this._activeDefinitions[key] = {\n          state: KeyEventState.IGNORED,\n          action: null,\n          keyboardEvent: null,\n        };\n      }\n    }\n  }\n\n  /**\n   * Registers to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private registerEvents(outsideOfAngularZone: boolean) {\n    const registerToEvents = () => {\n      this.document.addEventListener('keydown', this.handleKeydown);\n      this.document.addEventListener('keyup', this.handleKeyup);\n      this.cesiumService.getViewer().clock.onTick.addEventListener(this.handleTick);\n    };\n\n    if (outsideOfAngularZone) {\n      this.ngZone.runOutsideAngular(registerToEvents);\n    } else {\n      registerToEvents();\n    }\n  }\n\n  /**\n   * Unregisters to keydown, keyup of `document`, and `tick` of Cesium.\n   */\n  private unregisterEvents() {\n    this.document.removeEventListener('keydown', this.handleKeydown);\n    this.document.removeEventListener('keyup', this.handleKeyup);\n    this.cesiumService.getViewer().clock.onTick.removeEventListener(this.handleTick);\n  }\n}\n","import { Observable, Subscriber } from 'rxjs';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\n\nexport class CesiumPureEventObserver {\n  public observer: Observable<any>;\n\n  constructor(protected event: CesiumEvent, protected modifier: CesiumEventModifier) {\n  }\n\n  init(eventsHandler: any): Observable<any> {\n    this.observer = Observable.create((observer: Subscriber<any>) => {\n        eventsHandler.setInputAction((movement: any) => {\n          if (movement.position) {\n            movement.startPosition = movement.position;\n            movement.endPosition = movement.position;\n          }\n          observer.next(movement);\n        }, this.event, this.modifier);\n      }\n    );\n    return this.observer;\n  }\n}\n","import { ConnectableObservable, of as observableOf } from 'rxjs';\n\nimport { delay, mergeMap, publish, takeUntil } from 'rxjs/operators';\nimport { CesiumPureEventObserver } from './cesium-pure-event-observer';\nimport { CesiumEvent } from '../consts/cesium-event.enum';\nimport { CesiumEventModifier } from '../consts/cesium-event-modifier.enum';\nimport { CesiumEventBuilder } from '../cesium-event-builder';\n\nexport class CesiumLongPressObserver extends CesiumPureEventObserver {\n  public static LONG_PRESS_EVENTS_DURATION = 250;\n\n  constructor(protected event: CesiumEvent,\n              protected modifier: CesiumEventModifier,\n              private eventFactory: CesiumEventBuilder) {\n    super(event, modifier);\n  }\n\n  init(): ConnectableObservable<any> {\n    let startEvent: CesiumEvent;\n    let stopEvent: CesiumEvent;\n\n    if (this.event === CesiumEvent.LONG_LEFT_PRESS) {\n      startEvent = CesiumEvent.LEFT_DOWN;\n      stopEvent = CesiumEvent.LEFT_UP;\n    } else if (this.event === CesiumEvent.LONG_RIGHT_PRESS) {\n      startEvent = CesiumEvent.RIGHT_DOWN;\n      stopEvent = CesiumEvent.RIGHT_UP;\n    } else if (this.event === CesiumEvent.LONG_MIDDLE_PRESS) {\n      startEvent = CesiumEvent.MIDDLE_DOWN;\n      stopEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    const startEventObservable = this.eventFactory.get(startEvent, this.modifier);\n    const stopEventObservable = this.eventFactory.get(stopEvent, this.modifier);\n\n    // publish for preventing side effect\n    const longPressObservable = publish()(startEventObservable.pipe(\n      mergeMap((e) => observableOf(e).pipe(\n        delay(CesiumLongPressObserver.LONG_PRESS_EVENTS_DURATION),\n        takeUntil(stopEventObservable))),\n    ));\n    return longPressObservable;\n  }\n}\n","import { publish } from 'rxjs/operators';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { Injectable } from '@angular/core';\nimport { CesiumPureEventObserver } from './event-observers/cesium-pure-event-observer';\nimport { CesiumLongPressObserver } from './event-observers/cesium-long-press-observer';\nimport { ConnectableObservable } from 'rxjs';\n\n@Injectable()\nexport class CesiumEventBuilder {\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  public static longPressEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LONG_LEFT_PRESS,\n    CesiumEvent.LONG_RIGHT_PRESS,\n    CesiumEvent.LONG_MIDDLE_PRESS\n  ]);\n\n  private eventsHandler: any;\n  private cesiumEventsObservables = new Map<string, ConnectableObservable<any>>();\n\n  public static getEventFullName(event: CesiumEvent, modifier?: CesiumEventModifier): string {\n    if (modifier) {\n      return `${event}_${modifier}`;\n    } else {\n      return event.toString();\n    }\n  }\n\n  init() {\n    this.eventsHandler = this.cesiumService.getViewer().screenSpaceEventHandler;\n  }\n\n  get(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    const eventName = CesiumEventBuilder.getEventFullName(event, modifier);\n    if (this.cesiumEventsObservables.has(eventName)) {\n      return this.cesiumEventsObservables.get(eventName);\n    } else {\n      const eventObserver = this.createCesiumEventObservable(event, modifier);\n      this.cesiumEventsObservables.set(eventName, eventObserver);\n      return eventObserver;\n    }\n  }\n\n  private createCesiumEventObservable(event: CesiumEvent, modifier?: CesiumEventModifier): ConnectableObservable<any> {\n    let cesiumEventObservable: ConnectableObservable<any>;\n    if (CesiumEventBuilder.longPressEvents.has(event)) {\n      cesiumEventObservable = this.createSpecialCesiumEventObservable(event, modifier);\n    } else {\n      cesiumEventObservable = publish()(new CesiumPureEventObserver(event, modifier).init(this.eventsHandler));\n    }\n    cesiumEventObservable.connect();\n    return cesiumEventObservable;\n  }\n\n  private createSpecialCesiumEventObservable(event: CesiumEvent, modifier: CesiumEventModifier): ConnectableObservable<any> {\n    // could support more events if needed\n    return new CesiumLongPressObserver(event, modifier, this).init();\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { AcEntity } from '../../models/ac-entity';\nimport { Subject } from 'rxjs';\nimport { EventResult, Movement } from '../map-events-mananger/map-events-manager';\n\n/**\n * Service for solving plonter.\n * Used by map-event-manager and plonter context component\n */\n@Injectable()\nexport class PlonterService {\n  private _plonterShown: boolean;\n  private _entitesToPlonter: AcEntity[] = [];\n  private _plonterObserver: Subject<EventResult>;\n  private _eventResult: EventResult;\n  private _plonterChangeNotifier: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this._plonterObserver = new Subject<EventResult>();\n  }\n\n  get plonterChangeNotifier(): EventEmitter<any> {\n    return this._plonterChangeNotifier;\n  }\n\n  get plonterShown(): boolean {\n    return this._plonterShown;\n  }\n\n  get entitesToPlonter(): AcEntity[] {\n    return this._entitesToPlonter;\n  }\n\n  get plonterClickPosition(): Movement {\n    return this._eventResult.movement;\n  }\n\n  plonterIt(eventResult: EventResult) {\n    this._eventResult = eventResult;\n    this._entitesToPlonter = eventResult.entities;\n    this._plonterShown = true;\n\n    this._plonterChangeNotifier.emit();\n    return this._plonterObserver;\n  }\n\n  resolvePlonter(entity: AcEntity) {\n    this._plonterShown = false;\n    this._eventResult.entities = [entity];\n\n    this._plonterChangeNotifier.emit();\n    this._plonterObserver.next(this._eventResult);\n  }\n}\n","export const UtilsService = {\n  unique: (array: any[]): any[] => {\n    return array.reduce((accumulator, currentValue) => {\n      if (accumulator.indexOf(currentValue) < 0) {\n        accumulator.push(currentValue);\n      }\n      return accumulator;\n    }, []);\n  }\n};\n\n","import { CesiumEvent } from '../consts/cesium-event.enum';\n\nexport class CesiumDragDropHelper {\n\n  public static dragEvents: Set<CesiumEvent> = new Set([\n    CesiumEvent.LEFT_CLICK_DRAG,\n    CesiumEvent.RIGHT_CLICK_DRAG,\n    CesiumEvent.MIDDLE_CLICK_DRAG\n  ]);\n\n\n  public static getDragEventTypes(dragEvent: CesiumEvent) {\n    let mouseDownEvent;\n    let mouseUpEvent;\n    if (dragEvent === CesiumEvent.LEFT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.LEFT_DOWN;\n      mouseUpEvent = CesiumEvent.LEFT_UP;\n    } else if (dragEvent === CesiumEvent.RIGHT_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.RIGHT_DOWN;\n      mouseUpEvent = CesiumEvent.RIGHT_UP;\n    } else if (dragEvent === CesiumEvent.MIDDLE_CLICK_DRAG) {\n      mouseDownEvent = CesiumEvent.MIDDLE_DOWN;\n      mouseUpEvent = CesiumEvent.MIDDLE_UP;\n    }\n\n    return {mouseDownEvent, mouseUpEvent};\n  }\n}\n","import { merge, Observable, of as observableOf, Subject } from 'rxjs';\n\nimport { filter, map, mergeMap, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\nimport { CesiumEventBuilder } from './cesium-event-builder';\nimport { EventRegistrationInput } from './event-registration-input';\nimport { DisposableObservable } from './disposable-observable';\nimport { PickOptions } from './consts/pickOptions.enum';\nimport { CesiumEvent } from './consts/cesium-event.enum';\nimport { CesiumEventModifier } from './consts/cesium-event-modifier.enum';\nimport { PlonterService } from '../plonter/plonter.service';\nimport { UtilsService } from '../../utils/utils.service';\nimport { CesiumDragDropHelper } from './event-observers/cesium-drag-drop-helper';\n\nclass Registration {\n  constructor(public observable: Observable<EventResult>,\n              public  stopper: Subject<any>,\n              public  priority: number,\n              public  isPaused: boolean) {\n  }\n}\n\n/**\n * Returns screen position, drag boolean for drag events only\n */\nexport interface Movement {\n  startPosition: { x: number, y: number };\n  endPosition: { x: number, y: number };\n  drop?: boolean;\n}\n\nexport interface EventResult {\n  movement: Movement;\n  cesiumEntities: any[];\n  entities: any[];\n}\n\n/**\n * Manages all map events. Notice events will run outside of Angular zone.\n * Provided by `<ac-map/>` component there for could be injected at any component under `<ac-map/>` hierarchy\n * or from the `<ac-map/>` component reference `acMapComponent.getMapEventsManager()`\n *\n * __usage:__\n * ```\n * MapEventsManagerService.register({event, modifier, priority, entityType, pickOption}).subscribe()\n * ```\n * __param:__ {CesiumEvent} event\n * __param:__ {CesiumEventModifier} modifier\n * __param:__ priority - the bigger the number the bigger the priority. default : 0.\n * __param:__ entityType - entity type class that you are interested like (Track). the class must extends AcEntity\n * __param:__ pickOption - self explained\n */\n@Injectable()\nexport class MapEventsManagerService {\n\n  private scene: any;\n  private eventRegistrations = new Map<string, Registration[]>();\n\n  constructor(private cesiumService: CesiumService,\n              private eventBuilder: CesiumEventBuilder,\n              private plonterService: PlonterService) {\n  }\n\n  init() {\n    this.eventBuilder.init();\n    this.scene = this.cesiumService.getScene();\n  }\n\n  /**\n   * Register to map event\n   * @param input Event Registration Input\n   *\n   * @returns DisposableObservable<EventResult>\n   */\n  register(input: EventRegistrationInput): DisposableObservable<EventResult> {\n    if (this.scene === undefined) {\n      throw new Error('CesiumService has not been initialized yet - MapEventsManagerService must be injected  under ac-map');\n    }\n\n    input.pick = input.pick || PickOptions.NO_PICK;\n    input.priority = input.priority || 0;\n\n    if (input.entityType && input.pick === PickOptions.NO_PICK) {\n      throw new Error('MapEventsManagerService: can\\'t register an event ' +\n        'with entityType and PickOptions.NO_PICK - It doesn\\'t make sense ');\n    }\n\n    const eventName = CesiumEventBuilder.getEventFullName(input.event, input.modifier);\n\n    if (!this.eventRegistrations.has(eventName)) {\n      this.eventRegistrations.set(eventName, []);\n    }\n\n    const eventRegistration = this.createEventRegistration(\n      input.event,\n      input.modifier,\n      input.entityType,\n      input.pick,\n      input.priority,\n      input.pickFilter);\n    const registrationObservable: any = eventRegistration.observable;\n    registrationObservable.dispose = () => this.disposeObservable(eventRegistration, eventName);\n    this.eventRegistrations.get(eventName).push(eventRegistration);\n\n    this.sortRegistrationsByPriority(eventName);\n    return <DisposableObservable<EventResult>> registrationObservable;\n  }\n\n  private disposeObservable(eventRegistration: Registration, eventName: string) {\n    eventRegistration.stopper.next(1);\n    const registrations = this.eventRegistrations.get(eventName);\n    const index = registrations.indexOf(eventRegistration);\n    if (index !== -1) {\n      registrations.splice(index, 1);\n    }\n    this.sortRegistrationsByPriority(eventName);\n  }\n\n  private sortRegistrationsByPriority(eventName: string) {\n    const registrations = this.eventRegistrations.get(eventName);\n    registrations.sort((a, b) => b.priority - a.priority);\n    if (registrations.length === 0) {\n      return;\n    }\n\n    // Active registrations by priority\n    const currentPriority = registrations[0].priority;\n    registrations.forEach((registration) => {\n      registration.isPaused = registration.priority < currentPriority;\n    });\n\n  }\n\n  private createEventRegistration(event: CesiumEvent,\n                                  modifier: CesiumEventModifier,\n                                  entityType: any,\n                                  pickOption: PickOptions,\n                                  priority: number,\n                                  pickFilter?: (any) => boolean): Registration {\n    const cesiumEventObservable = this.eventBuilder.get(event, modifier);\n    const stopper = new Subject<any>();\n\n    const registration = new Registration(undefined, stopper, priority, false);\n    let observable: Observable<EventResult>;\n\n    if (!CesiumDragDropHelper.dragEvents.has(event)) {\n      observable = cesiumEventObservable.pipe(\n        filter(() => !registration.isPaused),\n        map((movement) => this.triggerPick(movement, pickOption)),\n        filter((result) => result.cesiumEntities !== null || entityType === undefined),\n        map((picksAndMovement) => this.addEntities(picksAndMovement, entityType, pickOption, pickFilter)),\n        filter((result) => result.entities !== null || (entityType === undefined && !pickFilter)),\n        switchMap((entitiesAndMovement) => this.plonter(entitiesAndMovement, pickOption)),\n        takeUntil(stopper), );\n    } else {\n      observable = this.createDragEvent(event, modifier, entityType, pickOption, priority, pickFilter).pipe(takeUntil(stopper));\n    }\n\n    registration.observable = observable;\n    return registration;\n  }\n\n  private createDragEvent(event: CesiumEvent,\n                          modifier: CesiumEventModifier,\n                          entityType: any,\n                          pickOption: PickOptions,\n                          priority: number,\n                          pickFilter?: (any) => boolean): Observable<EventResult> {\n    const { mouseDownEvent, mouseUpEvent } = CesiumDragDropHelper.getDragEventTypes(event);\n\n    const mouseUpObservable = this.eventBuilder.get(mouseUpEvent);\n    const mouseMoveObservable = this.eventBuilder.get(CesiumEvent.MOUSE_MOVE);\n\n    const mouseDownRegistration = this.createEventRegistration(mouseDownEvent, modifier, entityType, pickOption, priority, pickFilter);\n\n    const dropSubject = new Subject<EventResult>();\n    const dragObserver = mouseDownRegistration.observable.pipe(mergeMap(e => {\n      let lastMove: any = null;\n      const dragStartPositionX = e.movement.startPosition.x;\n      const dragStartPositionY = e.movement.startPosition.y;\n      return mouseMoveObservable.pipe(map((movement) => {\n        lastMove = {\n          movement: {\n            drop: false,\n            startPosition: {\n              x: dragStartPositionX,\n              y: dragStartPositionY,\n            },\n            endPosition: movement.endPosition,\n          },\n          entities: e.entities,\n          cesiumEntities: e.cesiumEntities\n        };\n        return lastMove;\n      }), takeUntil(mouseUpObservable), tap(undefined, undefined, () => {\n        // On complete\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.movement.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n    }));\n\n    return merge(dragObserver, dropSubject);\n\n  }\n\n  private triggerPick(movement: any, pickOptions: PickOptions) {\n    let picks: any = [];\n    switch (pickOptions) {\n      case PickOptions.PICK_ONE:\n      case PickOptions.PICK_ALL:\n        picks = this.scene.drillPick(movement.endPosition);\n        picks = picks.length === 0 ? null : picks;\n        break;\n      case PickOptions.PICK_FIRST:\n        const pick = this.scene.pick(movement.endPosition);\n        picks = pick === undefined ? null : [pick];\n        break;\n      case PickOptions.NO_PICK:\n        break;\n      default:\n        break;\n    }\n\n    // Picks can be cesium entity or cesium primitive\n    if (picks) {\n      picks = picks.map((pick: any) => pick.id && pick.id instanceof Cesium.Entity ? pick.id : pick.primitive);\n    }\n\n    return { movement: movement, cesiumEntities: picks };\n  }\n\n  private addEntities(picksAndMovement: any, entityType: any, pickOption: PickOptions, pickFilter?: (any) => boolean): EventResult {\n\n    if (picksAndMovement.cesiumEntities === null) {\n      picksAndMovement.entities = null;\n      return picksAndMovement;\n    }\n    let entities = [];\n    if (pickOption !== PickOptions.NO_PICK) {\n      if (entityType) {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity).filter((acEntity: any) => {\n          return acEntity && acEntity instanceof entityType;\n        });\n      } else {\n        entities = picksAndMovement.cesiumEntities.map((pick: any) => pick.acEntity);\n      }\n\n      entities = UtilsService.unique(entities);\n      entities = (pickFilter && entities) ? entities.filter(pickFilter) : entities;\n      if (entities.length === 0) {\n        entities = null;\n      }\n    }\n\n    picksAndMovement.entities = entities;\n\n    return picksAndMovement;\n  }\n\n  private plonter(entitiesAndMovement: EventResult, pickOption: PickOptions): Observable<EventResult> {\n    if (pickOption === PickOptions.PICK_ONE && entitiesAndMovement.entities !== null && entitiesAndMovement.entities.length > 1) {\n      return this.plonterService.plonterIt(entitiesAndMovement);\n    } else {\n      return observableOf(entitiesAndMovement);\n    }\n  }\n}\n","import { CesiumService } from '../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapLayersService {\n\n  private layersDataSources: any[] = [];\n\n  constructor(private cesiumService: CesiumService) {\n\n  }\n\n  registerLayerDataSources(dataSources: any[], zIndex: number) {\n    dataSources.forEach(ds => {\n      ds.zIndex = zIndex;\n      this.layersDataSources.push(ds);\n    });\n  }\n\n  drawAllLayers() {\n    this.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\n\n    this.layersDataSources.forEach((dataSource) => {\n      this.cesiumService.getViewer().dataSources.add(dataSource);\n    });\n  }\n\n  updateAndRefresh(dataSources: any[], newZIndex: number) {\n    if (dataSources && dataSources.length) {\n      dataSources.forEach((ds) => {\n        const index = this.layersDataSources.indexOf(ds);\n        if (index !== -1) {\n          this.layersDataSources[index].zIndex = newZIndex;\n        }\n      });\n\n      this.cesiumService.getViewer().dataSources.removeAll();\n      this.drawAllLayers();\n    }\n  }\n\n  removeDataSources(dataSources: any[]) {\n    dataSources.forEach(ds => {\n      const index = this.layersDataSources.indexOf(ds);\n      if (index !== -1) {\n        this.layersDataSources.splice(index, 1);\n        this.cesiumService.getViewer().dataSources.remove(ds, true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AcMapComponent } from '../../components/ac-map/ac-map.component';\n\n/**\n *  The service manages `ac-map` instances. `ac-map` register itself to this service.\n *  This allows retrieval of maps provided services outside of `ac-map` scope.\n */\n@Injectable()\nexport class MapsManagerService {\n  private defaultIdCounter = 0;\n  private _Maps = new Map<string, AcMapComponent>();\n  private firstMap: any;\n  private eventRemoveCallbacks: Function[] = [];\n\n  constructor() {\n  }\n\n  getMap(id?: string): AcMapComponent | undefined {\n    if (!id) {\n      return this.firstMap;\n    }\n    return this._Maps.get(id);\n  }\n\n  _registerMap(id: string, acMap: AcMapComponent): string {\n    if (!this.firstMap) {\n      this.firstMap = acMap;\n    }\n\n    const mapId = id ? id : this.generateDefaultId();\n    if (this._Maps.has(mapId)) {\n      throw new Error(`Map with id: ${mapId} already exist`);\n    }\n    this._Maps.set(mapId, acMap);\n    return mapId;\n  }\n\n  _removeMapById(id: string) {\n    return this._Maps.delete(id);\n  }\n\n  private generateDefaultId(): string {\n    this.defaultIdCounter++;\n    return 'default-map-id-' + this.defaultIdCounter;\n  }\n\n  /**\n   * Binds multiple 2D map's cameras together.\n   * @param mapsConfiguration - binding options.\n   * mapId - the id of the maps to bind.\n   * sensitivity - the amount the camera position should change in order to sync other maps.\n   * bindZoom - should bind zoom level\n   */\n  sync2DMapsCameras(mapsConfiguration: { id: string; sensitivity?: number; bindZoom?: boolean }[]) {\n    const DEFAULT_SENSITIVITY = 0.01;\n    this.unsyncMapsCameras();\n    const maps: { map: AcMapComponent; options?: { sensitivity?: number; bindZoom?: boolean } }[] = mapsConfiguration.map(config => {\n      const map = this.getMap(config.id);\n      if (!map) {\n        throw new Error(`Couldn't find map with id: ${config.id}`);\n      }\n\n      return {map, options: {sensitivity: config.sensitivity, bindZoom: config.bindZoom}};\n    });\n\n    maps.forEach(masterMapConfig => {\n      const masterMap = masterMapConfig.map;\n      const options = masterMapConfig.options;\n      const masterCamera = masterMap.getCameraService().getCamera();\n      const masterCameraCartographic = masterCamera.positionCartographic;\n      masterCamera.percentageChanged = options.sensitivity || DEFAULT_SENSITIVITY;\n      const removeCallback = masterCamera.changed.addEventListener(() => {\n        maps.forEach(slaveMapConfig => {\n          const slaveMap = slaveMapConfig.map;\n          const slaveMapOptions = slaveMapConfig.options;\n          if (slaveMap === masterMap) {\n            return;\n          }\n\n          const slaveCamera = slaveMap.getCameraService().getCamera();\n          const slaveCameraCartographic = slaveCamera.positionCartographic;\n          const position = Cesium.Ellipsoid.WGS84.cartographicToCartesian({\n            longitude: masterCameraCartographic.longitude,\n            latitude: masterCameraCartographic.latitude,\n            height: slaveMapOptions.bindZoom ? masterCameraCartographic.height : slaveCameraCartographic.height,\n          });\n\n          if (slaveMap.getCesiumViewer().scene.mode !== Cesium.SceneMode.MORPHING) {\n            slaveCamera.setView({\n              destination: position,\n              orientation: {\n                heading: slaveCamera.heading,\n                pitch: slaveCamera.pitch,\n              },\n            });\n          }\n        });\n      });\n      this.eventRemoveCallbacks.push(removeCallback);\n    });\n  }\n\n  /**\n   * Unsyncs maps cameras\n   */\n  unsyncMapsCameras() {\n    this.eventRemoveCallbacks.forEach(removeCallback => removeCallback());\n    this.eventRemoveCallbacks = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../cesium/cesium.service';\n\n/**\n * Take screenshot of your cesium globe.\n *\n * usage:\n * ```typescript\n * // get base 64 data url\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\n *\n * // or download as png\n * screenshotService.downloadMapScreenshot('my-map.png');\n *\n * ```\n *\n */\n@Injectable()\nexport class ScreenshotService {\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  getMapScreenshotDataUrlBase64() {\n    const canvas = this.cesiumService.getCanvas();\n    return canvas.toDataURL();\n  }\n\n\n  downloadMapScreenshot(filename = 'map.png') {\n    const dataUrl = this.getMapScreenshotDataUrlBase64();\n    this.downloadURI(dataUrl, filename);\n  }\n\n  private downloadURI(uri: string, name: string) {\n    const link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { ConfigurationService } from '../../cesium-enhancements/ConfigurationService';\nimport { SceneMode } from '../../models/scene-mode.enum';\nimport { CameraService } from '../../services/camera/camera.service';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { KeyboardControlService } from '../../services/keyboard-control/keyboard-control.service';\nimport { CesiumEventBuilder } from '../../services/map-events-mananger/cesium-event-builder';\nimport { MapEventsManagerService } from '../../services/map-events-mananger/map-events-manager';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { MapsManagerService } from '../../services/maps-manager/maps-manager.service';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { ScreenshotService } from '../../services/screenshot/screenshot.service';\n\n/**\n * This is a map implementation, creates the cesium map.\n * Every layer should be tag inside ac-map tag\n *\n * Accessing cesium viewer:\n * 1. acMapComponent.getCesiumViewer()\n * 2. Use MapManagerService.getMap().getCesiumViewer() or if more then one map: MapManagerService.getMap(mapId).getCesiumViewer()\n *\n *\n * @example\n * <ac-map>\n *     <ac-map-layer-provider></ac-map-layer-provider>\n *     <dynamic-ellipse-layer #layer></dynamic-ellipse-layer>\n * </ac-map>\n */\n@Component({\n  selector: 'ac-map',\n  template: `\n    <ac-default-plonter *ngIf=\"!disableDefaultPlonter\"></ac-default-plonter>\n    <ac-context-menu-wrapper></ac-context-menu-wrapper>\n    <ng-content></ng-content>\n  `,\n  providers: [\n    CesiumService,\n    BillboardDrawerService,\n    CesiumEventBuilder,\n    KeyboardControlService,\n    MapEventsManagerService,\n    PlonterService,\n    LabelDrawerService,\n    PolylineDrawerService,\n    PolylinePrimitiveDrawerService,\n    EllipseDrawerService,\n    PointDrawerService,\n    ArcDrawerService,\n    CzmlDrawerService,\n    PolygonDrawerService,\n    MapLayersService,\n    CameraService,\n    ScreenshotService,\n    ContextMenuService,\n    CoordinateConverter,\n  ],\n})\nexport class AcMapComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n  /**\n   * Disable default plonter context menu\n   */\n  @Input()\n  disableDefaultPlonter = false;\n\n  /**\n   * Set the id name of the map\n   * default: 'default-map-id-[index]'\n   */\n  @Input()\n  mapId: string;\n\n  /**\n   * flyTo options according to https://cesiumjs.org/Cesium/Build/Documentation/Camera.html?classFilter=cam#flyTo\n   */\n  @Input()\n  flyTo: any;\n\n  /**\n   * Sets the map's SceneMode\n   */\n  @Input()\n  sceneMode: SceneMode;\n\n  /**\n   * Optional - the container element's id in which the map's canvas will be appended to.\n   * If not supplied - the container element will be the parent element of ac-map;\n   */\n  @Input()\n  containerId: string;\n\n  private mapContainer: HTMLElement;\n\n  constructor(\n    private _cesiumService: CesiumService,\n    private _cameraService: CameraService,\n    private _elemRef: ElementRef,\n    @Inject(DOCUMENT) private document,\n    private mapsManagerService: MapsManagerService,\n    private billboardDrawerService: BillboardDrawerService,\n    private labelDrawerService: LabelDrawerService,\n    private ellipseDrawerService: EllipseDrawerService,\n    private polylineDrawerService: PolylineDrawerService,\n    private polygonDrawerService: PolygonDrawerService,\n    private arcDrawerService: ArcDrawerService,\n    private pointDrawerService: PointDrawerService,\n    private czmlDrawerService: CzmlDrawerService,\n    private mapEventsManager: MapEventsManagerService,\n    private keyboardControlService: KeyboardControlService,\n    private mapLayersService: MapLayersService,\n    private configurationService: ConfigurationService,\n    private screenshotService: ScreenshotService,\n    public contextMenuService: ContextMenuService,\n    private coordinateConverter: CoordinateConverter,\n  ) {\n    this.mapContainer = this.document.createElement('div');\n    this.mapContainer.style.width = '100%';\n    this.mapContainer.style.height = '100%';\n    this.mapContainer.className = 'map-container';\n    this._cesiumService.init(this.mapContainer, this);\n    this._cameraService.init(this._cesiumService);\n    this.mapEventsManager.init();\n    this.billboardDrawerService.init();\n    this.labelDrawerService.init();\n    this.ellipseDrawerService.init();\n    this.polylineDrawerService.init();\n    this.polygonDrawerService.init();\n    this.arcDrawerService.init();\n    this.pointDrawerService.init();\n    this.czmlDrawerService.init();\n    this.keyboardControlService.init();\n    this.contextMenuService.init(this.mapEventsManager);\n  }\n\n  ngOnInit() {\n    this.mapId = this.mapsManagerService._registerMap(this.mapId, this);\n    if (!this.containerId) {\n      this._elemRef.nativeElement.appendChild(this.mapContainer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['sceneMode']) {\n      this._cameraService.setSceneMode(changes['sceneMode'].currentValue);\n    }\n    if (changes['flyTo']) {\n      this._cameraService.cameraFlyTo(changes['flyTo'].currentValue);\n    }\n    if (changes['containerId'] && !changes['containerId'].firstChange) {\n      const element = this.document.getElementById(changes['containerId'].currentValue);\n      if (element) {\n        element.appendChild(this.mapContainer);\n      } else {\n        throw new Error(`No element found with id: ${changes['containerId'].currentValue}`);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.mapLayersService.drawAllLayers();\n    if (this.containerId) {\n      setTimeout(() => {\n        const element = this.document.getElementById(this.containerId);\n        if (element) {\n          element.appendChild(this.mapContainer);\n        } else {\n          throw new Error(`No element found with id: ${this.containerId}`);\n        }\n      }, 0);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapContainer.remove();\n    this.mapsManagerService._removeMapById(this.mapId);\n  }\n\n  /**\n   * @returns ac-map's cesium service\n   */\n  getCesiumService() {\n    return this._cesiumService;\n  }\n\n  /**\n   * @returns map's cesium viewer\n   */\n  getCesiumViewer() {\n    return this._cesiumService.getViewer();\n  }\n\n\n  getCameraService(): CameraService {\n    return this._cameraService;\n  }\n\n  getId() {\n    return this.mapId;\n  }\n\n\n  getMapContainer() {\n    return this.mapContainer;\n  }\n\n\n  getMapEventsManager(): MapEventsManagerService {\n    return this.mapEventsManager;\n  }\n\n  getContextMenuService(): ContextMenuService {\n    return this.contextMenuService;\n  }\n\n  getScreenshotService() {\n    return this.screenshotService;\n  }\n\n  getKeyboardControlService() {\n    return this.keyboardControlService;\n  }\n\n  getCoordinateConverter() {\n    return this.coordinateConverter;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IDescription } from '../../models/description';\nimport { LayerOptions } from '../../models/layer-options';\n\n@Injectable()\nexport class LayerService {\n  private _context: any;\n  private _options: LayerOptions;\n  private _show: boolean;\n  private _zIndex: number;\n  private _entityName: string;\n  private _cache = true;\n  private descriptions: IDescription[] = [];\n  private layerUpdate = new EventEmitter();\n\n  get cache(): boolean {\n    return this._cache;\n  }\n\n  set cache(value: boolean) {\n    this._cache = value;\n  }\n\n  get zIndex(): number {\n    return this._zIndex;\n  }\n\n  set zIndex(value: number) {\n    if (value !== this._zIndex) {\n      this.layerUpdate.emit();\n    }\n    this._zIndex = value;\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set show(value: boolean) {\n    if (value !== this._show) {\n      this.layerUpdate.emit();\n    }\n    this._show = value;\n  }\n\n  get options(): LayerOptions {\n    return this._options;\n  }\n\n  set options(value: LayerOptions) {\n    this._options = value;\n    this.layerUpdate.emit();\n  }\n\n  get context(): any {\n    return this._context;\n  }\n\n  set context(context) {\n    this._context = context;\n    this.layerUpdate.emit();\n  }\n\n  setEntityName(name: string) {\n    this._entityName = name;\n  }\n\n  getEntityName(): string {\n    return this._entityName;\n  }\n\n  registerDescription(descriptionComponent: IDescription) {\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\n      this.descriptions.push(descriptionComponent);\n    }\n  }\n\n  unregisterDescription(descriptionComponent: IDescription) {\n    const index = this.descriptions.indexOf(descriptionComponent);\n    if (index > -1) {\n      this.descriptions.splice(index, 1);\n    }\n  }\n\n  getDescriptions(): IDescription[] {\n    return this.descriptions;\n  }\n\n  layerUpdates(): EventEmitter<any> {\n    return this.layerUpdate;\n  }\n}\n","/**\n * Action to do on entity\n */\nexport enum ActionType {\n  ADD_UPDATE,\n  DELETE\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComputationCache {\n  private _cache = new Map<string, any>();\n\n  get(expression: string, insertFn: (() => any)): any {\n    if (this._cache.has(expression)) {\n      return this._cache.get(expression);\n    }\n\n    const value = insertFn();\n    this._cache.set(expression, value);\n    return value;\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n","export class Checker {\n  static throwIfAnyNotPresent(values: Object, propertyNames: string[]) {\n    propertyNames.forEach(propertyName => Checker.throwIfNotPresent(values, propertyName));\n  }\n\n  static throwIfNotPresent(value: any, name: string) {\n    if (!Checker.present(value[name])) {\n      throw new Error(`Error: ${name} was not given.`);\n    }\n  }\n\n  static present(value: any) {\n    return value !== undefined && value !== null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { Checker } from '../../../../utils/checker';\nimport { EllipsePrimitive } from 'primitive-primitives';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n\n/**\n *  This drawer is responsible for creating the dynamic version of the ellipse component.\n *  We are using the primitive-primitives implementation of an ellipse. see: https://github.com/gotenxds/Primitive-primitives\n *  This allows us to change the position of the ellipses without creating a new primitive object\n *  as Cesium does not allow updating an ellipse.\n */\n@Injectable()\nexport class DynamicEllipseDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    Checker.throwIfAnyNotPresent(cesiumProps, ['center', 'semiMajorAxis', 'semiMinorAxis']);\n\n    return super.add(new EllipsePrimitive(cesiumProps));\n  }\n\n  update(ellipse: any, cesiumProps: any): any {\n    ellipse.updateLocationData(cesiumProps);\n\n    return ellipse;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for creating the dynamic version of the polyline component.\n */\n@Injectable()\nexport class DynamicPolylineDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineCollection, cesiumService);\n  }\n}\n","import { PrimitivesDrawerService } from '../../primitives-drawer/primitives-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n *\n * This drawer is deprecated.\n * General static primitives drawer responsible of drawing static Cesium primitives with material.\n */\nexport abstract class StaticPrimitiveDrawer extends PrimitivesDrawerService {\n  constructor(private geometryType: any, cesiumService: CesiumService) {\n    super(Cesium.PrimitiveCollection, cesiumService);\n  }\n\n  add(geometryProps: any, instanceProps: any, primitiveProps: any): any {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    primitiveProps.asynchronous = false;\n    const primitive = new Cesium.Primitive(primitiveProps);\n    return super.add(primitive);\n  }\n\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    instanceProps.geometry = new this.geometryType(geometryProps);\n    primitiveProps.geometryInstances = new Cesium.GeometryInstance(instanceProps);\n    this._cesiumCollection.remove(primitive);\n    return super.add(new Cesium.Primitive(primitiveProps));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the circle component.\n */\n@Injectable()\nexport class StaticCircleDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.CircleGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../cesium/cesium.service';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n/**\n *  This drawer is responsible for creating the static version of the polyline component.\n *  This also allows us to change the color of the polylines.\n */\n@Injectable()\nexport class StaticPolylineDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolylineGeometry, cesiumService);\n  }\n\n  /**\n   * Update function can only change the primitive color.\n   */\n  update(primitive: any, geometryProps: any, instanceProps: any, primitiveProps: any) {\n    const color = instanceProps.attributes.color.value;\n\n    if (primitive.ready) {\n      primitive.getGeometryInstanceAttributes().color = color;\n    } else {\n      Cesium.when(primitive.readyPromise).then((readyPrimitive: any) => {\n        readyPrimitive.getGeometryInstanceAttributes().color.value = color;\n      });\n    }\n\n    return primitive;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\nimport { CesiumService } from '../../../cesium/cesium.service';\n\n/**\n + This drawer is responsible for drawing a polygon over the Cesium map.\n + This implementation uses simple PolygonGeometry and Primitive parameters.\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\n */\n@Injectable()\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PolygonGeometry, cesiumService);\n  }\n}\n","import { CesiumService } from '../../../cesium/cesium.service';\nimport { Injectable } from '@angular/core';\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\n\n\n/**\n + *  This drawer is responsible for drawing an ellipse over the Cesium map.\n + *  This implementation uses simple EllipseGeometry and Primitive parameters.\n + *  This doesn't allow us to change the position, color, etc.. of the ellipses. For that you may use the dynamic ellipse component.\n + */\n@Injectable()\nexport class StaticEllipseDrawerService extends StaticPrimitiveDrawer {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.EllipseGeometry, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing models.\n */\n@Injectable()\nexport class ModelDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing box.\n */\n@Injectable()\nexport class BoxDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.box);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing corridors .\n */\n@Injectable()\nexport class CorridorDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.corridor);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing cylinders.\n */\n@Injectable()\nexport class CylinderDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.cylinder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing ellipsoid.\n */\n@Injectable()\nexport class EllipsoidDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.ellipsoid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polylines.\n */\n@Injectable()\nexport class PolylineVolumeDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.polylineVolume);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing polygons.\n */\n@Injectable()\nexport class WallDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.wall);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesDrawerService } from '../entities-drawer/entities-drawer.service';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { GraphicsType } from '../entities-drawer/enums/graphics-type.enum';\n\n/**\n *  This drawer is responsible for drawing rectangle.\n */\n@Injectable()\nexport class RectangleDrawerService extends EntitiesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(cesiumService, GraphicsType.rectangle);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing labels as primitives.\n *  This drawer is more efficient than LabelDrawerService when drawing dynamic labels.\n */\n@Injectable()\nexport class LabelPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.LabelCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible for drawing billboards as primitives.\n *  This drawer is more efficient than BillboardDrawerService when drawing dynamic billboards.\n */\n@Injectable()\nexport class BillboardPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.BillboardCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n/**\n *  This drawer is responsible of drawing points as primitives.\n *  This drawer is more efficient than PointDrawerService when drawing dynamic points.\n */\n@Injectable()\nexport class PointPrimitiveDrawerService extends PrimitivesDrawerService {\n  constructor(cesiumService: CesiumService) {\n    super(Cesium.PointPrimitiveCollection, cesiumService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CesiumService } from '../../cesium/cesium.service';\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\n\n@Injectable()\nexport class HtmlDrawerService extends PrimitivesDrawerService {\n  constructor(private _cesiumService: CesiumService) {\n    super(Cesium.HtmlCollection, _cesiumService);\n  }\n\n  add(cesiumProps: any): any {\n    cesiumProps.scene = this._cesiumService.getScene();\n    cesiumProps.mapContainer = this._cesiumService.getMap().getMapContainer();\n    return super.add(cesiumProps);\n  }\n}\n","import { from as observableFrom, merge as observableMerge, Observable, Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\n// tslint:disable\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerOptions } from '../../models/layer-options';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\n\n// tslint:enable\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\n *  + show `{boolean}` - show/hide layer's entities.\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\n *  + debug `{boolean}` - prints every acNotification\n *\n *\n *  __Usage :__\n *  ```\n *  <ac-map>\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\n *      <ac-billboard-desc props=\"{\n *        image: track.image,\n *        position: track.position,\n *        scale: track.scale,\n *        color: track.color,\n *        name: track.name\n *      }\">\n *      </ac-billboard-desc>\n *        <ac-label-desc props=\"{\n *          position: track.position,\n *          pixelOffset : [-15,20] | pixelOffset,\n *          text: track.name,\n *          font: '15px sans-serif'\n *        }\">\n *      </ac-label-desc>\n *    </ac-layer>\n *  </ac-map>\n *  ```\n */\n@Component({\n  selector: 'ac-layer',\n  template: '<ng-content></ng-content>',\n  providers: [\n    LayerService,\n    ComputationCache,\n    BillboardDrawerService,\n    LabelDrawerService,\n    EllipseDrawerService,\n    PolylineDrawerService,\n    ArcDrawerService,\n    PointDrawerService,\n    PolygonDrawerService,\n    ModelDrawerService,\n    BoxDrawerService,\n    CorridorDrawerService,\n    CylinderDrawerService,\n    EllipsoidDrawerService,\n    PolylineVolumeDrawerService,\n    WallDrawerService,\n    RectangleDrawerService,\n    PolylinePrimitiveDrawerService,\n    LabelPrimitiveDrawerService,\n    BillboardPrimitiveDrawerService,\n    PointPrimitiveDrawerService,\n    HtmlDrawerService,\n    CzmlDrawerService,\n\n    DynamicEllipseDrawerService,\n    DynamicPolylineDrawerService,\n    StaticCircleDrawerService,\n    StaticPolylineDrawerService,\n    StaticPolygonDrawerService,\n    StaticEllipseDrawerService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n  @Input()\n  show = true;\n  @Input()\n  acFor: string;\n  @Input()\n  context: any;\n  @Input()\n  store = false;\n  @Input()\n  options: LayerOptions;\n  @Input()\n  zIndex = 0;\n  @Input()\n  debug = false;\n\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  private entityName: string;\n  private stopObservable = new Subject<any>();\n  private observable: Observable<AcNotification>;\n  private _drawerList: Map<string, BasicDrawerService>;\n  private _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n  private entitiesStore = new Map<string, any>();\n  private layerDrawerDataSources: any[] = [];\n\n  constructor(private layerService: LayerService,\n              private _computationCache: ComputationCache,\n              private mapLayersService: MapLayersService,\n              billboardDrawerService: BillboardDrawerService,\n              labelDrawerService: LabelDrawerService,\n              ellipseDrawerService: EllipseDrawerService,\n              polylineDrawerService: PolylineDrawerService,\n              polygonDrawerService: PolygonDrawerService,\n              arcDrawerService: ArcDrawerService,\n              pointDrawerService: PointDrawerService,\n              modelDrawerService: ModelDrawerService,\n              boxDrawerService: BoxDrawerService,\n              corridorDrawerService: CorridorDrawerService,\n              cylinderDrawerService: CylinderDrawerService,\n              ellipsoidDrawerSerice: EllipsoidDrawerService,\n              polylineVolumeDrawerService: PolylineVolumeDrawerService,\n              wallDrawerService: WallDrawerService,\n              rectangleDrawerService: RectangleDrawerService,\n              dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n              dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n              staticCircleDrawerService: StaticCircleDrawerService,\n              staticPolylineDrawerService: StaticPolylineDrawerService,\n              staticPolygonDrawerService: StaticPolygonDrawerService,\n              staticEllipseDrawerService: StaticEllipseDrawerService,\n              polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\n              labelPrimitiveDrawerService: LabelPrimitiveDrawerService,\n              billboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\n              pointPrimitiveDrawerService: PointPrimitiveDrawerService,\n              htmlDrawerService: HtmlDrawerService,\n              czmlDrawerService: CzmlDrawerService\n  ) {\n    this._drawerList = new Map([\n      ['billboard', billboardDrawerService],\n      ['label', labelDrawerService],\n      ['ellipse', ellipseDrawerService],\n      ['polyline', polylineDrawerService],\n      ['polygon', polygonDrawerService as BasicDrawerService],\n      ['arc', arcDrawerService],\n      ['point', pointDrawerService],\n      ['model', modelDrawerService],\n      ['box', boxDrawerService],\n      ['corridor', corridorDrawerService],\n      ['cylinder', cylinderDrawerService],\n      ['ellipsoid', ellipsoidDrawerSerice],\n      ['polylineVolume', polylineVolumeDrawerService],\n      ['rectangle', rectangleDrawerService],\n      ['wall', wallDrawerService],\n      ['polylinePrimitive', polylinePrimitiveDrawerService],\n      ['labelPrimitive', labelPrimitiveDrawerService],\n      ['billboardPrimitive', billboardPrimitiveDrawerService],\n      ['pointPrimitive', pointPrimitiveDrawerService],\n      ['html', htmlDrawerService],\n      ['czml', czmlDrawerService],\n\n      ['dynamicEllipse', dynamicEllipseDrawerService],\n      ['dynamicPolyline', dynamicPolylineDrawerService],\n      ['staticCircle', staticCircleDrawerService],\n      ['staticPolyline', staticPolylineDrawerService],\n      ['staticPolygon', staticPolygonDrawerService],\n      ['staticEllipse', staticEllipseDrawerService],\n    ]);\n  }\n\n  init() {\n    this.initValidParams();\n\n    observableMerge(this._updateStream, this.observable).pipe<AcNotification>(takeUntil(this.stopObservable)).subscribe((notification) => {\n      this._computationCache.clear();\n\n      if (this.debug) {\n        console.log('AcLayer received notification:', notification);\n      }\n\n      let contextEntity = notification.entity;\n      if (this.store) {\n        contextEntity = this.updateStore(notification);\n      }\n\n      this.context[this.entityName] = contextEntity;\n      this.layerService.getDescriptions().forEach((descriptionComponent) => {\n        switch (notification.actionType) {\n          case ActionType.ADD_UPDATE:\n            descriptionComponent.draw(this.context, notification.id, contextEntity);\n            break;\n          case ActionType.DELETE:\n            descriptionComponent.remove(notification.id);\n            break;\n          default:\n            console.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\n        }\n      });\n    });\n  }\n\n  private updateStore(notification: AcNotification): any {\n    if (notification.actionType === ActionType.DELETE) {\n      this.entitiesStore.delete(notification.id);\n      return undefined;\n    } else {\n      if (this.entitiesStore.has(notification.id)) {\n        const entity = this.entitiesStore.get(notification.id);\n        Object.assign(entity, notification.entity);\n        return entity;\n      } else {\n        this.entitiesStore.set(notification.id, notification.entity);\n        return notification.entity;\n      }\n    }\n  }\n\n  private initValidParams() {\n    if (!this.context) {\n      throw new Error('ac-layer: must initialize [context] ');\n    }\n\n    if (!this.acForRgx.test(this.acFor)) {\n      throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\n    }\n    const acForArr = this.acFor.split(' ');\n    this.observable = this.context[acForArr[3]];\n    this.entityName = acForArr[1];\n    if (!this.isObservable(this.observable)) {\n      throw new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n    }\n\n    this.layerService.context = this.context;\n    this.layerService.setEntityName(this.entityName);\n  }\n\n  /** Test for a rxjs Observable */\n  private isObservable(obj: any): boolean {\n    /* check via duck-typing rather than instance of\n     * to allow passing between window contexts */\n    return obj && typeof obj.subscribe === 'function';\n  }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnInit(): void {\n    this.layerService.context = this.context;\n    this.layerService.options = this.options;\n    this.layerService.show = this.show;\n    this.layerService.zIndex = this.zIndex;\n    this._drawerList.forEach((drawer, drawerName) => {\n      const initOptions = this.options ? this.options[drawerName] : undefined;\n      const drawerDataSources = drawer.init(initOptions);\n      // only entities drawers create data sources\n      if (drawerDataSources) {\n        // this.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\n        // TODO: Check if the following line causes Bad Performance\n        this.layerDrawerDataSources.push(...drawerDataSources);\n      }\n      drawer.setShow(this.show);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.show && !changes.show.firstChange) {\n      const showValue = changes['show'].currentValue;\n      this.layerService.show = showValue;\n      this._drawerList.forEach((drawer) => drawer.setShow(showValue));\n    }\n\n    if (changes.zIndex && !changes.zIndex.firstChange) {\n      const zIndexValue = changes['zIndex'].currentValue;\n      this.layerService.zIndex = zIndexValue;\n      this.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayersService.removeDataSources(this.layerDrawerDataSources);\n    this.stopObservable.next(true);\n    this.removeAll();\n  }\n\n  getLayerService(): LayerService {\n    return this.layerService;\n  }\n\n  /**\n   * Returns an array of DataSources registered by a drawer of this layer\n   * @return Array of Cesium.DataSources\n   */\n  getLayerDrawerDataSources(): any[] {\n    return this.layerDrawerDataSources;\n  }\n\n  /**\n   * Returns an Array of DataSources of the drawer with the provided DataSource.name\n   * Example: getDataSourceOfDrawer('polyline') returns the dataSource of polyline drawer\n   * @return Array of Cesium.DataSources\n   */\n  getDrawerDataSourcesByName(name: string): any[] {\n    return this.layerDrawerDataSources.filter(d => d.name === name);\n  }\n\n  /**\n   * Returns the store.\n   */\n  getStore(): Map<string, any> {\n    return this.entitiesStore;\n  }\n\n  /**\n   * Remove all the entities from the layer.\n   */\n  removeAll(): void {\n    this.layerService.getDescriptions().forEach((description) => description.removeAll());\n    this.entitiesStore.clear();\n  }\n\n  /**\n   * remove entity from the layer\n   */\n  remove(entityId: string) {\n    this._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n    this.entitiesStore.delete(entityId);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  updateNotification(notification: AcNotification): void {\n    this._updateStream.next(notification);\n  }\n\n  /**\n   * add/update entity to/from the layer\n   */\n  update(entity: AcEntity, id: string): void {\n    this._updateStream.next({entity, id, actionType: ActionType.ADD_UPDATE});\n  }\n\n  refreshAll(collection: AcNotification[]): void {\n    // TODO make entity interface: collection of type entity not notification\n    observableFrom(collection).subscribe((entity) => this._updateStream.next(entity));\n  }\n}\n","import { Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { MapLayersService } from '../map-layers/map-layers.service';\n\n/**\n *  Extend this class to create drawing on map components.\n */\nexport class EntityOnMapComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  props: any;\n\n  protected selfPrimitive: any;\n  protected selfPrimitiveIsDraw: boolean;\n  protected dataSources: any;\n\n  constructor(protected _drawer: BasicDrawerService, private mapLayers: MapLayersService) {\n  }\n\n  ngOnInit(): void {\n    this.selfPrimitiveIsDraw = false;\n    const dataSources = this._drawer.init();\n    if (dataSources) {\n      this.dataSources = dataSources;\n      // this.mapLayers.registerLayerDataSources(dataSources, 0);\n    }\n    this.drawOnMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const props = changes['props'];\n    if (props.currentValue !== props.previousValue) {\n      this.updateOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.props);\n  }\n\n  removeFromMap() {\n    this.selfPrimitiveIsDraw = false;\n    return this._drawer.remove(this.selfPrimitive);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      return this._drawer.update(this.selfPrimitive, this.props);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mapLayers.removeDataSources(this.dataSources);\n    this.removeFromMap();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard [props]=\"{\n *      image: image,\n *      position: position,\n *      scale: scale,\n *      color: color,\n *      name: name\n *    }\">;\n *    </ac-billboard>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard',\n  template: '',\n})\nexport class AcBillboardComponent extends EntityOnMapComponent {\n\n  constructor(billboardDrawer: BillboardDrawerService, mapLayers: MapLayersService) {\n    super(billboardDrawer, mapLayers);\n  }\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { AcEntity } from '../../models/ac-entity';\nimport { BasicDrawerService } from '../drawers/basic-drawer/basic-drawer.service';\nimport { IDescription } from '../../models/description';\n\nexport interface OnDrawParams {\n  acEntity: AcEntity;\n  entityId: string;\n  cesiumEntity: any;\n}\n\n/**\n *  the ancestor class for creating components.\n *  extend this class to create desc component.\n */\nexport class BasicDesc implements OnInit, OnDestroy, IDescription {\n  @Input()\n  props: any;\n\n  @Output()\n  onDraw: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  @Output()\n  onRemove: EventEmitter<OnDrawParams> = new EventEmitter<OnDrawParams>();\n\n  protected _cesiumObjectsMap: Map<string, any> = new Map<string, any>();\n  private _propsEvaluateFn: Function;\n  private _propsAssignerFn: Function;\n\n  constructor(protected _drawer: BasicDrawerService,\n              protected _layerService: LayerService,\n              protected _computationCache: ComputationCache,\n              protected _cesiumProperties: CesiumProperties) {\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    return this._propsEvaluateFn(this._computationCache, context);\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => this._propsAssignerFn(cesiumObject, desc);\n  }\n\n  getLayerService(): LayerService {\n    return this._layerService;\n  }\n\n  setLayerService(layerService: LayerService) {\n    this._layerService.unregisterDescription(this);\n    this._layerService = layerService;\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache, true);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  ngOnInit(): void {\n    if (!this.props) {\n      console.error('ac-desc components error: [props] input is mandatory');\n    }\n\n    this._layerService.registerDescription(this);\n    this._propsEvaluateFn = this._cesiumProperties.createEvaluator(this.props, this._layerService.cache);\n    this._propsAssignerFn = this._cesiumProperties.createAssigner(this.props);\n  }\n\n  public getCesiumObjectsMap(): Map<string, any> {\n    return this._cesiumObjectsMap;\n  }\n\n  draw(context: any, id: string, entity: AcEntity): void {\n    const cesiumProps = this._propsEvaluator(context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const cesiumObject = this._drawer.add(cesiumProps);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._cesiumObjectsMap.set(id, cesiumObject);\n    } else {\n      const cesiumObject = this._cesiumObjectsMap.get(id);\n      this.onDraw.emit({\n        acEntity: entity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      cesiumObject.acEntity = entity; // set the entity on the cesiumObject for later usage\n      this._drawer.setPropsAssigner(this._getPropsAssigner());\n      this._drawer.update(cesiumObject, cesiumProps);\n    }\n  }\n\n  remove(id: string) {\n    const cesiumObject = this._cesiumObjectsMap.get(id);\n    if (cesiumObject) {\n      this.onRemove.emit({\n        acEntity: cesiumObject.acEntity,\n        cesiumEntity: cesiumObject,\n        entityId: id,\n      });\n      this._drawer.remove(cesiumObject);\n      this._cesiumObjectsMap.delete(id);\n    }\n  }\n\n  removeAll() {\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n\n  ngOnDestroy() {\n    this._layerService.unregisterDescription(this);\n    this.removeAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonStringMapper } from 'json-string-mapper';\n\n@Injectable()\nexport class JsonMapper {\n  private _mapper: JsonStringMapper;\n\n  constructor() {\n    this._mapper = new JsonStringMapper();\n  }\n\n  map(expression: string): Map<string, string> {\n    return this._mapper.map(expression);\n  }\n}\n","/**\n * Service for effective assignment.\n */\nexport class SmartAssigner {\n\n  static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\n    let fnBody = ``;\n\n    props.forEach(prop => {\n      if (!allowUndefined) {\n        // tslint:disable-next-line:max-line-length\n        fnBody += `if (!(obj1['${prop}'] instanceof Cesium.CallbackProperty) && obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\n      } else {\n        fnBody += `if(!(obj1['${prop}'] instanceof Cesium.CallbackProperty))obj1['${prop}'] = obj2['${prop}']; `;\n      }\n    });\n\n    fnBody += `return obj1`;\n    const assignFn = new Function('obj1', 'obj2', fnBody);\n\n    return function smartAssigner(obj1: Object, obj2: Object) {\n      return assignFn(obj1, obj2);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonMapper } from '../json-mapper/json-mapper.service';\nimport { Parse } from 'angular2parse';\nimport { SmartAssigner } from '../smart-assigner/smart-assigner.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\n\n@Injectable()\nexport class CesiumProperties {\n  private _assignersCache = new Map<string, (oldVal: Object, newVal: Object) => Object>();\n  private _evaluatorsCache = new Map<string, (cache: ComputationCache, context: Object) => Object>();\n\n  constructor(private _parser: Parse,\n              private _jsonMapper: JsonMapper) {\n  }\n\n  _compile(expression: string, withCache = true): (cache: ComputationCache, context: Object) => Object {\n    const cesiumDesc = {};\n    const propsMap = new Map<string, { expression: string, get: Function }>();\n\n    const resultMap = this._jsonMapper.map(expression);\n\n    resultMap.forEach((resultExpression, prop) => propsMap.set(prop, {\n      expression: resultExpression,\n      get: this._parser.eval(resultExpression)\n    }));\n\n    propsMap.forEach((value, prop) => {\n      if (withCache) {\n        cesiumDesc[prop || 'undefined'] = `cache.get(\\`${value.expression}\\`, () => propsMap.get('${prop}').get(context))`;\n      } else {\n        cesiumDesc[prop || 'undefined'] = `propsMap.get('${prop}').get(context)`;\n      }\n    });\n\n    const fnBody = `return ${JSON.stringify(cesiumDesc).replace(/\"/g, '')};`;\n    const getFn = new Function('propsMap', 'cache', 'context', fnBody);\n\n    return function evaluateCesiumProps(cache: ComputationCache, context: Object): Object {\n      return getFn(propsMap, cache, context);\n    };\n  }\n\n  _build(expression: string): (oldVal: Object, newVal: Object) => Object {\n    const props = Array.from(this._jsonMapper.map(expression).keys());\n    const smartAssigner = SmartAssigner.create(props);\n\n    return function assignCesiumProps(oldVal: Object, newVal: Object) {\n      return smartAssigner(oldVal, newVal);\n    };\n  }\n\n  createEvaluator(expression: string, withCache = true, newEvaluator = false): (cache: ComputationCache, context: Object) => Object {\n    if (!newEvaluator && this._evaluatorsCache.has(expression)) {\n      return this._evaluatorsCache.get(expression);\n    }\n\n    const evaluatorFn = this._compile(expression, withCache);\n    this._evaluatorsCache.set(expression, evaluatorFn);\n\n    return evaluatorFn;\n  }\n\n  createAssigner(expression: string): (oldVal: Object, newVal: Object) => Object {\n    if (this._assignersCache.has(expression)) {\n      return this._assignersCache.get(expression);\n    }\n\n    const assignFn = this._build(expression);\n    this._assignersCache.set(expression, assignFn);\n\n    return assignFn;\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a billboard implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and BillboardGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BillboardGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardDescComponent)}],\n})\nexport class AcBillboardDescComponent extends BasicDesc {\n\n  constructor(billboardDrawer: BillboardDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-layer element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-ellipse-desc props=\"{\n *      position: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      height: 0\n *    }\">\n *    </ac-ellipse-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipse-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipseDescComponent)}],\n})\nexport class AcEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PolylineGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylineDescComponent)}],\n})\nexport class AcPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: PolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * @example\n * <ac-label-desc props=\"{\n *            position: track.position,\n *            pixelOffset : [-15,20] | pixelOffset,\n *            text: track.name,\n *            font: '15px sans-serif'\n *    }\">\n * </ac-label-desc>\n */\n@Pipe({\n  name: 'pixelOffset'\n})\nexport class PixelOffsetPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return new Cesium.Cartesian2(value[0], value[1]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'radiansToDegrees'\n})\nexport class RadiansToDegreesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): number {\n    return (360 - Math.round(180 * value / Math.PI)) % 360;\n  }\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelDescComponent)}],\n})\nexport class AcLabelDescComponent extends BasicDesc {\n\n  constructor(labelDrawer: LabelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: []\n})\nexport class UtilsModule {\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-layer element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *__Usage :__\n *  ```\n *    <ac-circle-desc props=\"{\n *      position: data.position,\n *      radius: 5\n *      granularity:0.08 // Optional\n *    }\">\n *    </ac-circle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-circle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCircleDescComponent)}],\n})\nexport class AcCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: EllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n    delete cesiumProps.radius;\n\n    return cesiumProps;\n  }\n\n  protected _getPropsAssigner(): (cesiumObject: Object, desc: Object) => Object {\n    return (cesiumObject: Object, desc: Object) => Object.assign(cesiumObject, desc);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-layer element.\n *  An arc is not cesium natively implemented and therefore it's API doesn't appear anywhere\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc props=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius,\n *          color : arc.color - The color should be Cesium.Color type\n *    }\">\n *    </ac-arc-desc>\n *    ```\n *\n *    description of the props :\n *    center - The arc is a section of an outline of a circle, This is the center of the circle\n *    angle - the initial angle of the arc in radians\n *    delta - the spreading of the arc,\n *    radius - the distance from the center to the arc\n *\n *    for example :\n *    angle - 0\n *    delta - Ï\n *\n *    will draw an half circle\n */\n\n@Component({\n  selector: 'ac-arc-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcArcDescComponent)}],\n})\nexport class AcArcDescComponent extends BasicDesc {\n\n  constructor(arcDrawer: ArcDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(arcDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n}\n","/**\n * Angular Cesium parent entity, all entities should inherit from it.\n * ```typescript\n * entity= new AcEntity({\n *  \tid: 0,\n *  \tname: 'click me',\n *  \tposition: Cesium.Cartesian3.fromRadians(0.5, 0.5),\n * });\n * ```\n */\nexport class AcEntity {\n\n  /**\n   * Creates entity from a json\n   * @param json entity object\n   * @returns entity as AcEntity\n   */\n  static create(json?: any) {\n    if (json) {\n      return Object.assign(new AcEntity(), json);\n    }\n    return new AcEntity();\n  }\n\n  /**\n   * Creates entity from a json\n   * @param json (Optional) entity object\n   */\n  constructor(json?: any) {\n    Object.assign(this, json);\n  }\n}\n","import { ActionType } from './action-type.enum';\nimport { AcEntity } from './ac-entity';\n\n/**\n * Interface of  Angular2Cesium notification.\n * ac-layer receives an observer of AcNotifications\n */\nexport interface AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n\nexport class AcNotification {\n  id: string;\n  entity?: AcEntity;\n  actionType: ActionType;\n}\n","export enum MapLayerProviderOptions {\n  ArcGisMapServer = Cesium.ArcGisMapServerImageryProvider,\n  WebMapTileService = Cesium.WebMapTileServiceImageryProvider,\n  MapTileService = Cesium.createTileMapServiceImageryProvider,\n  WebMapService = Cesium.WebMapServiceImageryProvider,\n  SingleTileImagery = Cesium.SingleTileImageryProvider,\n  OpenStreetMap = Cesium.createOpenStreetMapImageryProvider,\n  BingMaps = Cesium.BingMapsImageryProvider,\n  GoogleEarthEnterpriseMaps = Cesium.GoogleEarthEnterpriseMapsProvider,\n  MapBox = Cesium.MapboxImageryProvider,\n  UrlTemplateImagery = Cesium.UrlTemplateImageryProvider,\n  OFFLINE = null,\n}\n\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\nimport { MapLayerProviderOptions } from '../../models';\n\n/**\n *  This component is used for adding a map provider service to the map (ac-map)\n *  options according to selected map provider MapLayerProviderOptions enum.\n *  additional setting can be done with cesium imageryLayer (exposed as class member)\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayer.html\n *  and: https://cesiumjs.org/Cesium/Build/Documentation/ImageryLayerCollection.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\">\n *    </ac-map-layer-provider>\n *  ```\n */\n@Component({\n  selector: 'ac-map-layer-provider',\n  template: '',\n})\nexport class AcMapLayerProviderComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * the provider\n   */\n  @Input()\n  provider: any = MapLayerProviderOptions.OFFLINE;\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * The alpha blending value of this layer: 0.0 to 1.0\n   */\n  @Input()\n  alpha = 1.0;\n\n  /**\n   * The brightness of this layer: 0.0 to 1.0\n   */\n  @Input()\n  brightness = 1.0;\n\n  /**\n   * The contrast of this layer: 0.0 to 1.0\n   */\n  @Input()\n  contrast = 1.0;\n\n  public imageryLayer: any;\n  public imageryLayersCollection: any;\n  public layerProvider: any;\n\n  constructor(private cesiumService: CesiumService) {\n    this.imageryLayersCollection = this.cesiumService.getScene().imageryLayers;\n  }\n\n  private createOfflineMapProvider() {\n    return Cesium.createTileMapServiceImageryProvider({\n      url: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n    });\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\n      throw new Error('options must have a url');\n    }\n    switch (this.provider) {\n      case MapLayerProviderOptions.WebMapService:\n      case MapLayerProviderOptions.WebMapTileService:\n      case MapLayerProviderOptions.ArcGisMapServer:\n      case MapLayerProviderOptions.SingleTileImagery:\n      case MapLayerProviderOptions.BingMaps:\n      case MapLayerProviderOptions.GoogleEarthEnterpriseMaps:\n      case MapLayerProviderOptions.MapBox:\n      case MapLayerProviderOptions.UrlTemplateImagery:\n        this.layerProvider = new this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.MapTileService:\n      case MapLayerProviderOptions.OpenStreetMap:\n        this.layerProvider = this.provider(this.options);\n        break;\n      case MapLayerProviderOptions.OFFLINE:\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n      default:\n        console.log('ac-map-layer-provider: [provider] wasn\\'t found. setting OFFLINE provider as default');\n        this.layerProvider = this.createOfflineMapProvider();\n        break;\n    }\n    if (this.show) {\n      this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n      this.imageryLayer.alpha = this.alpha;\n      this.imageryLayer.contrast = this.contrast;\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n      if (showValue) {\n        if (this.imageryLayer) {\n          this.imageryLayersCollection.add(this.imageryLayer, this.index);\n        } else {\n          this.imageryLayer = this.imageryLayersCollection.addImageryProvider(this.layerProvider, this.index);\n          this.imageryLayer.alpha = this.alpha;\n          this.imageryLayer.contrast = this.contrast;\n          this.imageryLayer.brightness = this.brightness;\n        }\n      } else if (this.imageryLayer) {\n        this.imageryLayersCollection.remove(this.imageryLayer, false);\n      }\n    }\n\n    if (changes['alpha'] && !changes['alpha'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.alpha = this.alpha;\n    }\n    if (changes['contrast'] && !changes['contrast'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.contrast = this.contrast;\n    }\n    if (changes['brightness'] && !changes['brightness'].isFirstChange() && this.imageryLayer) {\n      this.imageryLayer.brightness = this.brightness;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.imageryLayer) {\n      this.imageryLayersCollection.remove(this.imageryLayer, true);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-point-desc props=\"{\n *     pixelSize : point.pixelSize, //optional\n *     position : point.positions,\n *     color : point.color  //optional\n *   }\">\n *   </ac-point-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-point-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPointDescComponent)}],\n})\nexport class AcPointDescComponent extends BasicDesc {\n\n  constructor(pointDrawerService: PointDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a label implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and LabelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/LabelGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-label [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif',\n *    fillColor : aquamarine\n *  }\">\n *  </ac-label>;\n *  ```\n */\n\n@Component({\n  selector: 'ac-label',\n  template: '',\n})\nexport class AcLabelComponent extends EntityOnMapComponent {\n\n  constructor(labelDrawer: LabelDrawerService, mapLayers: MapLayersService) {\n    super(labelDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-polyline',\n  template: '',\n})\nexport class AcPolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylineDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an ellipse implementation.\n *  The element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-ellipse [props]=\"{\n *    position: position,\n *    semiMajorAxis:40000.0,\n *    semiMinorAxis:25000.0,\n *    rotation : 0.785398\n *  }\">\n *  </ac-ellipse>\n *  ```\n */\n\n@Component({\n  selector: 'ac-ellipse',\n  template: '',\n})\nexport class AcEllipseComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawer: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawer, mapLayers);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a point implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Entity and PointGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PointGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-point [props]=\"{\n *    position: position,\n *    width: 3\n *  }\">\n *  </ac-point>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point',\n  template: '',\n})\nexport class AcPointComponent extends EntityOnMapComponent {\n\n  constructor(pointDrawer: PointDrawerService, mapLayers: MapLayersService) {\n    super(pointDrawer, mapLayers);\n  }\n}\n","import { Component, DoCheck, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-map element.\n *  __Usage:__\n *  ```\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n\n@Component({\n  selector: 'ac-html',\n  template: `<ng-content></ng-content>`,\n  styles: [`:host {\n                position: absolute;\n                z-index: 100;\n\t\t\t\t}`]\n})\nexport class AcHtmlComponent implements DoCheck, OnDestroy, OnInit {\n\n\n  @Input() props: any;\n  private isDraw = false;\n  preRenderEventListener: () => void;\n\n  constructor(private cesiumService: CesiumService, private elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  setScreenPosition(screenPosition: any) {\n    if (screenPosition) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${screenPosition.y}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${screenPosition.x}px`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.elementRef.nativeElement);\n    if (this.props.show === false) {\n      this.hideElement();\n    }\n  }\n\n  remove() {\n    if (this.isDraw) {\n      this.isDraw = false;\n      this.cesiumService.getScene().preRender.removeEventListener(this.preRenderEventListener);\n      this.hideElement();\n    }\n  }\n\n  hideElement() {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', `none`);\n  }\n\n  add() {\n    if (!this.isDraw) {\n      this.isDraw = true;\n      this.preRenderEventListener = () => {\n        const screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.cesiumService.getScene(),\n          this.props.position);\n        this.setScreenPosition(screenPosition);\n      };\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\n      this.cesiumService.getScene().preRender.addEventListener(this.preRenderEventListener);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.props.show === undefined || this.props.show) {\n      this.add();\n    } else {\n      this.remove();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a circle implementation.\n *  The element must be a child of ac-map element.\n *  semiMajorAxis ans semiMinorAxis are replaced with radius property.\n *  All other properties of props are the same as the properties of Entity and EllipseGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipseGraphics.html\n *\n *  __Usage:__\n *  ```\n *  <ac-circle [props]=\"{\n *    position: position,\n *    radius:40000.0,\n *    granularity:0.03,\n *  }\">\n *  </ac-circle>\n *  ```\n */\n\n@Component({\n  selector: 'ac-circle',\n  template: '',\n})\nexport class AcCircleComponent extends EntityOnMapComponent {\n\n  constructor(ellipseDrawerService: EllipseDrawerService, mapLayers: MapLayersService) {\n    super(ellipseDrawerService, mapLayers);\n  }\n\n  private updateEllipseProps() {\n    this.props.semiMajorAxis = this.props.radius;\n    this.props.semiMinorAxis = this.props.radius;\n    this.props.rotation = 0.0;\n  }\n\n  drawOnMap() {\n    this.updateEllipseProps();\n    super.drawOnMap();\n  }\n\n  updateOnMap() {\n    this.updateEllipseProps();\n    super.updateOnMap();\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is an implementation of an arc.\n *  The element must be a child of ac-map element.\n *  An arc is not natively implemented in cesium.\n *\n *  __Usage :__\n *  ```\n *    <ac-arc-desc geometryProps=\"{\n *          center: arc.center,\n *          angle: arc.angle,\n *          delta: arc.delta,\n *          radius: arc.radius\n *       }\"\n *       instanceProps=\"{\n *          attributes: arc.attributes\n *       }\"\n *       primitiveProps=\"{\n *          appearance: arc.appearance\n *       }\">\n *    </ac-arc-desc>\n *    ```\n */\n\n@Component({\n  selector: 'ac-arc',\n  template: '',\n})\nexport class AcArcComponent extends EntityOnMapComponent implements OnChanges {\n\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  constructor(arcDrawer: ArcDrawerService, mapLayers: MapLayersService) {\n    super(arcDrawer, mapLayers);\n  }\n\n  updateOnMap() {\n    if (this.selfPrimitiveIsDraw) {\n      this.removeFromMap();\n      this.drawOnMap();\n    }\n  }\n\n  drawOnMap() {\n    this.selfPrimitiveIsDraw = true;\n    return this.selfPrimitive = this._drawer.add(this.geometryProps, this.instanceProps, this.primitiveProps);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const geometryProps = changes['geometryProps'];\n    const instanceProps = changes['instanceProps'];\n    const primitiveProps = changes['primitiveProps'];\n    if (geometryProps.currentValue !== geometryProps.previousValue ||\n      instanceProps.currentValue !== instanceProps.previousValue ||\n      primitiveProps.currentValue !== primitiveProps.previousValue) {\n      this.updateOnMap();\n    }\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\n\n/**\n *  This is a polygon implementation.\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon-desc props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolygonDescComponent)}],\n})\nexport class AcPolygonDescComponent extends BasicDesc implements OnInit {\n\n  constructor(polygonDrawer: PolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PlonterService } from '../../services/plonter/plonter.service';\nimport { CoordinateConverter } from '../../services/coordinate-converter/coordinate-converter.service';\n\n@Component(\n  {\n    selector: 'ac-default-plonter',\n    template: `\n      <ac-html *ngIf=\"plonterService.plonterShown\" [props]=\"{\n        position: plonterPosition\n      }\">\n        <div class=\"plonter-context-menu\">\n          <div *ngFor=\"let entity of plonterService.entitesToPlonter\">\n            <div class=\"plonter-item\" (click)=\"chooseEntity(entity)\">{{ entity?.name || entity?.id }}\n            </div>\n          </div>\n        </div>\n      </ac-html>\n    `,\n    styles: [`\n        .plonter-context-menu {\n            background-color: rgba(250, 250, 250, 0.8);\n            box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.15);\n        }\n\n        .plonter-item {\n            cursor: pointer;\n            padding: 2px 15px;\n            text-align: start;\n        }\n\n        .plonter-item:hover {\n            background-color: rgba(0, 0, 0, 0.15);\n        }\n\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [CoordinateConverter],\n  }\n)\nexport class AcDefaultPlonterComponent implements OnInit {\n\n  constructor(public plonterService: PlonterService,\n              private cd: ChangeDetectorRef,\n              private geoConverter: CoordinateConverter) {\n  }\n\n  ngOnInit() {\n    this.plonterService.plonterChangeNotifier.subscribe(() => this.cd.detectChanges());\n  }\n\n  get plonterPosition() {\n    if (this.plonterService.plonterShown) {\n      const screenPos = this.plonterService.plonterClickPosition.endPosition;\n      return this.geoConverter.screenToCartesian3(screenPos);\n    }\n  }\n\n  chooseEntity(entity: any) {\n    this.plonterService.resolvePlonter(entity);\n  }\n}\n","import { Component } from '@angular/core';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\n\n/**\n *  This is a polygon implementation.\n *  The ac-label element must be a child of ac-map element.\n *  _Set `height` prop for performance enhancement_\n *  The properties of props are the same as the properties of Entity and PolygonGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolygonGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polygon props=\"{\n *      hierarchy: polygon.hierarchy,\n *      material: polygon.material,\n *      height: polygon.height\n *    }\">\n *    </ac-polygon>\n *  ```\n */\n@Component({\n  selector: 'ac-polygon',\n  template: '',\n})\nexport class AcPolygonComponent extends EntityOnMapComponent {\n  constructor(polygonDrawer: PolygonDrawerService, mapLayers: MapLayersService) {\n    super(polygonDrawer, mapLayers);\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { BasicDesc } from '../basic-desc/basic-desc.service';\nimport { LayerService } from '../layer-service/layer-service.service';\nimport { ComputationCache } from '../computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../cesium-properties/cesium-properties.service';\nimport { StaticPrimitiveDrawer } from '../drawers/static-dynamic/static-primitive-drawer/static-primitive-drawer.service';\nimport { AcEntity } from '../../models/ac-entity';\n\nexport class BasicStaticPrimitiveDesc extends BasicDesc implements OnInit {\n  @Input()\n  geometryProps: any;\n  @Input()\n  instanceProps: any;\n  @Input()\n  primitiveProps: any;\n\n  private _geometryPropsEvaluator: Function;\n  private _instancePropsEvaluator: Function;\n  private _primitivePropsEvaluator: Function;\n\n  constructor(protected _staticPrimitiveDrawer: StaticPrimitiveDrawer, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(_staticPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit(): void {\n    this._layerService.registerDescription(this);\n\n    this._geometryPropsEvaluator = this._cesiumProperties.createEvaluator(this.geometryProps);\n    this._instancePropsEvaluator = this._cesiumProperties.createEvaluator(this.instanceProps);\n    this._primitivePropsEvaluator = this._cesiumProperties.createEvaluator(this.primitiveProps);\n  }\n\n  draw(context: any, id: string, entity: AcEntity): any {\n    const geometryProps = this._geometryPropsEvaluator(this._computationCache, context);\n    const instanceProps = this._instancePropsEvaluator(this._computationCache, context);\n    const primitiveProps = this._primitivePropsEvaluator(this._computationCache, context);\n\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._staticPrimitiveDrawer.add(geometryProps, instanceProps, primitiveProps);\n      primitive.acEntity = entity; // set the entity on the primitive for later usage\n      this._cesiumObjectsMap.set(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._staticPrimitiveDrawer.update(primitive, geometryProps, instanceProps, primitiveProps);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\n\n/**\n *\n * @deprecated use ac-ellipse-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an ellipse.\n *  __usage:__\n *  ```\n *  &lt;ac-static-ellipse-desc-desc\n *      geometryProps=\"{\n *          center: ellipse.geometry.center,\n *          semiMajorAxis: ellipse.geometry.semiMajorAxis,\n *          semiMinorAxis: ellipse.geometry.semiMinorAxis,\n *          height: ellipse.geometry.height,\n *          rotation: ellipse.geometry.rotation\n *      }\"\n *      instanceProps=\"{\n *          attributes: ellipse.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: ellipse.appearance //Optional\n *      }\"&gt;\n *  &lt;/ac-static-ellipse-desc-desc&gt;\n *  ```\n */\n@Component({\n  selector: 'ac-static-ellipse-desc',\n  template: ''\n})\nexport class AcStaticEllipseDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(ellipseDrawer: StaticEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n *\n *\n *  This is a dynamic(position is updatable) implementation of an ellipse.\n *\n *  __Usage :__\n *  ```\n *    &lt;ac-dynamic-ellipse-desc props=\"{\n *      center: data.position,\n *      semiMajorAxis:250000.0,\n *      semiMinorAxis:400000.0,\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    \">\n *    &lt;/ac-dynamic-ellipse-desc&gt;\n *  ```\n *  __param:__ {Cesium.Cartesian3} center\n *  __param:__ {number} semiMajorAxis\n *  __param:__ {number} semiMinorAxis\n *  __param:__ {number} rotation\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-ellipse-desc',\n  template: '',\n})\nexport class AcDynamicEllipseDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { DynamicPolylineDrawerService } from '../../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-polylinc-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an polyline.\n *  The ac-dynamic-polyline-desc element must be a child of ac-layer element.\n *  __Usage:__\n *  ```\n *    &lt;ac-dynamic-polyline-desc props=\"{width : polyline.width, //optional\n *                                      positions: polyline.positions,\n *                                      material: polyline.material //optional\n *                                      }\"\n *    &gt;\n *    &lt;/ac-dynamic-polyline-desc&gt;\n * ```\n */\n@Component({\n  selector: 'ac-dynamic-polyline-desc',\n  template: ''\n})\nexport class AcDynamicPolylineDescComponent extends BasicDesc {\n\n  constructor(dynamicPolylineDrawerService: DynamicPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(dynamicPolylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticPolygonDrawerService } from '../../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\n\n// tslint:enable\n/**\n * @deprecated use ac-ploygon-desc instead\n *\n *  This is a static (position, color, etc.. are not updated) implementation of a polygon.\n *  __Usage:__\n *  ```\n *    &lt;ac-static-polygon-desc\n *          geometryProps=\"{\n *                     polygonHierarchy: polygon.geometry.polygonHierarchy,\n *                     height: polygon.geometry.height,\n *                     granularity: polygon.geometry.granularity\n *                 }\"\n *          instanceProps=\"{\n *                     attributes: polygon.attributes\n *                 }\"\n *          primitiveProps=\"{\n *                     appearance: polygon.appearance\n *                 }\"\n *    &gt;&lt;/ac-static-polygon-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-polygon-desc',\n  template: '',\n})\nexport class AcStaticPolygonDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polygonDrawer: StaticPolygonDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polygonDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\nimport { StaticCircleDrawerService } from '../../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc\n *\n *  This is a static (position, color, etc.. are not updated) implementation of an circle.\n *  __usage:__\n *  ```\n *    &lt;ac-static-circle-desc\n *      geometryProps=\"{\n *          center: circle.geometry.center,\n *          radius: circle.geometry.radius,\n *      }\"\n *      instanceProps=\"{\n *          attributes: circle.attributes //Optional\n *      }\"\n *      primitiveProps=\"{\n *          appearance: circle.appearance //Optional\n *      }\"&gt;\n *    &lt;/ac-static-circle-desc&gt;\n *    ```\n */\n@Component({\n  selector: 'ac-static-circle',\n  template: ''\n})\nexport class AcStaticCircleDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(staticCircleDrawer: StaticCircleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(staticCircleDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../../services/basic-desc/basic-desc.service';\nimport { DynamicEllipseDrawerService } from '../../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\n\n/**\n * @deprecated use ac-circle-desc instead\n *\n *  This is a dynamic(position is updatable) implementation of an circle.\n __Usage :__\n *  ```\n *    &lt;ac-dynamic-circle-desc props=\"{\n *      center: data.position,\n *      radius: 5\n *      rotation : 0.785398,\n *      width:3, // Optional\n *      granularity:0.08 // Optional\n *      }\"&gt;\n *    &lt;/ac-dynamic-circle-desc&gt;\n *  ```\n *\n *  __param__: {Cesium.Cartesian3} center\n *   __param__: {number} rotation\n *   __param__: {number} radius in meters\n *   __param__: {number} [1] width\n *   __param__: {number} [0.003] granularity\n */\n@Component({\n  selector: 'ac-dynamic-circle-desc',\n  template: ''\n})\nexport class AcDynamicCircleDescComponent extends BasicDesc {\n  constructor(ellipseDrawer: DynamicEllipseDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(ellipseDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  protected _propsEvaluator(context: Object): any {\n    const cesiumProps = super._propsEvaluator(context);\n\n    cesiumProps.semiMajorAxis = cesiumProps.radius;\n    cesiumProps.semiMinorAxis = cesiumProps.radius;\n\n    return cesiumProps;\n  }\n}\n","// tslint:disable\nimport { Component } from '@angular/core';\nimport { StaticPolylineDrawerService } from '../../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\nimport { LayerService } from '../../../services/layer-service/layer-service.service';\nimport { CesiumProperties } from '../../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../../services/computation-cache/computation-cache.service';\nimport { BasicStaticPrimitiveDesc } from '../../../services/basic-primitive-desc/basic-static-primitive-desc.service';\n\n// tslint:enable\n\n/**\n * @deprecated use ac-ployline-desc instead\n *\n *  This is a static implementation of an polyline.\n *  __usage:__\n *  ```\n *    &ltac-static-polyline-desc\n *            geometryProps=\"{\n *            \twidth: poly.geometry.width,\n *            \tpositions: poly.geometry.positions\n *            }\"\n *            instanceProps=\"{\n *              attributes: {\n *                  Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromRandom())\n *              }\n *            }\"\n *            primitiveProps=\"{\n *              appearance: new Cesium.PolylineColorAppearance()\n *    }\"&gt&lt/ac-static-polyline-desc&gt\n *  ```\n */\n@Component({\n  selector: 'ac-static-polyline-desc',\n  template: ''\n})\nexport class AcStaticPolylineDescComponent extends BasicStaticPrimitiveDesc {\n  constructor(polylineDrawerService: StaticPolylineDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylineDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\n\n/**\n *  This is a model implementation.\n *  The ac-model element must be a child of ac-layer element.\n *  The properties of props are the same as the properties of Entity and ModelGraphics:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/ModelGraphics.html\n *\n *  __Usage:__\n *  ```\n *    <ac-model-desc props=\"{\n *       position : Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706),\n *       uri : '../../SampleData/models/CesiumGround/Cesium_Ground.gltf'\n *   }\n *    }\">\n *    </ac-model-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-model-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcModelDescComponent)}],\n})\nexport class AcModelDescComponent extends BasicDesc implements OnInit {\n\n  constructor(modelDrawer: ModelDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(modelDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CesiumService } from '../../services/cesium/cesium.service';\nimport { Checker } from '../../utils/checker';\n\n/**\n *  This component is used for adding a 3d tileset layer to the map (ac-map).\n *  options according to `Cesium3DTileset` definition.\n *  check out: https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n *\n *\n *  __Usage :__\n *  ```\n *    <ac-3d-tile-layer [options]=\"optionsObject\">\n *    </ac-3d-tile-layer>\n *  ```\n */\n@Component({\n  selector: 'ac-3d-tile-layer',\n  template: '',\n})\nexport class AcTileset3dComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/Cesium3DTileset.html\n   */\n  @Input()\n  options: { url?: string } = {};\n\n  /**\n   * index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\n   */\n  @Input()\n  index: Number;\n\n  /**\n   * show (optional) - Determines if the map layer is shown.\n   */\n  @Input()\n  show = true;\n\n  /**\n   * show (optional) - Sets 3Dtiles style.\n   */\n  @Input()\n  style: any;\n\n  public tilesetInstance: any = null;\n  private _3dtilesCollection: any;\n\n  constructor(private cesiumService: CesiumService) {\n  }\n\n  ngOnInit() {\n    if (!Checker.present(this.options.url)) {\n      throw new Error('Options must have a url');\n    }\n\n    this._3dtilesCollection = new Cesium.PrimitiveCollection();\n    this.cesiumService.getScene().primitives.add(this._3dtilesCollection);\n\n    if (this.show) {\n      this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n      if (this.style) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['show'] && !changes['show'].isFirstChange()) {\n      const showValue = changes['show'].currentValue;\n\n      if (showValue) {\n        if (this.tilesetInstance) {\n          this._3dtilesCollection.add(this.tilesetInstance, this.index);\n        } else {\n          this.tilesetInstance = this._3dtilesCollection.add(new Cesium.Cesium3DTileset(this.options), this.index);\n          if (this.style) {\n            this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n          }\n        }\n      } else if (this.tilesetInstance) {\n        this._3dtilesCollection.remove(this.tilesetInstance, false);\n      }\n    }\n    if (changes['style'] && !changes['style'].isFirstChange()) {\n      const styleValue = changes['style'].currentValue;\n      if (this.tilesetInstance) {\n        this.tilesetInstance.style = new Cesium.Cesium3DTileStyle(this.style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.tilesetInstance) {\n      this._3dtilesCollection.remove(this.tilesetInstance, false);\n    }\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/BoxGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-box-desc props=\"{\n *     show : point.show, //optional\n *     position : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-box-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-box-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBoxDescComponent)}],\n})\nexport class AcBoxDescComponent extends BasicDesc {\n\n  constructor(drawerService: BoxDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity (like `position`)\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CylinderGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-cylinder-desc props=\"{\n *     show : cylinder.show, //optional\n *     position : cylinder.position,\n *     material : cylinder.color  //optional\n *   }\">\n *   </ac-cylinder-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-cylinder-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCylinderDescComponent)}],\n})\nexport class AcCylinderDescComponent extends BasicDesc {\n\n  constructor(drawerService: CylinderDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/CorridorGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-corridor-desc props=\"{\n *     show : point.show, //optional\n *     positions : point.positions,\n *     material : point.color  //optional\n *   }\">\n *   </ac-corridor-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-corridor-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcCorridorDescComponent)}],\n})\nexport class AcCorridorDescComponent extends BasicDesc {\n\n  constructor(drawerService: CorridorDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-ellipsoid-desc props=\"{\n *     show : ellipsoid.show, //optional\n *     radii : ellipsoid.radii,\n *     material : ellipsoid.color  //optional\n *   }\">\n *   </ac-ellipsoid-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-ellipsoid-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent)}],\n})\nexport class AcEllipsoidDescComponent extends BasicDesc {\n\n  constructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/PolylineVolumeGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-polyline-volume-desc props=\"{\n *     show : line.show, //optional\n *     positions : line.positions,\n *     material : line.color  //optional\n *   }\">\n *   </ac-polyline-volume-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-polyline-volume-desc',\n  template: ''\n})\nexport class AcPolylineVolumeDescComponent extends BasicDesc {\n\n  constructor(drawerService: PolylineVolumeDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-box-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/WallGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-wall-desc props=\"{\n *     show : wall.show, //optional\n *     positions : wall.positions,\n *     material : wall.color  //optional\n *   }\">\n *   </ac-wall-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-wall-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcWallDescComponent)}],\n})\nexport class AcWallDescComponent extends BasicDesc {\n\n  constructor(drawerService: WallDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\n\n/**\n *  This is a point implementation.\n *  The ac-rectangle-desc element must be a child of ac-layer element.\n *  The properties of props are the same as the properties PointGraphics and the general properties\n *  of Entity\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\n *  + https://cesiumjs.org/Cesium/Build/Documentation/RectangleGraphics.html\n *\n *  __Usage:__\n *  ```\n *   <ac-rectangle-desc props=\"{\n *     show : rectangle.show, //optional\n *     coordinates : rectangle.positions,\n *     material : rectangle.color  //optional\n *   }\">\n *   </ac-rectangle-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-rectangle-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcRectangleDescComponent)}],\n})\nexport class AcRectangleDescComponent extends BasicDesc {\n\n  constructor(drawerService: RectangleDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(drawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\n\n/**\n *  This is a billboard primitive implementation.\n *  The element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Billboard.html\n *\n *  __Usage :__\n *  ```\n *    <ac-billboard-primitive-desc props=\"{\n *      image: track.image,\n *      position: track.position,\n *      scale: track.scale,\n *      color: track.color,\n *      name: track.name\n *    }\">\n *    </ac-billboard-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-billboard-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcBillboardPrimitiveDescComponent)}],\n})\nexport class AcBillboardPrimitiveDescComponent extends BasicDesc {\n\n  constructor(billboardPrimitiveDrawer: BillboardPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(billboardPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Label.html\n *\n *  __Usage :__\n *  ```\n *    <ac-label-primitive-desc props=\"{\n *      position: track.position,\n *      pixelOffset : [-15,20] | pixelOffset,\n *      text: track.name,\n *      font: '15px sans-serif'\n *    }\">\n *    </ac-label-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-label-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcLabelPrimitiveDescComponent)}],\n})\nexport class AcLabelPrimitiveDescComponent extends BasicDesc {\n\n  constructor(labelPrimitiveDrawer: LabelPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(labelPrimitiveDrawer, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline primitive implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *    <ac-polyline-primitive-desc props=\"{\n *      width : polyline.width,\n *      positions: polyline.positions,\n *      material: polyline.material\n *    }\">\n *    </ac-polyline-primitive-desc>\n * ```\n */\n@Component({\n  selector: 'ac-polyline-primitive-desc',\n  template: '',\n  providers: [{provide: BasicDesc, useExisting: forwardRef(() => AcPolylinePrimitiveDescComponent)}],\n})\nexport class AcPolylinePrimitiveDescComponent extends BasicDesc {\n\n  constructor(polylinePrimitiveDrawerService: PolylinePrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(polylinePrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { HtmlCollection } from '../collections';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HtmlPrimitive {\n\n  private _scene: any;\n  private _show: boolean;\n  private _position: Cartesian3;\n  private _lastPosition: Cartesian2;\n  private _pixelOffset: Cartesian2;\n  private _element: HTMLElement;\n  private _collection: HtmlCollection;\n  private _mapContainer;\n\n  constructor(options: any, collection: HtmlCollection = null) {\n    if (typeof options !== 'object') {\n      throw new Error('HtmlPrimitive ERROR: invalid html options!');\n    }\n\n    this.scene = options.scene;\n    this._mapContainer = options.mapContainer;\n    this.show = options.show || true;\n    this.position = options.position;\n    this.pixelOffset = options.pixelOffset;\n    this.element = options.element;\n    this.collection = collection;\n  }\n\n  set scene(scene: any) {\n    this._scene = scene;\n  }\n\n  set show(show: boolean) {\n    this._show = show;\n\n    if (Cesium.defined(this.element)) {\n      if (show) {\n        this._element.style.display = 'block';\n      } else {\n        this._element.style.display = 'none';\n      }\n    }\n  }\n\n  get show(): boolean {\n    return this._show;\n  }\n\n  set position(position: Cartesian3) {\n    this._position = position;\n  }\n\n  get position(): Cartesian3 {\n    return this._position;\n  }\n\n  set pixelOffset(pixelOffset: Cartesian2) {\n    this._pixelOffset = pixelOffset;\n  }\n\n  get pixelOffset(): Cartesian2 {\n    return this._pixelOffset;\n  }\n\n  set element(element: HTMLElement) {\n    this._element = element;\n\n    if (Cesium.defined(element)) {\n      this._mapContainer.appendChild(element);\n      this._element.style.position = 'absolute';\n      this._element.style.zIndex = Number.MAX_VALUE.toString();\n    }\n  }\n\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  set collection(collection: HtmlCollection) {\n    this._collection = collection;\n  }\n\n  get collection() {\n    return this._collection;\n  }\n\n  update() {\n    if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {\n      return;\n    }\n\n    let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);\n\n    if (!Cesium.defined(screenPosition)) {\n      screenPosition = new Cesium.Cartesian2((-1000), (-1000));\n    } else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {\n      screenPosition.y += this._pixelOffset.y;\n      screenPosition.x += this._pixelOffset.x;\n    }\n\n    if (this._lastPosition && this._lastPosition.equals(screenPosition)) {\n      return;\n    }\n\n    this._element.style.top = `${screenPosition.y}px`;\n    this._element.style.left = `${screenPosition.x}px`;\n    this._lastPosition = screenPosition;\n  }\n\n  remove() {\n    if (this._element) {\n      this._element.remove();\n    }\n  }\n}\n","import { HtmlPrimitive } from '../primitives';\n\nexport class HtmlCollection {\n  private _collection: HtmlPrimitive[] = [];\n\n  get length() {\n    return this._collection.length;\n  }\n\n  get(index: number) {\n    return this._collection[index];\n  }\n\n  add(options: any): HtmlPrimitive {\n    const html = new HtmlPrimitive(options, this);\n    this._collection.push(html);\n\n    return html;\n  }\n\n  remove(html: HtmlPrimitive): boolean {\n    const index = this._collection.indexOf(html);\n    if (index === (-1)) {\n      return false;\n    }\n\n    this._collection[index].remove();\n    this._collection.splice(index, 1);\n    return true;\n  }\n\n  update() {\n    for (let i = 0, len = this._collection.length; i < len; i++) {\n      this._collection[i].update();\n    }\n  }\n\n  removeAll() {\n    while (this._collection.length > 0) {\n      const html = this._collection.pop();\n      html.remove();\n    }\n  }\n\n  contains(html: HtmlPrimitive): boolean {\n    return Cesium.defined(html) && html.collection === this;\n  }\n}\n","import { HtmlPrimitive } from './primitives';\nimport { HtmlCollection } from './collections';\n\nexport class CesiumExtender {\n  static extend() {\n    Cesium.HtmlPrimitive = HtmlPrimitive;\n    Cesium.HtmlCollection = HtmlCollection;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AcHtmlManager {\n  private _entities: Map<any, any>;\n\n  constructor() {\n    this._entities = new Map<any, any>();\n  }\n\n  has(id: string): boolean {\n    return this._entities.has(id);\n  }\n\n  get(id: string): { entity: any, primitive: any } {\n    return this._entities.get(id);\n  }\n\n  addOrUpdate(id: any, info: { entity: any, primitive: any }) {\n    this._entities.set(id, info);\n  }\n\n  remove(id: string) {\n    this._entities.delete(id);\n  }\n\n  forEach(callback: any) {\n    this._entities.forEach(callback);\n  }\n}\n","import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\nexport class AcHtmlContext {\n  constructor(\n    public id: any,\n    public context: any\n  ) {\n  }\n}\n\n@Directive({\n  selector: '[acHtml]',\n})\nexport class AcHtmlDirective implements OnInit {\n\n  private _views = new Map<any, { viewRef: any, context: any }>();\n\n  constructor(\n    private _templateRef: TemplateRef<AcHtmlContext>,\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetector: ChangeDetectorRef,\n    private _layerService: LayerService,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  private _handleView(id: any, primitive: any, entity: any) {\n    if (!this._views.has(id) && primitive.show) {\n      const context = new AcHtmlContext(id, {$implicit: entity});\n      const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\n      this._views.set(id, {viewRef, context});\n      this._changeDetector.detectChanges();\n    } else if (this._views.has(id) && !primitive.show) {\n      this.remove(id, primitive);\n    } else if (this._views.has(id) && primitive.show) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  addOrUpdate(id: any, primitive: any) {\n    const context = this._layerService.context;\n    const entity = context[this._layerService.getEntityName()];\n\n    if (this._views.has(id)) {\n      this._views.get(id).context.context.$implicit = entity;\n    }\n\n    this._acHtmlManager.addOrUpdate(id, {entity, primitive});\n    this._handleView(id, primitive, entity);\n  }\n\n  remove(id: any, primitive: any) {\n    if (!this._views.has(id)) {\n      return;\n    }\n\n    const {viewRef} = this._views.get(id);\n    this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\n    this._views.delete(id);\n    this._acHtmlManager.remove(id);\n    primitive.element = null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\nimport { AcHtmlDirective } from '../../directives/ac-html/ac-html.directive';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n/**\n *  This is an html implementation.\n *  The ac-html element must be a child of ac-layer element.\n *  <br>\n *  [props] accepts position(Cartesian3) and show(boolean).\n *\n *  __Usage:__\n *  ```\n *  <ac-layer acFor=\"let html of htmls$\" [context]=\"this\">\n <ac-html-desc props=\"{position: html.position, show: html.show}\">\n <ng-template let-html>\n <div>\n <h1>This is ac-html {{html.name}}</h1>\n <button (click)=\"changeText(html, 'Test')\">change text</button>\n </div>\n </ng-template>\n </ac-html-desc>\n *  <ac-html [props]=\"{position: position, show: true}\">;\n *    <p>html element</p>\n *  </ac-html>\n *  ```\n */\n@Component({\n  selector: 'ac-html-desc',\n  providers: [AcHtmlManager],\n  template: `\n      <div *acHtml=\"let acHtmlEntityId = id; let acHtmlContext = context\">\n          <div [acHtmlContainer]=\"acHtmlEntityId\">\n              <ng-template [ngTemplateOutlet]=\"acHtmlTemplate\"\n                           [ngTemplateOutletContext]=\"acHtmlContext\"></ng-template>\n          </div>\n      </div>`\n})\nexport class AcHtmlDescComponent extends BasicDesc implements OnInit {\n\n  @ViewChild(AcHtmlDirective, {static: true}) acHtmlCreator: AcHtmlDirective;\n  @ContentChild(TemplateRef, {static: true}) acHtmlTemplate: TemplateRef<any>;\n\n  constructor(htmlDrawer: HtmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(htmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.acHtmlCreator) {\n      throw new Error(`AcHtml desc ERROR: ac html directive not found.`);\n    }\n\n    if (!this.acHtmlTemplate) {\n      throw new Error(`AcHtml desc ERROR: html template not found.`);\n    }\n  }\n\n  draw(context: any, id: any): any {\n    const cesiumProps = this._propsEvaluator(context);\n    if (!this._cesiumObjectsMap.has(id)) {\n      const primitive = this._drawer.add(cesiumProps);\n      this._cesiumObjectsMap.set(id, primitive);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    } else {\n      const primitive = this._cesiumObjectsMap.get(id);\n      this._drawer.update(primitive, cesiumProps);\n      this.acHtmlCreator.addOrUpdate(id, primitive);\n    }\n  }\n\n  remove(id: string): void {\n    const primitive = this._cesiumObjectsMap.get(id);\n    this._drawer.remove(primitive);\n    this._cesiumObjectsMap.delete(id);\n    this.acHtmlCreator.remove(id, primitive);\n  }\n\n  removeAll(): void {\n    this._cesiumObjectsMap.forEach(((primitive, id) => {\n      this.acHtmlCreator.remove(id, primitive);\n    }));\n    this._cesiumObjectsMap.clear();\n    this._drawer.removeAll();\n  }\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\n\n@Directive({\n  selector: '[acHtmlContainer]'\n})\nexport class AcHtmlContainerDirective implements OnInit {\n\n  private _id: any;\n\n  constructor(\n    private _element: ElementRef,\n    private _acHtmlManager: AcHtmlManager\n  ) {\n  }\n\n  @Input()\n  set acHtmlContainer(id: string) {\n    this._id = id;\n  }\n\n  ngOnInit() {\n    if (this._id === undefined) {\n      throw new Error(`AcHtml container ERROR: entity id not defined`);\n    }\n\n    const entity = this._acHtmlManager.get(this._id);\n    entity.primitive.element = this._element.nativeElement;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { Subscription } from 'rxjs';\nimport { BasicContextMenu } from '../../models/basic-context-menu';\n\n/**\n * This component is used to inject the component that is passed to the ContextMenuService when opening a context menu.\n * It shouldn't be used directly.\n *\n * usage:\n * ```typescript\n * // We want to open the context menu on mouse right click.\n * // Register to mouse right click with the MapEventsManager\n * this.mapEventsManager.register({ event: CesiumEvent.RIGHT_CLICK, pick: PickOptions.NO_PICK })\n *    .subscribe(event => {\n *       const position = this.coordinateConverter.screenToCartesian3(event.movement.endPosition, true);\n *       if (!position) {\n *         return;\n *       }\n *       // Open the context menu on the position that was clicked and pass some data to ContextMenuComponent.\n *       this.contextMenuService.open(\n *         ContextMenuComponent,\n *         position,\n *         { data: { items: ['New Track', 'Change Map', 'Context Menu', 'Do Something'] } }\n *       )\n *    });\n *\n * ```\n */\n\n@Component({\n  selector: 'ac-context-menu-wrapper',\n  template: `\n    <ac-html *ngIf=\"contextMenuService.showContextMenu\" [props]=\"{position: contextMenuService.position}\">\n      <div #contextMenuContainer></div>\n    </ac-html>\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcContextMenuWrapperComponent implements OnInit, OnDestroy {\n\n  private contextMenuChangeSubscription: Subscription;\n  private contextMenuOpenSubscription: Subscription;\n\n  @ViewChild('contextMenuContainer', {static: false, read: ViewContainerRef}) viewContainerRef: ViewContainerRef;\n\n  constructor(public contextMenuService: ContextMenuService,\n              private cd: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngOnInit() {\n    this.contextMenuChangeSubscription =\n      this.contextMenuService.contextMenuChangeNotifier.subscribe(() => this.cd.detectChanges());\n    this.contextMenuOpenSubscription =\n      this.contextMenuService.onOpen.subscribe(() => {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.contextMenuService.content as any);\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (componentRef.instance as BasicContextMenu).data = this.contextMenuService.options.data;\n        this.cd.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextMenuChangeSubscription) {\n      this.contextMenuChangeSubscription.unsubscribe();\n    }\n\n    if (this.contextMenuOpenSubscription) {\n      this.contextMenuOpenSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { AcNotification } from '../../models/ac-notification';\nimport { Subject, Subscription } from 'rxjs';\nimport { IDescription } from '../../models/description';\nimport * as _get from 'lodash.get';\nimport { AcLayerComponent } from '../ac-layer/ac-layer.component';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\n\n/**\n *  This is component represents an array under `ac-layer`.\n *  The element must be a child of ac-layer element.\n *  + acFor `{string}` - get the tracked array and entityName (see the example).\n *  + idGetter `{Function}` - a function that gets the id for a given element in the array -should be defined for maximum performance.\n *  + show `{boolean}` - show/hide array's entities.\n *\n *  __Usage :__\n *  ```\n *<ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [store]=\"true\">\n *  <ac-array-desc acFor=\"let arrayItem of track.array\" [idGetter]=\"trackArrayIdGetter\">\n *    <ac-array-desc acFor=\"let innerArrayItem of arrayItem.innerArray\" [idGetter]=\"trackArrayIdGetter\">\n *      <ac-point-desc props=\"{\n *        position: innerArrayItem.pos,\n *        pixelSize: 10,\n *        color: getTrackColor(track),\n *        outlineColor: Cesium.Color.BLUE,\n *        outlineWidth: 1\n *      }\">\n *      </ac-point-desc>\n *    </ac-array-desc>\n *  </ac-array-desc>\n *</ac-layer>\n *  ```\n */\n\n@Component({\n  selector: 'ac-array-desc',\n  template: `\n    <ac-layer #layer [acFor]=\"getAcForString()\"\n              [context]=\"layerService.context\"\n              [options]=\"layerService.options\"\n              [show]=\"layerService.show && show\"\n              [zIndex]=\"layerService.zIndex\">\n      <ng-content #content></ng-content>\n    </ac-layer>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcArrayDescComponent implements OnChanges, OnInit, AfterContentInit, OnDestroy, IDescription {\n\n  @Input() acFor: string;\n\n  @Input() idGetter: (item: any, index: number) => string;\n\n  @Input() show = true;\n  @ViewChild('layer', {static: true}) private layer: AcLayerComponent;\n  @ContentChildren(BasicDesc, {descendants: false}) private basicDescs: any;\n  @ContentChildren(AcArrayDescComponent, {descendants: false}) private arrayDescs: any;\n  private entitiesMap = new Map<string, string[]>();\n  private layerServiceSubscription: Subscription;\n  private id = 0;\n  private readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n  entityName: string;\n  arrayPath: string;\n  arrayObservable$ = new Subject<AcNotification>();\n\n  constructor(public layerService: LayerService, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['acFor'].firstChange) {\n      const acForString = changes['acFor'].currentValue;\n      if (!this.acForRgx.test(acForString)) {\n        throw new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${acForString}`);\n      }\n      const acForArr = changes['acFor'].currentValue.split(' ');\n      this.arrayPath = acForArr[3];\n      this.entityName = acForArr[1];\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.layer) {\n      this.layer.getLayerService().cache = false;\n    }\n\n    this.layerServiceSubscription = this.layerService.layerUpdates().subscribe(() => {\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.layerService.context['arrayObservable$'] = this.arrayObservable$;\n    this.layerService.registerDescription(this);\n    this.basicDescs._results.forEach((component: BasicDesc) => {\n      component.setLayerService(this.layer.getLayerService());\n    });\n    this.arrayDescs._results.splice(0, 1);\n    this.arrayDescs._results.forEach((component: AcArrayDescComponent) => {\n      this.layerService.unregisterDescription(component);\n      this.layer.getLayerService().registerDescription(component);\n      component.layerService = this.layer.getLayerService();\n      component.setLayerService(this.layer.getLayerService());\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.layerServiceSubscription) {\n      this.layerServiceSubscription.unsubscribe();\n    }\n  }\n\n  setLayerService(layerService: LayerService) {\n    this.layerService = layerService;\n  }\n\n  draw(context: any, id: string, contextEntity: any) {\n    const get = _get;\n    const entitiesArray: any[] = get(context, this.arrayPath);\n    if (!entitiesArray) {\n      return;\n    }\n    const previousEntitiesIdArray = this.entitiesMap.get(id);\n    const entitiesIdArray: any[] = [];\n    this.entitiesMap.set(id, entitiesIdArray);\n\n    entitiesArray.forEach((item, index) => {\n      this.layerService.context[this.entityName] = item;\n      const arrayItemId = this.generateCombinedId(id, item, index);\n      entitiesIdArray.push(arrayItemId);\n      this.layer.update(contextEntity, arrayItemId);\n    });\n\n    if (previousEntitiesIdArray) {\n      const entitiesToRemove = this.idGetter ?\n        previousEntitiesIdArray.filter((entityId) => entitiesIdArray.indexOf(entityId) < 0) :\n        previousEntitiesIdArray;\n      if (entitiesToRemove) {\n        entitiesToRemove.forEach((entityId) => this.layer.remove(entityId));\n      }\n    }\n  }\n\n  remove(id: string) {\n    const entitiesIdArray = this.entitiesMap.get(id);\n    if (entitiesIdArray) {\n      entitiesIdArray.forEach((entityId) => this.layer.remove(entityId));\n    }\n    this.entitiesMap.delete(id);\n  }\n\n  removeAll() {\n    this.layer.removeAll();\n    this.entitiesMap.clear();\n  }\n\n  getAcForString() {\n    return `let ${this.entityName + '___temp'} of arrayObservable$`;\n  }\n\n  private generateCombinedId(entityId: string, arrayItem: any, index: number): string {\n    let arrayItemId;\n    if (this.idGetter) {\n      arrayItemId = this.idGetter(arrayItem, index);\n    } else {\n      arrayItemId = (this.id++) % Number.MAX_SAFE_INTEGER;\n    }\n    return entityId + arrayItemId;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\n\n/**\n *  This is a label primitive implementation.\n *  The ac-label element must be a child of ac-layer element.\n *  The properties of props are:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Point.html\n *\n *  __Usage :__\n *  ```\n *    <ac-point-primitive-desc props=\"{\n *      position: track.position,\n *      color: Cesium.Color.RED\n *    }\">\n *    </ac-point-primitive-desc>\n *  ```\n */\n\n@Component({\n  selector: 'ac-point-primitive-desc',\n  template: '',\n})\nexport class AcPointPrimitiveDescComponent extends BasicDesc {\n\n  constructor(pointPrimitiveDrawerService: PointPrimitiveDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(pointPrimitiveDrawerService, layerService, computationCache, cesiumProperties);\n  }\n}\n","import { Component } from '@angular/core';\nimport { EntityOnMapComponent } from '../../services/entity-on-map/entity-on-map.component';\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\n\n/**\n *  This is a polyline implementation.\n *  The ac-label element must be a child of ac-map element.\n *  The properties of props are the same as the properties of Polyline Primitive:\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Polyline.html\n *\n *  __Usage:__\n *  ```\n *  <ac-polyline [props]=\"{\n *    position: position,\n *    text: 'labelText',\n *    font: '30px sans-serif'\n *    color: Cesium.Color.GREEN\n *  }\">;\n *  </ac-polyline>\n *  ```\n */\n\n@Component({\n  selector: 'ac-primitive-polyline',\n  template: '',\n})\nexport class AcPrimitivePolylineComponent extends EntityOnMapComponent {\n\n  constructor(polylineDrawer: PolylinePrimitiveDrawerService, mapLayers: MapLayersService) {\n    super(polylineDrawer, mapLayers);\n  }\n}\n","import { PixelOffsetPipe } from './pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './radians-to-degrees/radians-to-degrees.pipe';\n\n// For angular parse usage\nexport default [\n  {pipeName: 'pixelOffset', pipeInstance: new PixelOffsetPipe()},\n  {pipeName: 'radiansToDegrees', pipeInstance: new RadiansToDegreesPipe()},\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { CzmlDrawerService } from '../../services/drawers/czml-drawer/czml-drawer.service';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\n\n/**\n *  This is a czml implementation.\n *  The ac-czml-desc element must be a child of ac-layer element.\n *\n *  See CZML Guide for the structure of props.czmlPacket:\n *  + https://github.com/AnalyticalGraphicsInc/czml-writer/wiki/CZML-Structure\n *\n *  Attention: the first czmlPacket in the stream needs to be a document\n *  with an id and a name attribute. See this example\n *  + https://cesiumjs.org/Cesium/Apps/Sandcastle/index.html?src=CZML%20Point%20-%20Time%20Dynamic.html&label=CZML\n *\n *  To see a working example, use the demo app and\n *  + uncomment <czml-layer></czml-layer> in demo-map.component.html\n *  + set the properties 'timeline', 'animation' and 'shouldAnimate' true in viewerOptions of demo-map.component.ts\n *\n *\n *  __Usage:__\n *  ```\n *    <ac-czml-desc props=\"{\n *      czmlPacket: czmlPacket\n *    }\">\n *    </ac-czml-desc>\n *  ```\n */\n@Component({\n  selector: 'ac-czml-desc',\n  template: '',\n})\nexport class AcCzmlDescComponent extends BasicDesc implements OnInit {\n  constructor(czmlDrawer: CzmlDrawerService, layerService: LayerService,\n              computationCache: ComputationCache, cesiumProperties: CesiumProperties) {\n    super(czmlDrawer, layerService, computationCache, cesiumProperties);\n  }\n\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcMapComponent } from './components/ac-map/ac-map.component';\nimport { AcLayerComponent } from './components/ac-layer/ac-layer.component';\nimport { AcBillboardComponent } from './components/ac-billboard/ac-billboard.component';\nimport { AcBillboardDescComponent } from './components/ac-billborad-desc/ac-billborad-desc.component';\nimport { AcEllipseDescComponent } from './components/ac-ellipse-desc/ac-ellipse-desc.component';\nimport { AcPolylineDescComponent } from './components/ac-polyline-desc/ac-polyline-desc.component';\nimport { Angular2ParseModule, PIPES_CONFIG } from 'angular2parse';\nimport { PixelOffsetPipe } from './pipes/pixel-offset/pixel-offset.pipe';\nimport { RadiansToDegreesPipe } from './pipes/radians-to-degrees/radians-to-degrees.pipe';\nimport { JsonMapper } from './services/json-mapper/json-mapper.service';\nimport { CesiumProperties } from './services/cesium-properties/cesium-properties.service';\nimport { AcLabelDescComponent } from './components/ac-label-desc/ac-label-desc.component';\nimport { UtilsModule } from './utils/utils.module';\nimport { ViewerFactory } from './services/viewer-factory/viewer-factory.service';\nimport { GeoUtilsService } from './services/geo-utils/geo-utils.service';\nimport { AcCircleDescComponent } from './components/ac-circle-desc/ac-circle-desc.component';\nimport { AcArcDescComponent } from './components/ac-arc-desc/ac-arc-desc.component';\nimport { AcMapLayerProviderComponent } from './components/ac-map-layer-provider/ac-map-layer-provider.component';\nimport { AcPointDescComponent } from './components/ac-point-desc/ac-point-desc.component';\nimport { AcLabelComponent } from './components/ac-label/ac-label.component';\nimport { AcPolylineComponent } from './components/ac-polyline/ac-polyline.component';\nimport { AcEllipseComponent } from './components/ac-ellipse/ac-ellipse.component';\nimport { AcPointComponent } from './components/ac-point/ac-point.component';\nimport { AcHtmlComponent } from './components/ac-html/ac-html.component';\nimport { AcCircleComponent } from './components/ac-circle/ac-circle.component';\nimport { AcArcComponent } from './components/ac-arc/ac-arc.component';\nimport { AcPolygonDescComponent } from './components/ac-polygon-desc/ac-polygon-desc.component';\nimport { AcDefaultPlonterComponent } from './components/ac-default-plonter/ac-default-plonter.component';\nimport { AcPolygonComponent } from './components/ac-polygon/ac-polygon.component';\nimport { MapsManagerService } from './services/maps-manager/maps-manager.service';\nimport { AcStaticEllipseDescComponent } from './components/static-dynamic/ac-static-ellipse-desc/ac-static-ellipse-desc.component';\nimport { AcDynamicEllipseDescComponent } from './components/static-dynamic/ac-dynamic-ellipse-desc/ac-dynamic-ellipse-desc.component';\nimport { AcDynamicPolylineDescComponent } from './components/static-dynamic/ac-dynamic-polyline-desc/ac-dynamic-polyline-desc.component';\nimport { AcStaticPolygonDescComponent } from './components/static-dynamic/ac-static-polygon-desc/ac-static-polygon-desc.component';\nimport { AcStaticCircleDescComponent } from './components/static-dynamic/ac-static-circle-desc/ac-static-circle-desc.component';\nimport { AcDynamicCircleDescComponent } from './components/static-dynamic/ac-dynamic-circle-desc/ac-dynamic-circle-desc.component';\nimport { AcStaticPolylineDescComponent } from './components/static-dynamic/ac-static-polyline-desc/ac-static-polyline-desc.component';\nimport { AcModelDescComponent } from './components/ac-model-desc/ac-model-desc.component';\nimport { AcTileset3dComponent } from './components/ac-3d-tileset/ac-tileset-3d.component';\nimport { AcBoxDescComponent } from './components/ac-box-desc/ac-box-desc.component';\nimport { AcCylinderDescComponent } from './components/ac-cylinder-desc/ac-cylinder-desc.component';\nimport { AcCorridorDescComponent } from './components/ac-corridor-desc/ac-corridor-desc.component';\nimport { AcEllipsoidDescComponent } from './components/ac-ellipsoid-desc/ac-ellipsoid-desc.component';\nimport { AcPolylineVolumeDescComponent } from './components/ac-polyline-volume-desc/ac-polyline-volume-desc.component';\nimport { AcWallDescComponent } from './components/ac-wall-desc/ac-wall-desc.component';\nimport { AcRectangleDescComponent } from './components/ac-rectangle-desc/ac-rectangle-desc.component';\nimport { AcBillboardPrimitiveDescComponent } from './components/ac-billboard-primitive-desc/ac-billboard-primitive-desc.component';\nimport { AcLabelPrimitiveDescComponent } from './components/ac-label-primitive-desc/ac-label-primitive-desc.component';\nimport { AcPolylinePrimitiveDescComponent } from './components/ac-polyline-primitive-desc/ac-polyline-primitive-desc.component';\nimport { ModuleConfiguration } from './models/module-options';\nimport { ANGULAR_CESIUM_CONFIG, ConfigurationService } from './cesium-enhancements/ConfigurationService';\nimport { CesiumExtender } from '../cesium-extender/extender';\nimport { AcHtmlDescComponent } from './components/ac-html-desc/ac-html-desc.component';\nimport { AcHtmlDirective } from './directives/ac-html/ac-html.directive';\nimport { AcHtmlContainerDirective } from './directives/ac-html-container/ac-html-container.directive';\nimport { AcContextMenuWrapperComponent } from './components/ac-context-menu-wrapper/ac-context-menu-wrapper.component';\nimport { AcArrayDescComponent } from './components/ac-array-desc/ac-array-desc.component';\nimport { AcPointPrimitiveDescComponent } from './components/ac-point-primitive-desc/ac-point-primitive-desc.component';\nimport { AcPrimitivePolylineComponent } from './components/ac-primitive-polyline/ac-primitive-polyline.component';\nimport PARSE_PIPES_CONFIG_MAP from './pipes/pipe-config-map';\n\nimport { AcCzmlDescComponent } from './components/ac-czml-desc/ac-czml-desc.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Angular2ParseModule,\n    UtilsModule,\n  ],\n  declarations: [\n    AcMapComponent,\n    AcLayerComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    PixelOffsetPipe,\n    RadiansToDegreesPipe,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcHtmlDirective,\n    AcHtmlContainerDirective,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n  exports: [\n    AcMapComponent,\n    AcBillboardComponent,\n    AcBillboardDescComponent,\n    AcBillboardPrimitiveDescComponent,\n    AcLabelDescComponent,\n    AcLabelPrimitiveDescComponent,\n    AcEllipseDescComponent,\n    AcPolylineDescComponent,\n    AcPolylinePrimitiveDescComponent,\n    AcLayerComponent,\n    AcCircleDescComponent,\n    AcArcDescComponent,\n    AcMapLayerProviderComponent,\n    AcPointDescComponent,\n    AcLabelComponent,\n    AcPolylineComponent,\n    AcPrimitivePolylineComponent,\n    AcEllipseComponent,\n    AcPointComponent,\n    AcBillboardComponent,\n    AcHtmlComponent,\n    AcCircleComponent,\n    AcArcComponent,\n    AcPolygonDescComponent,\n    AcPolygonComponent,\n    AcDefaultPlonterComponent,\n    AcModelDescComponent,\n    AcTileset3dComponent,\n    AcBoxDescComponent,\n    AcCylinderDescComponent,\n    AcCorridorDescComponent,\n    AcEllipsoidDescComponent,\n    AcPolylineVolumeDescComponent,\n    AcWallDescComponent,\n    AcRectangleDescComponent,\n    AcContextMenuWrapperComponent,\n    AcPointPrimitiveDescComponent,\n    AcHtmlDescComponent,\n    AcArrayDescComponent,\n    AcCzmlDescComponent,\n\n    AcStaticEllipseDescComponent,\n    AcDynamicEllipseDescComponent,\n    AcDynamicPolylineDescComponent,\n    AcStaticPolylineDescComponent,\n    AcDynamicCircleDescComponent,\n    AcStaticCircleDescComponent,\n    AcStaticPolygonDescComponent,\n  ],\n})\nexport class AngularCesiumModule {\n  static forRoot(config?: ModuleConfiguration): ModuleWithProviders {\n    return {\n      ngModule: AngularCesiumModule,\n      providers: [\n        JsonMapper, CesiumProperties, GeoUtilsService, ViewerFactory, MapsManagerService, ConfigurationService,\n        {provide: ANGULAR_CESIUM_CONFIG, useValue: config},\n        {provide: PIPES_CONFIG, multi: true, useValue: config && config.customPipes || []},\n        {provide: PIPES_CONFIG, multi: true, useValue: PARSE_PIPES_CONFIG_MAP},\n      ],\n    };\n  }\n\n  constructor() {\n    CesiumExtender.extend();\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport class DisposableObservable<T> extends Observable<T> {\n  dispose: Function;\n}\n","/**\n * EventModifier options for registration on map-event-manager.\n */\nexport enum CesiumEventModifier {\n  ALT = Cesium.KeyboardEventModifier.ALT,\n  CTRL = Cesium.KeyboardEventModifier.CTRL,\n  SHIFT = Cesium.KeyboardEventModifier.SHIFT,\n}\n","import { filter, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AcEntity } from '../../models/ac-entity';\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\n\n\nexport interface SelectionOptions {\n  event?: CesiumEvent;\n  modifier?: CesiumEventModifier;\n  entityType?: any;\n}\n\n/**\n * Manages entity selection service for any given mouse event and modifier\n * the service will manage the list of selected items.\n * check out the example\n * you must provide the service yourself\n *\n *  __Usage :__\n * ```\n * // provide the service in some component\n * @Component({\n * //...\n *  providers: [SelectionManagerService]\n * }\n *\n * // Usage example:\n * // init selection\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\n * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\n * // Get selected\n * const selected = selectionManagerService.selected();\n *\n * // Or as observer\n * const selected$ = selectionManagerService.selected$();\n *\n * ```\n *\n */\n@Injectable()\nexport class SelectionManagerService {\n  selectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\n  selectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\n  private mapEventsManagerService: MapEventsManagerService;\n\n  constructor(private mapsManager: MapsManagerService) {\n  }\n\n  selectedEntities$(): Observable<AcEntity[]> {\n    return this.selectedEntitiesItems$.asObservable();\n  }\n\n  selectedEntities(): AcEntity[] {\n    return this.selectedEntitiesItems$.getValue();\n  }\n\n  selectedEntity$() {\n    return this.selectedEntitySubject$;\n  }\n\n  toggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\n    const current = this.selectedEntities();\n    if (current.indexOf(entity) === -1) {\n      this.addToSelected(entity, addSelectedIndicator);\n    } else {\n      this.removeSelected(entity, addSelectedIndicator);\n    }\n  }\n\n  private addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = true;\n    }\n\n    const current = this.selectedEntities();\n    this.selectedEntitySubject$.next(entity);\n    this.selectedEntitiesItems$.next([...current, entity]);\n  }\n\n  private removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\n    if (addSelectedIndicator) {\n      entity['selected'] = false;\n    }\n\n    const current = this.selectedEntities();\n    const entityIndex = current.indexOf(entity);\n    if (entityIndex !== -1) {\n      current.splice(entityIndex, 1);\n      this.selectedEntitiesItems$.next(current);\n      this.selectedEntitySubject$.next(entity);\n    }\n  }\n\n  initSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\n    const mapComponent = this.mapsManager.getMap(mapId);\n    if (!mapComponent) {\n      return;\n    }\n\n    this.mapEventsManagerService = mapComponent.getMapEventsManager();\n\n    if (!selectionOptions) {\n      Object.assign(selectionOptions, {event: CesiumEvent.LEFT_CLICK});\n    }\n\n    const eventSubscription = this.mapEventsManagerService.register({\n      event: selectionOptions.event,\n      pick: PickOptions.PICK_ONE,\n      modifier: selectionOptions.modifier,\n      entityType: selectionOptions.entityType,\n      priority: eventPriority,\n    });\n\n    eventSubscription.pipe(\n      map(result => result.entities),\n      filter(entities => entities && entities.length > 0))\n      .subscribe(entities => {\n        const entity = entities[0];\n        this.toggleSelection(entity, addSelectedIndicator);\n      });\n  }\n}\n","import { Cartesian2 } from '../angular-cesium/models/cartesian2';\nimport { Cartesian3 } from '../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../angular-cesium/services/geo-utils/geo-utils.service';\nimport * as h337 from 'heatmap.js/build/heatmap.js';\nimport { Injectable } from '@angular/core';\n\n// Consider moving to a different package.\n\nif (!h337) {\n  throw new Error('must install heatmap.js. please do npm -i heatmap.js ');\n}\n\n\nexport interface Rectangle {\n  west: number;\n  south: number;\n  east: number;\n  north: number;\n}\n\n\n/**\n *  x: lon\n *  y: lat\n *  value: point value\n */\nexport interface HeatPointDataPoint {\n  x: number;\n  y: number;\n  value: number;\n}\n\n/**\n *   min:  the minimum allowed value for the data values\n *  max:  the maximum allowed value for the data values\n *  heatPointsData: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value)\n */\nexport interface HeatmapDataSet {\n  min?: number;\n  max?: number;\n  heatPointsData: HeatPointDataPoint[];\n}\n\n/**\n * a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n */\nexport interface HeatMapOptions {\n  [propName: string]: any;\n\n  gradient?: any;\n  radius?: number;\n  opacity?: number;\n  maxOpacity?: number;\n  minOpacity?: number;\n  blur?: any;\n}\n\n/**\n * Create heatmap material (Cesium.ImageMaterialProperty with heatmap as the image)\n * works with http://www.patrick-wied.at/static/heatmapjs. must do npm -i heatmap.js\n * usage:\n * ```\n *\n const mCreator = new CesiumHeatMapMaterialCreator();\n const containingRect = CesiumHeatMapMaterialCreator.calcCircleContainingRect(this.circleCenter, this.circleRadius);\n const userHeatmapOptions = {\n\t\t\tradius : 2000,\n\t\t\tminOpacity : 0,\n\t\t\tmaxOpacity : 0.9,\n\t\t} as any;\n\n this.circleHeatMapMaterial = mCreator.create(containingRect, {\n\t\t\theatPointsData : [\n\t\t\t\t{\n\t\t\t\t\tx : -100.0,\n\t\t\t\t\ty : 24.0,\n\t\t\t\t\tvalue : 95\n\t\t\t\t}\n\t\t\t],\n\t\t\tmin : 0,\n\t\t\tmax : 100,\n\t\t}, userHeatmapOptions);\n * ```\n *\n * inspired by https://github.com/danwild/CesiumHeatmap\n */\n@Injectable()\nexport class CesiumHeatMapMaterialCreator {\n\n\n  private static containerCanvasCounter = 0;\n\n  heatmapOptionsDefaults = {\n    minCanvasSize: 700,           // minimum size (in pixels) for the heatmap canvas\n    maxCanvasSize: 2000,          // maximum size (in pixels) for the heatmap canvas\n    radiusFactor: 60,             // data point size factor used if no radius is given\n    // (the greater of height and width divided by this number yields the used radius)\n    spacingFactor: 1,           // extra space around the borders (point radius multiplied by this number yields the spacing)\n    maxOpacity: 0.8,              // the maximum opacity used if not given in the heatmap options object\n    minOpacity: 0.1,              // the minimum opacity used if not given in the heatmap options object\n    blur: 0.85,                   // the blur used if not given in the heatmap options object\n    gradient: {                   // the gradient used if not given in the heatmap options object\n      '.3': 'blue',\n      '.65': 'yellow',\n      '.8': 'orange',\n      '.95': 'red'\n    },\n  };\n\n  WMP = new Cesium.WebMercatorProjection();\n  _spacing: number;\n  width: number;\n  height: number;\n  _mbounds: any;\n  bounds: any;\n  _factor: number;\n  _rectangle: Rectangle;\n  heatmap: any;\n  _xoffset: any;\n  _yoffset: any;\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param radius - Meters\n   */\n  static calcCircleContainingRect(center: Cartesian3, radius: number) {\n    return CesiumHeatMapMaterialCreator.calcEllipseContainingRect(center, radius, radius);\n  }\n\n  /**\n   *\n   * @param center - Cartesian3\n   * @param semiMinorAxis - meters\n   * @param semiMajorAxis - meters\n   */\n  static calcEllipseContainingRect(center: Cartesian3, semiMajorAxis: number, semiMinorAxis: number) {\n    const top = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMinorAxis,\n      0,\n      true\n    );\n    const right = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI / 2,\n      true\n    );\n    const bottom = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI,\n      true\n    );\n    const left = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      center,\n      semiMajorAxis,\n      Math.PI * 1.5,\n      true\n    );\n\n    const ellipsePoints = [top, right, bottom, left];\n    return Cesium.Rectangle.fromCartesianArray(ellipsePoints);\n  }\n\n  /**\n   *\n   * @param points Cartesian3\n   */\n  static calculateContainingRectFromPoints(points: Cartesian3[]) {\n    return Cesium.Rectangle.fromCartesianArray(points);\n  }\n\n\n  /**  Set an array of heatmap locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in heatmap coordinates and values like {x, y, value}\n   */\n  setData(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      this.heatmap.setData({\n        min: min,\n        max: max,\n        data: data\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**  Set an array of WGS84 locations\n   *\n   *  min:  the minimum allowed value for the data values\n   *  max:  the maximum allowed value for the data values\n   *  data: an array of data points in WGS84 coordinates and values like { x:lon, y:lat, value }\n   */\n  private setWGS84Data(min: any, max: any, data: any) {\n    if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {\n      const convdata = [];\n\n      for (let i = 0; i < data.length; i++) {\n        const gp = data[i];\n\n        const hp = this.wgs84PointToHeatmapPoint(gp);\n        if (gp.value || gp.value === 0) {\n          hp.value = gp.value;\n        }\n\n        convdata.push(hp);\n      }\n\n      return this.setData(min, max, convdata);\n    }\n\n    return false;\n  }\n\n  /**  Convert a mercator location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x: lon, y:lat}\n   */\n  private mercatorPointToHeatmapPoint(p: Cartesian2) {\n    const pn: any = {};\n\n    pn.x = Math.round((p.x - this._xoffset) / this._factor + this._spacing);\n    pn.y = Math.round((p.y - this._yoffset) / this._factor + this._spacing);\n    pn.y = this.height - pn.y;\n\n    return pn;\n  }\n\n  /**  Convert a WGS84 location to the corresponding heatmap location\n   *\n   *  p: a WGS84 location like {x:lon, y:lat}\n   */\n  private wgs84PointToHeatmapPoint = function (p: Cartesian2) {\n    return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(p));\n  };\n\n\n  private createContainer(height: number, width: number) {\n    const id = 'heatmap' + CesiumHeatMapMaterialCreator.containerCanvasCounter++;\n    const container = document.createElement('div');\n    container.setAttribute('id', id);\n    container.setAttribute('style', 'width: ' + width + 'px; height: ' + height + 'px; margin: 0px; display: none;');\n    document.body.appendChild(container);\n    return {container, id};\n  }\n\n  /**  Convert a WGS84 location into a mercator location\n   *\n   *  p: the WGS84 location like {x: lon, y: lat}\n   */\n  private wgs84ToMercator(p: Cartesian2) {\n    const mp = this.WMP.project(Cesium.Cartographic.fromDegrees(p.x, p.y));\n    return {\n      x: mp.x,\n      y: mp.y\n    };\n  }\n\n  private rad2deg = function (r: number) {\n    const d = r / (Math.PI / 180.0);\n    return d;\n  };\n\n  /**  Convert a WGS84 bounding box into a mercator bounding box*\n   *  bb: the WGS84 bounding box like {north, east, south, west}\n   */\n  private wgs84ToMercatorBB(bb: any) {\n    // TODO validate rad or deg\n    const sw = this.WMP.project(Cesium.Cartographic.fromRadians(bb.west, bb.south));\n    const ne = this.WMP.project(Cesium.Cartographic.fromRadians(bb.east, bb.north));\n    return {\n      north: ne.y,\n      east: ne.x,\n      south: sw.y,\n      west: sw.x\n    };\n  }\n\n  /**  Convert a mercator bounding box into a WGS84 bounding box\n   *\n   *  bb: the mercator bounding box like {north, east, south, west}\n   */\n  private mercatorToWgs84BB(bb: any) {\n    const sw = this.WMP.unproject(new Cesium.Cartesian3(bb.west, bb.south));\n    const ne = this.WMP.unproject(new Cesium.Cartesian3(bb.east, bb.north));\n    return {\n      north: this.rad2deg(ne.latitude),\n      east: this.rad2deg(ne.longitude),\n      south: this.rad2deg(sw.latitude),\n      west: this.rad2deg(sw.longitude)\n    };\n  }\n\n  private setWidthAndHeight(mbb: any) {\n    this.width = ((mbb.east > 0 && mbb.west < 0) ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west));\n    this.height = ((mbb.north > 0 && mbb.south < 0) ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south));\n    this._factor = 1;\n\n    if (this.width > this.height && this.width > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.height / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.height > this.width && this.height > this.heatmapOptionsDefaults.maxCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n\n      if (this.width / this._factor < this.heatmapOptionsDefaults.minCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n      }\n    } else if (this.width < this.height && this.width < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.width / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.height / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.height / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    } else if (this.height < this.width && this.height < this.heatmapOptionsDefaults.minCanvasSize) {\n      this._factor = this.height / this.heatmapOptionsDefaults.minCanvasSize;\n\n      if (this.width / this._factor > this.heatmapOptionsDefaults.maxCanvasSize) {\n        this._factor = this.width / this.heatmapOptionsDefaults.maxCanvasSize;\n      }\n    }\n\n    this.width = this.width / this._factor;\n    this.height = this.height / this._factor;\n  }\n\n  /**\n   * containingBoundingRect: Cesium.Rectangle like {north, east, south, west}\n   * min:  the minimum allowed value for the data values\n   * max:  the maximum allowed value for the data values\n   * datapoint: {x,y,value}\n   * heatmapOptions: a heatmap.js options object (see http://www.patrick-wied.at/static/heatmapjs/docs.html#h337-create)\n   *\n   */\n  public create(containingBoundingRect: Rectangle, heatmapDataSet: HeatmapDataSet, heatmapOptions: HeatMapOptions) {\n    const userBB = containingBoundingRect;\n    const {heatPointsData, min = 0, max = 100} = heatmapDataSet;\n    const finalHeatmapOptions = Object.assign({}, this.heatmapOptionsDefaults, heatmapOptions);\n\n    this._mbounds = this.wgs84ToMercatorBB(userBB);\n    this.setWidthAndHeight(this._mbounds);\n\n    finalHeatmapOptions.radius = Math.round((heatmapOptions.radius) ?\n      heatmapOptions.radius : ((this.width > this.height) ?\n        this.width / this.heatmapOptionsDefaults.radiusFactor :\n        this.height / this.heatmapOptionsDefaults.radiusFactor));\n    this._spacing = finalHeatmapOptions.radius * this.heatmapOptionsDefaults.spacingFactor;\n    this._xoffset = this._mbounds.west;\n    this._yoffset = this._mbounds.south;\n\n    this.width = Math.round(this.width + this._spacing * 2);\n    this.height = Math.round(this.height + this._spacing * 2);\n\n    this._mbounds.west -= this._spacing * this._factor;\n    this._mbounds.east += this._spacing * this._factor;\n    this._mbounds.south -= this._spacing * this._factor;\n    this._mbounds.north += this._spacing * this._factor;\n\n    this.bounds = this.mercatorToWgs84BB(this._mbounds);\n    this._rectangle = Cesium.Rectangle.fromDegrees(this.bounds.west, this.bounds.south, this.bounds.east, this.bounds.north);\n\n    const {container, id} = this.createContainer(this.height, this.width);\n    Object.assign(finalHeatmapOptions, {container});\n\n    this.heatmap = h337.create(finalHeatmapOptions);\n\n\n    this.setWGS84Data(0, 100, heatPointsData);\n    const heatMapCanvas = this.heatmap._renderer.canvas;\n    const heatMapMaterial = new Cesium.ImageMaterialProperty({\n      image: heatMapCanvas,\n      transparent: true,\n    });\n    this.setClear(heatMapMaterial, id);\n\n    return heatMapMaterial;\n  }\n\n  private setClear(heatMapMaterial: any, id: string) {\n    heatMapMaterial.clear = () => {\n      const elem = document.getElementById(id);\n      return elem.parentNode.removeChild(elem);\n    };\n  }\n}\n\n","export enum EditModes {\n  CREATE,\n  EDIT,\n  CREATE_OR_EDIT\n}\n","export enum EditActions {\n  INIT,\n  MOUSE_MOVE,\n  ADD_POINT,\n  ADD_LAST_POINT,\n  CHANGE_TO_EDIT,\n  REMOVE_POINT,\n  DRAG_POINT,\n  DRAG_POINT_FINISH,\n  DRAG_SHAPE,\n  DRAG_SHAPE_FINISH,\n  DONE,\n  DISABLE,\n  ENABLE,\n  DISPOSE,\n  SET_EDIT_LABELS_RENDER_CALLBACK,\n  UPDATE_EDIT_LABELS,\n  SET_MANUALLY,\n  TRANSFORM,\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PointProps } from './polyline-edit-options';\n\nexport class EditPoint extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private position: Cartesian3;\n  private _virtualEditPoint: boolean;\n  private pointProps: PointProps;\n  private _show = true;\n\n  constructor(entityId: string, position: Cartesian3, pointProps?: PointProps, virtualPoint = false) {\n    super();\n    this.editedEntityId = entityId;\n    this.position = position;\n    this.id = this.generateId();\n    this.pointProps = {...pointProps};\n    this._virtualEditPoint = virtualPoint;\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  set show(value) {\n    this._show = value;\n  }\n\n  get props(): PointProps {\n    return this.pointProps;\n  }\n\n  set props(value: PointProps) {\n    this.pointProps = value;\n  }\n\n  isVirtualEditPoint(): boolean {\n    return this._virtualEditPoint;\n  }\n\n  setVirtualEditPoint(value: boolean) {\n    this._virtualEditPoint = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPosition(): Cartesian3 {\n    return this.position.clone();\n  }\n\n  getPositionCallbackProperty(): Cartesian3 {\n    return new Cesium.CallbackProperty(this.getPosition.bind(this), false);\n  }\n\n\n  setPosition(position: Cartesian3) {\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.position.z = position.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-point-' + EditPoint.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditPolyline extends AcEntity {\n  static counter = 0;\n  private editedEntityId: string;\n  private id: string;\n  private positions: Cartesian3[];\n  private _polylineProps: PolylineProps;\n\n  constructor(entityId: string, startPosition: Cartesian3, endPosition: Cartesian3, polylineProps?: PolylineProps) {\n    super();\n    this.editedEntityId = entityId;\n    this.id = this.generateId();\n    this.positions = [startPosition, endPosition];\n    this._polylineProps = {...polylineProps};\n  }\n\n  get props(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  getEditedEntityId(): string {\n    return this.editedEntityId;\n  }\n\n  getPositions(): any[] {\n    return this.positions.map(p => p.clone());\n  }\n\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  validatePositions(): boolean {\n    return this.positions[0] !== undefined && this.positions[1] !== undefined;\n  }\n\n  getStartPosition() {\n    return this.positions[0];\n  }\n\n  getEndPosition() {\n    return this.positions[1];\n  }\n\n  setStartPosition(position: Cartesian3) {\n    this.positions[0] = position;\n  }\n\n  setEndPosition(position: Cartesian3) {\n    this.positions[1] = position;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-polyline-' + EditPolyline.counter++;\n  }\n}\n","import { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { Cartesian2 } from '../../angular-cesium/models/cartesian2';\nimport mockLink from 'apollo-link/lib/test-utils/mockLink';\n\nexport interface LabelStyle {\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n}\n\nexport interface LabelProps {\n  text: string;\n  show?: boolean;\n  font?: string;\n  style?: any;\n  fillColor?: any;\n  outlineColor?: any;\n  backgroundColor?: any;\n  backgroundPadding?: any;\n  showBackground?: boolean;\n  scale?: number;\n  distanceDisplayCondition?: any;\n  heightReference?: any;\n  horizontalOrigin?: any;\n  eyeOffset?: Cartesian3;\n  position?: Cartesian3;\n  pixelOffset?: Cartesian2;\n  pixelOffsetScaleByDistance?: any;\n  outlineWidth?: any;\n  scaleByDistance?: any;\n  translucencyByDistance?: any;\n  verticalOrigin?: any;\n  disableDepthTestDistance?: number;\n}\n\nexport const defaultLabelProps: LabelProps = {\n  backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.7),\n  backgroundPadding: new Cesium.Cartesian2(25, 20),\n  distanceDisplayCondition: undefined,\n  fillColor: Cesium.Color.WHITE,\n  font: '30px sans-serif',\n  heightReference: Cesium.HeightReference.NONE,\n  horizontalOrigin: Cesium.HorizontalOrigin.LEFT,\n  outlineColor: Cesium.Color.BLACK,\n  outlineWidth: 1.0,\n  pixelOffset: Cesium.Cartesian2.ZERO,\n  pixelOffsetScaleByDistance: undefined,\n  scale: 1.0,\n  scaleByDistance: undefined,\n  show: true,\n  showBackground: false,\n  style: Cesium.LabelStyle.FILL,\n  text: '',\n  translucencyByDistance: undefined,\n  verticalOrigin: Cesium.VerticalOrigin.BASELINE,\n  disableDepthTestDistance: Number.POSITIVE_INFINITY,\n};\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { PolygonEditOptions, PolygonProps } from './polygon-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolygon extends AcEntity {\n  private positions: EditPoint[] = [];\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _polygonProps: PolygonProps;\n  private _defaultPointProps: PointProps;\n  private _defaultPolylineProps: PolylineProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private polygonsLayer: AcLayerComponent,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private polygonOptions: PolygonEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this.polygonProps = {...polygonOptions.polygonProps};\n    this.defaultPointProps = {...polygonOptions.pointProps};\n    this.defaultPolylineProps = {...polygonOptions.polylineProps};\n    if (positions && positions.length >= 3) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get defaultPolylineProps(): PolylineProps {\n    return this._defaultPolylineProps;\n  }\n\n  set defaultPolylineProps(value: PolylineProps) {\n    this._defaultPolylineProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  get polygonProps(): PolygonProps {\n    return this._polygonProps;\n  }\n\n  set polygonProps(value: PolygonProps) {\n    this._polygonProps = value;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n    this.doneCreation = true;\n  }\n\n  setPointsManually(points: { position: Cartesian3, pointProps: PointProps }[] | Cartesian3[], polygonProps?: PolygonProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polygon is created');\n    }\n\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this.defaultPointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polygonProps = polygonProps ? polygonProps : this.polygonProps;\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n    this.updatePolygonsLayer();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      const currentPoint = pos;\n      const nextIndex = (index + 1) % (currentPoints.length);\n      const nextPoint = currentPoints[nextIndex];\n      const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n      this.updatePointsLayer(false, midPoint);\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // virtual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(true, firstMidPoint, secMidPoint, point);\n    this.updatePolygonsLayer();\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(pos => !pos.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      const nextIndex = (index + 1) % (realPoints.length);\n      const nextPoint = realPoints[nextIndex];\n      const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.defaultPolylineProps);\n      this.polylines.push(polyline);\n      this.polylinesLayer.update(polyline, polyline.getId());\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n    this.updatePolygonsLayer();\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.polygonOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.polygonOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n      const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n      const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n      const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n      const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n      this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n    }\n    this.updatePolygonsLayer();\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  movePolygon(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n    this.positions.forEach(point => this.updatePointsLayer(true, point));\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n    this.updatePolygonsLayer();\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositionsHierarchy(): Cartesian3[] {\n    const positions = this.positions.filter(position => !position.isVirtualEditPoint()).map(position => position.getPosition().clone());\n    return new Cesium.PolygonHierarchy(positions);\n  }\n\n  getPositionsHierarchyCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositionsHierarchy.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePolygonsLayer() {\n    if (this.getPointsCount() >= 3) {\n      this.polygonsLayer.update(this, this.id);\n    }\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...points: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    points.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  dispose() {\n    this.polygonsLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class PolygonsManagerService {\n  polygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\n\n  createEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                        editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\n                        polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolygon = new EditablePolygon(\n      id,\n      editPolygonsLayer,\n      editPointsLayer,\n      editPolylinesLayer,\n      coordinateConverter,\n      polygonOptions,\n      positions);\n    this.polygons.set(id, editablePolygon\n    );\n  }\n\n  dispose(id: string) {\n    this.polygons.get(id).dispose();\n    this.polygons.delete(id);\n  }\n\n  get(id: string): EditablePolygon {\n    return this.polygons.get(id);\n  }\n\n  clear() {\n    this.polygons.forEach(polygon => polygon.dispose());\n    this.polygons.clear();\n  }\n}\n","export function generateKey(length = 12): string {\n  let id = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    id += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return id;\n}\n","import { debounceTime, publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { PolygonEditUpdate } from '../../../models/polygon-edit-update';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonsManagerService } from './polygons-manager.service';\nimport { PolygonEditorObservable } from '../../../models/polygon-editor-observable';\nimport { EditablePolygon } from '../../../models/editable-polygon';\nimport { PolygonEditOptions, PolygonProps } from '../../../models/polygon-edit-options';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_POLYGON_OPTIONS: PolygonEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.8),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polygonProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.WHITE,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n  },\n};\n\n/**\n * Service for creating editable polygons\n *\n * You must provide `PolygonsEditorService` yourself.\n * PolygonsEditorService works together with `<polygons-editor>` component. Therefor you need to create `<polygons-editor>`\n * for each `PolygonsEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolygonEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolygonEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolygonEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolygonEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polygon\n *  const editing$ = polygonsEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polygon from existing polygon positions\n *  const editing$ = this.polygonsEditorService.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolygonsEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolygonEditUpdate>();\n  private updatePublisher = publish<PolygonEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polygonsManager: PolygonsManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polygonsManager: PolygonsManagerService,\n       cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polygonsManager = polygonsManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolygonEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  screenToPosition(cartesian2, clampHeightTo3D: boolean) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n      const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n      if (latLon.height < 0) {// means nothing picked -> Validate it\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      }\n      return this.cesiumScene.clampToHeight(cartesian3PickPosition);\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polygonOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n\n      if (polygonOptions.maximumNumberOfPoints && allPositions.length + 1 === polygonOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          priority,\n          polygonOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        priority,\n        polygonOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           priority,\n                           polygonOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const updateValue = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(updateValue);\n    clientEditSubject.next({\n      ...updateValue,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolygon(id, positions, priority, clientEditSubject, polygonOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYGON_OPTIONS, priority = 100): PolygonEditorObservable {\n    if (positions.length < 3) {\n      throw new Error('Polygons editor error edit(): polygon should have at least 3 positions');\n    }\n    const id = generateKey();\n    const polygonOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolygonEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polygonOptions: polygonOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolygon(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polygonOptions\n    );\n  }\n\n  private editPolygon(id: string,\n                      positions: Cartesian3[],\n                      priority: number,\n                      editSubject: Subject<PolygonEditUpdate>,\n                      options: PolygonEditOptions,\n                      editObservable?: PolygonEditorObservable): PolygonEditorObservable {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditablePolygon,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false);\n          const startDragPosition = this.screenToPosition(startPosition, false);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 4) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolygonEditOptions) {\n    if (options.maximumNumberOfPoints && options.maximumNumberOfPoints < 3) {\n      console.warn('Warn: PolygonEditor invalid option.' +\n        ' maximumNumberOfPoints smaller then 3, maximumNumberOfPoints changed to 3');\n      options.maximumNumberOfPoints = 3;\n    }\n\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYGON_OPTIONS));\n    const polygonOptions: PolygonEditOptions = Object.assign(defaultClone, options);\n    polygonOptions.pointProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.pointProps, options.pointProps);\n    polygonOptions.polygonProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polygonProps, options.polygonProps);\n    polygonOptions.polylineProps = Object.assign({}, DEFAULT_POLYGON_OPTIONS.polylineProps, options.polylineProps);\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polygonOptions.pointProps.color.alpha === 1 || polygonOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polygonOptions.allowDrag = false;\n      polygonOptions.polylineProps.clampToGround = true;\n      polygonOptions.pointProps.heightReference =  polygonOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polygonOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polygonOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolygonEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n    observableToExtend.setManually = (points: {\n      position: Cartesian3, pointProps: PointProps\n    }[] | Cartesian3[], polygonProps?: PolygonProps) => {\n      const polygon = this.polygonsManager.get(id);\n      polygon.setPointsManually(points, polygonProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polygonsManager.get(id).labels;\n\n    return observableToExtend as PolygonEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polygon = this.polygonsManager.get(id);\n    return polygon.getRealPoints();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolygonEditUpdate } from '../../models/polygon-edit-update';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolygonsManagerService } from '../../services/entity-editors/polygons-editor/polygons-manager.service';\nimport { PolygonsEditorService } from '../../services/entity-editors/polygons-editor/polygons-editor.service';\nimport { LabelProps } from '../../models/label-props';\nimport { EditablePolygon } from '../../models/editable-polygon';\n\n@Component({\n  selector: 'polygons-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      >\n      </ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #editPolygonsLayer acFor=\"let polygon of editPolygons$\" [context]=\"this\">\n      <ac-polygon-desc\n        props=\"{\n          hierarchy: polygon.getPositionsHierarchyCallbackProperty(),\n          material: polygon.polygonProps.material,\n          fill: polygon.polygonProps.fill,\n          classificationType: polygon.polygonProps.classificationType,\n          zIndex: polygon.polygonProps.zIndex,\n        }\"\n      >\n      </ac-polygon-desc>\n      <ac-array-desc acFor=\"let label of polygon.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolygonsManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolygonsEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolygonEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public editPolygons$ = new Subject<AcNotification>();\n\n  @ViewChild('editPolygonsLayer', {static: false}) private editPolygonsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer', {static: false}) private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer', {static: false}) private editPolylinesLayer: AcLayerComponent;\n\n  constructor(\n    private polygonsEditor: PolygonsEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polygonsManager: PolygonsManagerService,\n    private cesiumService: CesiumService\n  ) {\n    this.polygonsEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.polygonsManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polygonsEditor.onUpdate().subscribe((update: PolygonEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polygon: EditablePolygon, update: PolygonEditUpdate, labels?: LabelProps[]) {\n    update.positions = polygon.getRealPositions();\n    update.points = polygon.getRealPoints();\n\n    if (labels) {\n      polygon.labels = labels;\n      this.editPolygonsLayer.update(polygon, polygon.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polygon.labels = this.editLabelsRenderFn(update, polygon.labels);\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  removeEditLabels(polygon: EditablePolygon) {\n    polygon.labels = [];\n    this.editPolygonsLayer.update(polygon, polygon.getId());\n  }\n\n  handleCreateUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (update.updatedPosition) {\n          polygon.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polygon = this.polygonsManager.get(update.id);\n        polygon.dispose();\n        this.removeEditLabels(polygon);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polygon, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polygon = this.polygonsManager.get(update.id);\n        this.renderEditLabels(polygon, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolygonEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polygonsManager.createEditablePolygon(\n          update.id,\n          this.editPolygonsLayer,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polygonOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polygon.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polygon, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.removePoint(update.updatedPoint);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = false;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.movePolygon(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon && polygon.enableEdit) {\n          polygon.endMovePolygon();\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polygon = this.polygonsManager.get(update.id);\n        if (polygon) {\n          polygon.enableEdit = true;\n          this.renderEditLabels(polygon, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polygonsManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { PolylineProps } from './polyline-edit-options';\n\nexport class EditArc extends AcEntity {\n  static counter = 0;\n  private id: string;\n  private editedEntityId: string;\n  private _center: Cartesian3;\n  private _radius: number;\n  private _delta: number;\n  private _angle: number;\n\n  constructor(entityId: string, center: Cartesian3, radius: number, delta: number, angle: number, private _arcProps: PolylineProps) {\n    super();\n    this.id = this.generateId();\n    this.editedEntityId = entityId;\n    this._center = center;\n    this._radius = radius;\n    this._delta = delta;\n    this._angle = angle;\n  }\n\n  get props() {\n    return this._arcProps;\n  }\n\n  set props(props: PolylineProps) {\n    this._arcProps = props;\n  }\n\n  get angle(): number {\n    return this._angle;\n  }\n\n  set angle(value: number) {\n    this._angle = value;\n  }\n\n  get delta(): number {\n    return this._delta;\n  }\n\n  set delta(value: number) {\n    this._delta = value;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    this._radius = value;\n  }\n\n  get center(): Cartesian3 {\n    return this._center;\n  }\n\n  set center(value: Cartesian3) {\n    this._center = value;\n  }\n\n  updateCenter(center: Cartesian3) {\n    this._center.x = center.x;\n    this._center.y = center.y;\n    this._center.z = center.z;\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  private generateId(): string {\n    return 'edit-arc-' + EditArc.counter++;\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EditArc } from './edit-arc';\nimport { CircleEditOptions } from './circle-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EditableCircle extends AcEntity {\n  private _center: EditPoint;\n  private _radiusPoint: EditPoint;\n  private _outlineArc: EditArc;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private lastDraggedToPosition: any;\n  private _circleProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private circlesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private arcsLayer: AcLayerComponent,\n    private options: CircleEditOptions,\n  ) {\n    super();\n    this._circleProps = {...options.circleProps};\n    this._pointProps = {...options.pointProps};\n    this._polylineProps = {...options.polylineProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center || !this._radiusPoint) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index !== labels.length - 1) {\n          label.position = this._center.getPosition();\n        } else {\n          label.position = this._radiusPoint.getPosition();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get circleProps(): EllipseProps {\n    return this._circleProps;\n  }\n\n  set circleProps(value: EllipseProps) {\n    this._circleProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get radiusPoint(): EditPoint {\n    return this._radiusPoint;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._radiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    radiusPoint: Cartesian3,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    circleProp = this.circleProps,\n  ) {\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    if (!this._radiusPoint) {\n      this._radiusPoint = new EditPoint(this.id, radiusPoint, radiusPointProp);\n    } else {\n      this._radiusPoint.setPosition(radiusPoint);\n    }\n\n    if (!this._outlineArc) {\n      this.createOutlineArc();\n    } else {\n      this._outlineArc.radius = this.getRadius();\n    }\n\n    this.circleProps = circleProp;\n    this.doneCreation = true;\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._radiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      if (!this._outlineArc) {\n        this.createOutlineArc();\n      }\n    }\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(position);\n    this.doneCreation = true;\n\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3) {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n\n    this._radiusPoint.setPosition(toPosition);\n    this._outlineArc.radius = this.getRadius();\n\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n  }\n\n  moveCircle(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const radius = this.getRadius();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.radiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), radius, Math.PI / 2, true));\n    this._outlineArc.radius = this.getRadius();\n    this._outlineArc.center = this._center.getPosition();\n    this.updateArcsLayer();\n    this.updatePointsLayer();\n    this.updateCirclesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMovePolygon() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  getRadius(): number {\n    if (!this._center || !this._radiusPoint) {\n      return 0;\n    }\n    return GeoUtilsService.distance(this._center.getPosition(), this._radiusPoint.getPosition());\n  }\n\n  getRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRadius.bind(this), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getCenter.bind(this), false);\n  }\n\n  getRadiusPoint(): Cartesian3 {\n    return this._radiusPoint ? this._radiusPoint.getPosition() : undefined;\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._radiusPoint) {\n      this.pointsLayer.remove(this._radiusPoint.getId());\n    }\n\n    if (this._outlineArc) {\n      this.arcsLayer.remove(this._outlineArc.getId());\n    }\n\n    this.circlesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateCirclesLayer() {\n    this.circlesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._radiusPoint) {\n      this.pointsLayer.update(this._radiusPoint, this._radiusPoint.getId());\n    }\n  }\n\n  private updateArcsLayer() {\n    if (!this._outlineArc) {\n      return;\n    }\n    this.arcsLayer.update(this._outlineArc, this._outlineArc.getId());\n  }\n\n  private createOutlineArc() {\n    if (!this._center || !this._radiusPoint) {\n      return;\n    }\n    this._outlineArc = new EditArc(this.id, this.getCenter(), this.getRadius(), Math.PI * 2, 0, this.polylineProps);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\n\n@Injectable()\nexport class CirclesManagerService {\n  private circles = new Map<string, EditableCircle>();\n\n  createEditableCircle(id: string,\n                       editCirclesLayer: AcLayerComponent,\n                       editPointsLayer: AcLayerComponent,\n                       editArcsLayer: AcLayerComponent,\n                       circleOptions: CircleEditOptions): EditableCircle {\n    const editableCircle = new EditableCircle(id, editCirclesLayer, editPointsLayer, editArcsLayer, circleOptions);\n    this.circles.set(id, editableCircle);\n    return editableCircle;\n  }\n\n  dispose(id: string) {\n    this.circles.get(id).dispose();\n    this.circles.delete(id);\n  }\n\n  get(id: string): EditableCircle {\n    return this.circles.get(id);\n  }\n\n  clear() {\n    this.circles.forEach(circle => circle.dispose());\n    this.circles.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { publish, tap } from 'rxjs/operators';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { GeoUtilsService } from '../../../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { CircleEditOptions } from '../../../models/circle-edit-options';\nimport { CircleEditUpdate } from '../../../models/circle-edit-update';\nimport { CircleEditorObservable } from '../../../models/circle-editor-observable';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditPoint } from '../../../models/edit-point';\nimport { EditableCircle } from '../../../models/editable-circle';\nimport { EllipseProps } from '../../../models/ellipse-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { generateKey } from '../../utils';\nimport { CirclesManagerService } from './circles-manager.service';\n\nexport const DEFAULT_CIRCLE_OPTIONS: CircleEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  circleProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: false,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE.withAlpha(0.8),\n  },\n};\n\n/**\n * Service for creating editable circles\n *\n * You must provide `CircleEditorService` yourself.\n * PolygonsEditorService works together with `<circle-editor>` component. Therefor you need to create `<circle-editor>`\n * for each `CircleEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `CircleEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `CircleEditorObservable`.\n * + To stop editing call `dsipose()` from the `CircleEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `CircleEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating circle\n *  const editing$ = circlesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit circle from existing center point and radius\n *  const editing$ = this.circlesEditorService.edit(center, radius);\n *\n * ```\n */\n@Injectable()\nexport class CirclesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<CircleEditUpdate>();\n  private updatePublisher = publish<CircleEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private circlesManager: CirclesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    circlesManager: CirclesManagerService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.circlesManager = circlesManager;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<CircleEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      circleOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        center = position;\n      } else {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n\n        const changeMode = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editCircle(id, priority, clientEditSubject, circleOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update = {\n          id,\n          center,\n          radiusPoint: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(center: Cartesian3, radius: number, options = DEFAULT_CIRCLE_OPTIONS, priority = 100): CircleEditorObservable {\n    const id = generateKey();\n    const circleOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<CircleEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const radiusPoint: Cartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n\n    const update = {\n      id,\n      center,\n      radiusPoint,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      circleOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      ...this.getCircleProperties(id),\n    });\n\n    return this.editCircle(id, priority, editSubject, circleOptions);\n  }\n\n  private editCircle(\n    id: string,\n    priority: number,\n    editSubject: Subject<CircleEditUpdate>,\n    options: CircleEditOptions,\n    editObservable?: CircleEditorObservable,\n  ): CircleEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.LEFT_CLICK_DRAG,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: CesiumEvent.LEFT_CLICK_DRAG,\n        entityType: EditableCircle,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update = {\n          id,\n          center: this.getCenterPosition(id),\n          radiusPoint: this.getRadiusPosition(id),\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          ...this.getCircleProperties(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            center: this.getCenterPosition(id),\n            radiusPoint: this.getRadiusPosition(id),\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            ...this.getCircleProperties(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): CircleEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        center: this.getCenterPosition(id),\n        radiusPoint: this.getRadiusPosition(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      radius: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      circleProp?: EllipseProps,\n    ) => {\n      const radiusPoint = GeoUtilsService.pointByLocationDistanceAndAzimuth(center, radius, Math.PI / 2, true);\n      const circle = this.circlesManager.get(id);\n      circle.setManually(center, radiusPoint, centerPointProp, radiusPointProp, circleProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.circlesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getRadius = (): number => this.getRadius(id);\n\n    return observableToExtend as CircleEditorObservable;\n  }\n\n  private setOptions(options: CircleEditOptions): CircleEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_CIRCLE_OPTIONS));\n    const circleOptions = Object.assign(defaultClone, options);\n    circleOptions.pointProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.pointProps, options.pointProps);\n    circleOptions.circleProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.circleProps, options.circleProps);\n    circleOptions.polylineProps = Object.assign({}, DEFAULT_CIRCLE_OPTIONS.polylineProps, options.polylineProps);\n    return circleOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.circlesManager.get(id).center;\n  }\n\n  private getRadiusPosition(id: string): Cartesian3 {\n    return this.circlesManager.get(id).getRadiusPoint();\n  }\n\n  private getRadius(id: string): number {\n    return this.circlesManager.get(id).getRadius();\n  }\n\n  private getCircleProperties(id: string) {\n    const circle = this.circlesManager.get(id);\n    return {\n      center: circle.getCenter(),\n      radiusPoint: circle.getRadiusPoint(),\n      radius: circle.getRadius(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { CirclesManagerService } from '../../services/entity-editors/circles-editor/circles-manager.service';\nimport { CirclesEditorService } from '../../services/entity-editors/circles-editor/circles-editor.service';\nimport { CircleEditUpdate } from '../../models/circle-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableCircle } from '../../models/editable-circle';\n\n@Component({\n  selector: 'circles-editor',\n  template: /*html*/ `\n      <ac-layer #editArcsLayer acFor=\"let arc of editArcs$\" [context]=\"this\">\n          <ac-arc-desc\n                  props=\"{\n        angle: arc.angle,\n        delta: arc.delta,\n        center: arc.center,\n        radius: arc.radius,\n        quality: 30,\n        color: arc.props.material()\n    }\"\n          >\n          </ac-arc-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editCirclesLayer acFor=\"let circle of editCircles$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                  position: circle.getCenterCallbackProperty(),\n                  semiMajorAxis: circle.getRadiusCallbackProperty(),\n                  semiMinorAxis: circle.getRadiusCallbackProperty(),\n                  material: circle.circleProps.material,\n                  outline: circle.circleProps.outline,\n                  height: 0\n                  outlineWidth: circle.circleProps.outlineWidth,\n                  outlineColor: circle.circleProps.outlineColor,\n                  fill: circle.circleProps.fill,\n                  classificationType: circle.circleProps.classificationType,\n                  zIndex: circle.circleProps.zIndex,\n                  shadows: circle.circleProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of circle.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, CirclesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CirclesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: CircleEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editCircles$ = new Subject<AcNotification>();\n  public editArcs$ = new Subject<AcNotification>();\n\n  @ViewChild('editCirclesLayer', {static: false}) private editCirclesLayer: AcLayerComponent;\n  @ViewChild('editArcsLayer', {static: false}) private editArcsLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer', {static: false}) private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private circlesEditor: CirclesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private circlesManager: CirclesManagerService,\n  ) {\n    this.circlesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.circlesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.circlesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(circle: EditableCircle, update: CircleEditUpdate, labels?: LabelProps[]) {\n    update.center = circle.getCenter();\n    update.radiusPoint = circle.getRadiusPoint();\n    update.radius = circle.getRadius();\n\n    if (labels) {\n      circle.labels = labels;\n      this.editCirclesLayer.update(circle, circle.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    circle.labels = this.editLabelsRenderFn(update, circle.labels);\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  removeEditLabels(circle: EditableCircle) {\n    circle.labels = [];\n    this.editCirclesLayer.update(circle, circle.getId());\n  }\n\n  handleCreateUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.movePoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.center) {\n          circle.addPoint(update.center);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (update.radiusPoint) {\n          circle.addLastPoint(update.radiusPoint);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const circle = this.circlesManager.get(update.id);\n        this.removeEditLabels(circle);\n        this.circlesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const circle = this.circlesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(circle, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const circle = this.circlesManager.get(update.id);\n        this.renderEditLabels(circle, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: CircleEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const circle = this.circlesManager.createEditableCircle(\n          update.id,\n          this.editCirclesLayer,\n          this.editPointsLayer,\n          this.editArcsLayer,\n          update.circleOptions,\n        );\n        circle.setManually(update.center, update.radiusPoint);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.movePoint(update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.moveCircle(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle && circle.enableEdit) {\n          circle.endMovePolygon();\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = false;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const circle = this.circlesManager.get(update.id);\n        if (circle) {\n          circle.enableEdit = true;\n          this.renderEditLabels(circle, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.circlesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { EllipseEditOptions, EllipseProps } from './ellipse-edit-options';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { defaultLabelProps, LabelProps } from './label-props';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\nexport class EditableEllipse extends AcEntity {\n  private _center: EditPoint;\n  private _majorRadiusPoint: EditPoint;\n  private _majorRadius: number;\n  private _minorRadius: number;\n  private _rotation = 0;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _minorRadiusPoints: EditPoint[] = [];\n  private lastDraggedToPosition: any;\n  private _ellipseProps: EllipseProps;\n  private _pointProps: PointProps;\n  private _polylineProps: PolylineProps;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private ellipsesLayer: AcLayerComponent,\n    private pointsLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    private options: EllipseEditOptions,\n  ) {\n    super();\n    this._ellipseProps = {...options.ellipseProps};\n    this._pointProps = {...options.pointProps};\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels || !this._center) {\n      return;\n    }\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        if (index === 0) {\n          label.position = this._center.getPosition();\n        } else if (index === 1) {\n          label.position = this._majorRadiusPoint\n            ? Cesium.Cartesian3.midpoint(this.getCenter(), this._majorRadiusPoint.getPosition(), new Cesium.Cartesian3())\n            : new Cesium.Cartesian3();\n        } else if (index === 2) {\n          label.position =\n            this._minorRadiusPoints.length > 0 && this._minorRadius\n              ? Cesium.Cartesian3.midpoint(this.getCenter(), this.getMinorRadiusPointPosition(), new Cesium.Cartesian3())\n              : new Cesium.Cartesian3();\n        }\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get polylineProps(): PolylineProps {\n    return this._polylineProps;\n  }\n\n  set polylineProps(value: PolylineProps) {\n    this._polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get ellipseProps(): EllipseProps {\n    return this._ellipseProps;\n  }\n\n  set ellipseProps(value: EllipseProps) {\n    this._ellipseProps = value;\n  }\n\n  get center(): EditPoint {\n    return this._center;\n  }\n\n  get majorRadiusPoint(): EditPoint {\n    return this._majorRadiusPoint;\n  }\n\n  getMajorRadiusPointPosition() {\n    if (!this._majorRadiusPoint) {\n      return undefined;\n    }\n\n    return this._majorRadiusPoint.getPosition();\n  }\n\n  getMinorRadiusPointPosition(): Cartesian3 {\n    if (this._minorRadiusPoints.length < 1) {\n      return undefined;\n    }\n\n    return this._minorRadiusPoints[0].getPosition();\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this._center.show = value;\n    this._majorRadiusPoint.show = value;\n    this.updatePointsLayer();\n  }\n\n  setManually(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    centerPointProp = this.pointProps,\n    radiusPointProp = this.pointProps,\n    ellipseProp = this.ellipseProps,\n  ) {\n    if (majorRadius < minorRadius) {\n      throw new Error('Major radius muse be equal or greater than minor radius');\n    }\n    this._rotation = rotation;\n    this._majorRadius = majorRadius;\n    if (!this._center) {\n      this._center = new EditPoint(this.id, center, centerPointProp);\n    } else {\n      this._center.setPosition(center);\n    }\n\n    const majorRadiusPosition = GeoUtilsService.pointByLocationDistanceAndAzimuth(this.center.getPosition(), majorRadius, rotation);\n\n    if (!this._majorRadiusPoint) {\n      this._majorRadiusPoint = new EditPoint(this.id, majorRadiusPosition, radiusPointProp);\n    } else {\n      this._majorRadiusPoint.setPosition(majorRadiusPosition);\n    }\n\n    if (minorRadius) {\n      this._minorRadius = minorRadius;\n    }\n\n    this.ellipseProps = ellipseProp;\n    this.doneCreation = true;\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n\n    if (!this._center) {\n      this._center = new EditPoint(this.id, position, this.pointProps);\n      this._majorRadiusPoint = new EditPoint(this.id, position.clone(), this.pointProps);\n      this._majorRadius = 0;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  transformToEllipse() {\n    if (this._minorRadius) {\n      return;\n    }\n\n    this._minorRadius = this.getMajorRadius();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    if (this.doneCreation || !this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), position);\n    this._majorRadiusPoint.setPosition(position);\n    this._majorRadius = newRadius;\n    this.doneCreation = true;\n\n    if (!this.options.circleToEllipseTransformation) {\n      this._minorRadius = this._majorRadius;\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!this._center || !this._majorRadiusPoint) {\n      return;\n    }\n\n    const newRadius = GeoUtilsService.distance(this._center.getPosition(), toPosition);\n    if (this.majorRadiusPoint === editPoint) {\n      if (newRadius < this._minorRadius) {\n        this._majorRadius = this._minorRadius;\n        this._majorRadiusPoint.setPosition(\n          GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), this._minorRadius, this._rotation),\n        );\n      } else {\n        this.majorRadiusPoint.setPosition(toPosition);\n        this._majorRadius = newRadius;\n      }\n    } else {\n      if (newRadius > this._majorRadius) {\n        this._minorRadius = this._majorRadius;\n      } else {\n        this._minorRadius = newRadius;\n      }\n    }\n\n    this.updateRotation();\n    this.updateMinorRadiusEditPoints();\n    this.updatePointsLayer();\n    this.updateEllipsesLayer();\n  }\n\n  moveEllipse(dragStartPosition: Cartesian3, dragEndPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = dragStartPosition;\n    }\n\n    const majorRadius = this.getMajorRadius();\n    const rotation = this.getRotation();\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, dragEndPosition);\n    const newCenterPosition = GeoUtilsService.addDeltaToPosition(this.getCenter(), delta, true);\n    this._center.setPosition(newCenterPosition);\n    this.majorRadiusPoint.setPosition(GeoUtilsService.pointByLocationDistanceAndAzimuth(this.getCenter(), majorRadius, rotation));\n    this.updatePointsLayer();\n    this.updateMinorRadiusEditPoints();\n    this.updateEllipsesLayer();\n    this.lastDraggedToPosition = dragEndPosition;\n  }\n\n  endMoveEllipse() {\n    this.lastDraggedToPosition = undefined;\n  }\n\n  private updateMinorRadiusEditPoints() {\n    if (this._minorRadius === undefined) {\n      return;\n    }\n    if (this._minorRadiusPoints.length === 0) {\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n      this._minorRadiusPoints.push(new EditPoint(this.id, new Cesium.Cartesian3(), this.pointProps, true));\n    }\n\n    this._minorRadiusPoints[0].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() - Math.PI / 2),\n    );\n\n    this._minorRadiusPoints[1].setPosition(\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(this._center.getPosition(), this._minorRadius, this.getRotation() + Math.PI / 2),\n    );\n  }\n\n  getMajorRadius(): number {\n    return this._majorRadius || 0;\n  }\n\n  getMinorRadius() {\n    if (this._minorRadius === undefined) {\n      return this.getMajorRadius();\n    } else {\n      return this._minorRadius;\n    }\n  }\n\n  getRotation(): number {\n    return this._rotation || 0;\n  }\n\n  updateRotation(): number {\n    if (!this._majorRadiusPoint) {\n      return 0;\n    }\n\n    const azimuthInDegrees = this.coordinateConverter.bearingToCartesian(this.getCenter(), this._majorRadiusPoint.getPosition());\n    this._rotation = Cesium.Math.toRadians(azimuthInDegrees);\n    return this._rotation;\n  }\n\n  getRotationCallbackProperty() {\n    return new Cesium.CallbackProperty(() => Math.PI / 2 - this.getRotation(), false);\n  }\n\n  getMinorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMinorRadius(), false);\n  }\n\n  getMajorRadiusCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getMajorRadius(), false);\n  }\n\n  getCenter(): Cartesian3 {\n    return this._center ? this._center.getPosition() : undefined;\n  }\n\n  getCenterCallbackProperty() {\n    return new Cesium.CallbackProperty(() => this.getCenter(), false);\n  }\n\n  dispose() {\n    if (this._center) {\n      this.pointsLayer.remove(this._center.getId());\n    }\n\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.remove(this._majorRadiusPoint.getId());\n    }\n\n    if (this._minorRadiusPoints) {\n      this._minorRadiusPoints.forEach(point => this.pointsLayer.remove(point.getId()));\n    }\n\n    this.ellipsesLayer.remove(this.id);\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  private updateEllipsesLayer() {\n    this.ellipsesLayer.update(this, this.id);\n  }\n\n  private updatePointsLayer() {\n    if (this._center) {\n      this.pointsLayer.update(this._center, this._center.getId());\n    }\n    if (this._majorRadiusPoint) {\n      this.pointsLayer.update(this._majorRadiusPoint, this._majorRadiusPoint.getId());\n    }\n    if (this._minorRadiusPoints.length > 0) {\n      this.pointsLayer.update(this._minorRadiusPoints[0], this._minorRadiusPoints[0].getId());\n      this.pointsLayer.update(this._minorRadiusPoints[1], this._minorRadiusPoints[1].getId());\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { EllipseEditOptions } from '../../../models/ellipse-edit-options';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class EllipsesManagerService {\n  private ellipses = new Map<string, EditableEllipse>();\n\n  createEditableEllipse(id: string,\n                        editEllipsesLayer: AcLayerComponent,\n                        editPointsLayer: AcLayerComponent,\n                        coordinateConverter: CoordinateConverter,\n                        ellipseOptions: EllipseEditOptions): EditableEllipse {\n    const editableEllipse = new EditableEllipse(id, editEllipsesLayer, editPointsLayer, coordinateConverter, ellipseOptions);\n    this.ellipses.set(id, editableEllipse);\n    return editableEllipse;\n  }\n\n  dispose(id: string) {\n    this.ellipses.get(id).dispose();\n    this.ellipses.delete(id);\n  }\n\n  get(id: string): EditableEllipse {\n    return this.ellipses.get(id);\n  }\n\n  clear() {\n    this.ellipses.forEach(ellipse => ellipse.dispose());\n    this.ellipses.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from '../../../models/ellipse-edit-update';\nimport { EllipsesManagerService } from './ellipses-manager.service';\nimport { EllipseEditorObservable } from '../../../models/ellipse-editor-observable';\nimport { EllipseEditOptions, EllipseProps } from '../../../models/ellipse-edit-options';\nimport { EditableEllipse } from '../../../models/editable-ellipse';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { BasicEditUpdate } from '../../../models/basic-edit-update';\nimport { generateKey } from '../../utils';\nimport { CesiumEventModifier } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event-modifier.enum';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_ELLIPSE_OPTIONS: EllipseEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  circleToEllipseTransformEvent: CesiumEvent.LEFT_CLICK,\n  circleToEllipseTransformEventModifier: CesiumEventModifier.ALT,\n  allowDrag: true,\n  ellipseProps: {\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    fill: true,\n    outline: true,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    width: 1,\n    material: () => Cesium.Color.WHITE,\n  },\n  circleToEllipseTransformation: false,\n};\n\n/**\n * Service for creating editable ellipses\n *\n * You must provide `EllipsesEditorService` yourself.\n * EllipsesEditorService works together with `<ellipse-editor>` component. Therefor you need to create `<ellipse-editor>`\n * for each `EllipsesEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `EllipseEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `EllipseEditorObservable`.\n * + To stop editing call `dispose()` from the `EllipseEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over edited shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `EllipseEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating ellipse\n *  const editing$ = ellipsesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit ellipse from existing center point, two radiuses and rotation\n *  const editing$ = this.ellipsesEditorService.edit(center, majorRadius, rotation, minorRadius);\n *\n * ```\n */\n@Injectable()\nexport class EllipsesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<EllipseEditUpdate>();\n  private updatePublisher = publish<EllipseEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private ellipsesManager: EllipsesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene: any;\n\n  init(\n    mapEventsManager: MapEventsManagerService,\n    coordinateConverter: CoordinateConverter,\n    cameraService: CameraService,\n    ellipsesManager: EllipsesManagerService,\n    cesiumViewer: CesiumService,\n  ) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.ellipsesManager = ellipsesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<EllipseEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_ELLIPSE_OPTIONS, priority = 100): EllipseEditorObservable {\n    let center: any;\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const clientEditSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE,\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: ellipseOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      if (!center) {\n        const update: EllipseEditUpdate = {\n          id,\n          center: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n        center = position;\n      } else {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.ADD_LAST_POINT,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n\n        const changeMode: EllipseEditUpdate = {\n          id,\n          center,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next({\n          ...update,\n        });\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editEllipse(id, priority, clientEditSubject, ellipseOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      if (!center) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        const update: EllipseEditUpdate = {\n          id,\n          center,\n          updatedPosition: position,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.MOUSE_MOVE,\n        };\n        this.updateSubject.next(update);\n        clientEditSubject.next({\n          ...update,\n        });\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(\n    center: Cartesian3,\n    majorRadius: number,\n    rotation = Math.PI / 2,\n    minorRadius?: number,\n    options = DEFAULT_ELLIPSE_OPTIONS,\n    priority = 100,\n  ): EllipseEditorObservable {\n    const id = generateKey();\n    const ellipseOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<EllipseEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT,\n    });\n\n    const update: EllipseEditUpdate = {\n      id,\n      center,\n      majorRadius,\n      rotation,\n      minorRadius,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      ellipseOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n    });\n\n    return this.editEllipse(id, priority, editSubject, ellipseOptions);\n  }\n\n  private editEllipse(\n    id: string,\n    priority: number,\n    editSubject: Subject<EllipseEditUpdate>,\n    options: EllipseEditOptions,\n    editObservable?: EllipseEditorObservable,\n  ): EllipseEditorObservable {\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let addSecondRadiusRegistration;\n    if (options.circleToEllipseTransformation) {\n      addSecondRadiusRegistration = this.mapEventsManager.register({\n        event: options.circleToEllipseTransformEvent,\n        modifier: options.circleToEllipseTransformEventModifier,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableEllipse,\n        pick: PickOptions.PICK_FIRST,\n        priority: priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n\n    pointDragRegistration\n      .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n        const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!endDragPosition) {\n          return;\n        }\n\n        const point: EditPoint = entities[0];\n        const pointIsCenter = point === this.getCenterPoint(id);\n        let editAction;\n        if (drop) {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_POINT_FINISH;\n        } else {\n          editAction = pointIsCenter ? EditActions.DRAG_SHAPE : EditActions.DRAG_POINT;\n        }\n\n        if (!options.allowDrag && (editAction === EditActions.DRAG_SHAPE || editAction === EditActions.DRAG_SHAPE_FINISH)) {\n          this.cameraService.enableInputs(true);\n          return;\n        }\n\n        const update: EllipseEditUpdate = {\n          id,\n          updatedPoint: point,\n          startDragPosition,\n          endDragPosition,\n          editMode: EditModes.EDIT,\n          editAction,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n\n    if (addSecondRadiusRegistration) {\n      addSecondRadiusRegistration.subscribe(({movement: {endPosition, startPosition, drop}, entities}) => {\n        const update: EllipseEditUpdate = {\n          id,\n          editMode: EditModes.EDIT,\n          editAction: EditActions.TRANSFORM,\n          ...this.getEllipseProperties(id),\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n        });\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}}) => {\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          if (!endDragPosition || !startDragPosition) {\n            return;\n          }\n\n          const update: EllipseEditUpdate = {\n            id,\n            startDragPosition,\n            endDragPosition,\n            editMode: EditModes.EDIT,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n            ...this.getEllipseProperties(id),\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration, addSecondRadiusRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    if (addSecondRadiusRegistration) {\n      observables.push(addSecondRadiusRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return editObservable || this.createEditorObservable(editSubject, id);\n  }\n\n  private createEditorObservable(observableToExtend: any, id: string): EllipseEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n        ...this.getEllipseProperties(id),\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.setManually = (\n      center: Cartesian3,\n      majorRadius: number,\n      rotation?: number,\n      minorRadius?: number,\n      centerPointProp?: PointProps,\n      radiusPointProp?: PointProps,\n      ellipseProp?: EllipseProps,\n    ) => {\n      const ellipse = this.ellipsesManager.get(id);\n      ellipse.setManually(center, majorRadius, rotation, minorRadius, centerPointProp, radiusPointProp, ellipseProp);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: (update: BasicEditUpdate<any>, labels: LabelProps[]) => LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      } as EllipseEditUpdate);\n    };\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.ellipsesManager.get(id).labels;\n    observableToExtend.getCenter = (): Cartesian3 => this.getCenterPosition(id);\n    observableToExtend.getMajorRadius = (): number => this.getMajorRadius(id);\n    observableToExtend.getMinorRadius = (): number => this.getMinorRadius(id);\n\n    return observableToExtend as EllipseEditorObservable;\n  }\n\n  private setOptions(options: EllipseEditOptions): EllipseEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_ELLIPSE_OPTIONS));\n    const ellipseOptions = Object.assign(defaultClone, options);\n    ellipseOptions.pointProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.pointProps, options.pointProps);\n    ellipseOptions.ellipseProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.ellipseProps, options.ellipseProps);\n    ellipseOptions.polylineProps = Object.assign({}, DEFAULT_ELLIPSE_OPTIONS.polylineProps, options.polylineProps);\n    return ellipseOptions;\n  }\n\n  private getCenterPosition(id: string): Cartesian3 {\n    return this.ellipsesManager.get(id).getCenter();\n  }\n\n  private getCenterPoint(id: string): EditPoint {\n    return this.ellipsesManager.get(id).center;\n  }\n\n  private getMajorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMajorRadius();\n  }\n\n  private getMinorRadius(id: string): number {\n    return this.ellipsesManager.get(id).getMinorRadius();\n  }\n\n  private getEllipseProperties(id: string) {\n    const ellipse = this.ellipsesManager.get(id);\n    return {\n      center: ellipse.getCenter(),\n      rotation: ellipse.getRotation(),\n      minorRadius: ellipse.getMinorRadius(),\n      majorRadius: ellipse.getMajorRadius(),\n      minorRadiusPointPosition: ellipse.getMinorRadiusPointPosition(),\n      majorRadiusPointPosition: ellipse.getMajorRadiusPointPosition(),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { EllipsesManagerService } from '../../services/entity-editors/ellipses-editor/ellipses-manager.service';\nimport { EllipsesEditorService } from '../../services/entity-editors/ellipses-editor/ellipses-editor.service';\nimport { EllipseEditUpdate } from '../../models/ellipse-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableEllipse } from '../../models/editable-ellipse';\n\n@Component({\n  selector: 'ellipses-editor',\n  template: /*html*/ `\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc\n                  props=\"{\n                    position: point.getPositionCallbackProperty(),\n                    pixelSize: getPointSize(point),\n                    color: point.props.color,\n                    outlineColor: point.props.outlineColor,\n                    outlineWidth: point.props.outlineWidth,\n                    show: getPointShow(point),\n                    disableDepthTestDistance: point.props.disableDepthTestDistance,\n                    heightReference: point.props.heightReference,\n    }\"\n          >\n          </ac-point-desc>\n      </ac-layer>\n\n      <ac-layer #editEllipsesLayer acFor=\"let ellipse of editEllipses$\" [context]=\"this\" [zIndex]=\"0\">\n          <ac-ellipse-desc\n                  props=\"{\n                    position: ellipse.getCenterCallbackProperty(),\n                    semiMajorAxis: ellipse.getMajorRadiusCallbackProperty(),\n                    semiMinorAxis: ellipse.getMinorRadiusCallbackProperty(),\n                    rotation: ellipse.getRotationCallbackProperty(),\n                    material: ellipse.ellipseProps.material,\n                    outline: ellipse.ellipseProps.outline,\n                    outlineWidth: ellipse.ellipseProps.outlineWidth,\n                    outlineColor: ellipse.ellipseProps.outlineColor,\n                    height: 0,\n                    fill: ellipse.ellipseProps.fill,\n                    classificationType: ellipse.ellipseProps.classificationType,\n                    zIndex: ellipse.ellipseProps.zIndex,\n                    shadows: ellipse.ellipseProps.shadows,\n    }\"\n          >\n          </ac-ellipse-desc>\n\n          <ac-array-desc acFor=\"let label of ellipse.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc\n                      props=\"{\n                        position: label.position,\n                        text: label.text,\n                        backgroundColor: label.backgroundColor,\n                        backgroundPadding: label.backgroundPadding,\n                        distanceDisplayCondition: label.distanceDisplayCondition,\n                        eyeOffset: label.eyeOffset,\n                        fillColor: label.fillColor,\n                        font: label.font,\n                        heightReference: label.heightReference,\n                        horizontalOrigin: label.horizontalOrigin,\n                        outlineColor: label.outlineColor,\n                        outlineWidth: label.outlineWidth,\n                        pixelOffset: label.pixelOffset,\n                        pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n                        scale: label.scale,\n                        scaleByDistance: label.scaleByDistance,\n                        show: label.show,\n                        showBackground: label.showBackground,\n                        style: label.style,\n                        translucencyByDistance: label.translucencyByDistance,\n                        verticalOrigin: label.verticalOrigin,\n                        disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n              >\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, EllipsesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EllipsesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: EllipseEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editEllipses$ = new Subject<AcNotification>();\n\n  @ViewChild('editEllipsesLayer', {static: false}) private editEllipsesLayer: AcLayerComponent;\n  @ViewChild('editPointsLayer', {static: false}) private editPointsLayer: AcLayerComponent;\n\n  constructor(\n    private ellipsesEditor: EllipsesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private ellipsesManager: EllipsesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.ellipsesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, this.ellipsesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.ellipsesEditor.onUpdate().subscribe(update => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(ellipse: EditableEllipse, update: EllipseEditUpdate, labels?: LabelProps[]) {\n    update.center = ellipse.getCenter();\n    update.majorRadius = ellipse.getMajorRadius();\n    update.minorRadius = ellipse.getMinorRadius();\n    update.rotation = ellipse.getRotation();\n\n    if (labels) {\n      ellipse.labels = labels;\n      this.editEllipsesLayer.update(ellipse, ellipse.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    ellipse.labels = this.editLabelsRenderFn(update, ellipse.labels);\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  removeEditLabels(ellipse: EditableEllipse) {\n    ellipse.labels = [];\n    this.editEllipsesLayer.update(ellipse, ellipse.getId());\n  }\n\n  handleCreateUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.movePoint(update.updatedPosition, ellipse.majorRadiusPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.center) {\n          ellipse.addPoint(update.center);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (update.updatedPosition) {\n          ellipse.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.removeEditLabels(ellipse);\n        this.ellipsesManager.dispose(update.id);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        this.renderEditLabels(ellipse, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: EllipseEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        const ellipse = this.ellipsesManager.createEditableEllipse(\n          update.id,\n          this.editEllipsesLayer,\n          this.editPointsLayer,\n          this.coordinateConverter,\n          update.ellipseOptions,\n        );\n        ellipse.setManually(\n          update.center,\n          update.majorRadius,\n          update.rotation,\n          update.minorRadius,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.pointProps) || undefined,\n          (update.ellipseOptions && update.ellipseOptions.ellipseProps) || undefined,\n        );\n        this.renderEditLabels(ellipse, update);\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH:\n      case EditActions.DRAG_POINT: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.movePoint(update.endDragPosition, update.updatedPoint);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.moveEllipse(update.startDragPosition, update.endDragPosition);\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.endMoveEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.TRANSFORM: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse && ellipse.enableEdit) {\n          ellipse.transformToEllipse();\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = false;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const ellipse = this.ellipsesManager.get(update.id);\n        if (ellipse) {\n          ellipse.enableEdit = true;\n          this.renderEditLabels(ellipse, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.ellipsesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { EditPolyline } from './edit-polyline';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from './polyline-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditablePolyline extends AcEntity {\n  private positions: EditPoint[] = [];\n\n  private polylines: EditPolyline[] = [];\n  private movingPoint: EditPoint;\n  private doneCreation = false;\n  private _enableEdit = true;\n  private _pointProps: PointProps;\n  private polylineProps: PolylineProps;\n  private lastDraggedToPosition: any;\n  private _labels: LabelProps[] = [];\n\n  constructor(private id: string,\n              private pointsLayer: AcLayerComponent,\n              private polylinesLayer: AcLayerComponent,\n              private coordinateConverter: CoordinateConverter,\n              private editOptions: PolylineEditOptions,\n              positions?: Cartesian3[]) {\n    super();\n    this._pointProps = {...editOptions.pointProps};\n    this.props = {...editOptions.polylineProps};\n    if (positions && positions.length >= 2) {\n      this.createFromExisting(positions);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get props(): PolylineProps {\n    return this.polylineProps;\n  }\n\n  set props(value: PolylineProps) {\n    this.polylineProps = value;\n  }\n\n  get pointProps(): PointProps {\n    return this._pointProps;\n  }\n\n  set pointProps(value: PointProps) {\n    this._pointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(false, point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach((position) => {\n      this.addPointFromExisting(position);\n    });\n    this.addAllVirtualEditPoints();\n    this.doneCreation = true;\n  }\n\n  setManually(points: {\n    position: Cartesian3,\n    pointProp?: PointProps\n  }[] | Cartesian3[], polylineProps?: PolylineProps) {\n    if (!this.doneCreation) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n\n    const newPoints: EditPoint[] = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointOrCartesian: any = points[i];\n      let newPoint = null;\n      if (pointOrCartesian.pointProps) {\n        newPoint = new EditPoint(this.id, pointOrCartesian.position, pointOrCartesian.pointProps);\n      } else {\n        newPoint = new EditPoint(this.id, pointOrCartesian, this._pointProps);\n      }\n      newPoints.push(newPoint);\n    }\n    this.positions = newPoints;\n    this.polylineProps = polylineProps ? polylineProps : this.polylineProps;\n\n    this.updatePointsLayer(true, ...this.positions);\n    this.addAllVirtualEditPoints();\n  }\n\n  private addAllVirtualEditPoints() {\n    const currentPoints = [...this.positions];\n    currentPoints.forEach((pos, index) => {\n      if (index !== currentPoints.length - 1) {\n        const currentPoint = pos;\n        const nextIndex = (index + 1) % (currentPoints.length);\n        const nextPoint = currentPoints[nextIndex];\n\n        const midPoint = this.setMiddleVirtualPoint(currentPoint, nextPoint);\n\n        this.updatePointsLayer(false, midPoint);\n      }\n    });\n  }\n\n  private setMiddleVirtualPoint(firstP: EditPoint, secondP: EditPoint): EditPoint {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secondP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const midPoint = new EditPoint(this.id, midPointCartesian3, this._pointProps);\n    midPoint.setVirtualEditPoint(true);\n\n    const firstIndex = this.positions.indexOf(firstP);\n    this.positions.splice(firstIndex + 1, 0, midPoint);\n    return midPoint;\n  }\n\n  private updateMiddleVirtualPoint(virtualEditPoint: EditPoint, prevPoint: EditPoint, nextPoint: EditPoint) {\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(prevPoint.getPosition(), nextPoint.getPosition(), 0.5, new Cesium.Cartesian3());\n    virtualEditPoint.setPosition(midPointCartesian3);\n  }\n\n  changeVirtualPointToRealPoint(point: EditPoint) {\n    point.setVirtualEditPoint(false); // actual point becomes a real point\n    const pointsCount = this.positions.length;\n    const pointIndex = this.positions.indexOf(point);\n    const nextIndex = (pointIndex + 1) % (pointsCount);\n    const preIndex = ((pointIndex - 1) + pointsCount) % pointsCount;\n\n    const nextPoint = this.positions[nextIndex];\n    const prePoint = this.positions[preIndex];\n\n    const firstMidPoint = this.setMiddleVirtualPoint(prePoint, point);\n    const secMidPoint = this.setMiddleVirtualPoint(point, nextPoint);\n    this.updatePointsLayer(false, firstMidPoint, secMidPoint, point);\n\n  }\n\n  private renderPolylines() {\n    this.polylines.forEach(polyline => this.polylinesLayer.remove(polyline.getId()));\n    this.polylines = [];\n    const realPoints = this.positions.filter(point => !point.isVirtualEditPoint());\n    realPoints.forEach((point, index) => {\n      if (index !== realPoints.length - 1) {\n        const nextIndex = (index + 1);\n        const nextPoint = realPoints[nextIndex];\n        const polyline = new EditPolyline(this.id, point.getPosition(), nextPoint.getPosition(), this.polylineProps);\n        this.polylines.push(polyline);\n        this.polylinesLayer.update(polyline, polyline.getId());\n      }\n    });\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this._pointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(true, newPoint);\n  }\n\n\n  addPoint(position: Cartesian3) {\n    if (this.doneCreation) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this._pointProps);\n      this.positions.push(firstPoint);\n      this.updatePointsLayer(true, firstPoint);\n    }\n\n    this.movingPoint = new EditPoint(this.id, position.clone(), this._pointProps);\n    this.positions.push(this.movingPoint);\n\n    this.updatePointsLayer(true, this.movingPoint);\n  }\n\n  movePointFinish(editPoint: EditPoint) {\n    if (this.editOptions.clampHeightTo3D) {\n      editPoint.props.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n      this.updatePointsLayer(false, editPoint);\n    }\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    editPoint.setPosition(toPosition);\n    if (this.doneCreation) {\n      if (editPoint.props.disableDepthTestDistance && this.editOptions.clampHeightTo3D) {\n        // To avoid bug with pickPosition() on point with disableDepthTestDistance\n        editPoint.props.disableDepthTestDistance = undefined;\n        return; // ignore first move because the pickPosition() could be wrong\n      }\n\n      if (editPoint.isVirtualEditPoint()) {\n        this.changeVirtualPointToRealPoint(editPoint);\n      }\n      const pointsCount = this.positions.length;\n      const pointIndex = this.positions.indexOf(editPoint);\n\n      if (pointIndex < this.positions.length - 1) {\n        const nextVirtualPoint = this.positions[(pointIndex + 1) % (pointsCount)];\n        const nextRealPoint = this.positions[(pointIndex + 2) % (pointsCount)];\n        this.updateMiddleVirtualPoint(nextVirtualPoint, editPoint, nextRealPoint);\n      }\n      if (pointIndex > 0) {\n        const prevVirtualPoint = this.positions[((pointIndex - 1) + pointsCount) % pointsCount];\n        const prevRealPoint = this.positions[((pointIndex - 2) + pointsCount) % pointsCount];\n        this.updateMiddleVirtualPoint(prevVirtualPoint, editPoint, prevRealPoint);\n      }\n    }\n    this.updatePointsLayer(true, editPoint);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.doneCreation) {\n      return;\n    }\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.positions.forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.updatePointsLayer(true, ...this.positions);\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.updatePointsLayer(true, ...this.positions);\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions\n      .filter(p => p.isVirtualEditPoint())\n      .forEach(p => this.removePosition(p));\n    this.addAllVirtualEditPoints();\n\n    this.renderPolylines();\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.doneCreation = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n\n    this.addAllVirtualEditPoints();\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints()\n      .map(position => position.getPosition());\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions\n      .filter(position => !position.isVirtualEditPoint() && position !== this.movingPoint);\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  getPositionsCallbackProperty(): Cartesian3[] {\n    return new Cesium.CallbackProperty(this.getPositions.bind(this), false);\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex((p) => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(renderPolylines = true, ...point: EditPoint[]) {\n    if (renderPolylines) {\n      this.renderPolylines();\n    }\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  update() {\n    this.updatePointsLayer();\n  }\n\n  dispose() {\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    this.polylines.forEach(line => this.polylinesLayer.remove(line.getId()));\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { LabelProps } from './label-props';\n\nexport class EditorObservable<T> extends Observable<T> {\n  dispose: Function;\n  enable: Function;\n  disable: Function;\n  getLabels: () => LabelProps[];\n  getEditValue: () => T;\n  setLabelsRenderFn: (func: (update: T, labels: LabelProps[]) => LabelProps[]) => void;\n  updateLabels: (labels: LabelProps[]) => void;\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolylineEditUpdate } from './polyline-edit-update';\nimport { PointProps, PolylineProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium';\n\nexport class PolylineEditorObservable extends EditorObservable<PolylineEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[], polylineProps?: PolylineProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { PolygonProps } from './polygon-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\n\nexport class PolygonEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (points: { position: Cartesian3, pointProp?: PointProps }[] | Cartesian3[],\n                polygonProps?: PolygonProps) => void;\n  getCurrentPoints: () => EditPoint[];\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CircleEditUpdate } from './circle-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class CircleEditorObservable extends EditorObservable<CircleEditUpdate> {\n  setManually: (center: Cartesian3, radius: number, centerPointProp?: PointProps,\n                radiusPointProp?: PointProps, circleProp?: EllipseProps) => void;\n  getCenter: () => Cartesian3;\n  getRadius: () => number; // meters\n}\n","import { EditorObservable } from './editor-observable';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { EllipseEditUpdate } from './ellipse-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { EllipseProps } from './ellipse-edit-options';\n\nexport class EllipseEditorObservable extends EditorObservable<EllipseEditUpdate> {\n  setManually: (\n    center: Cartesian3,\n    majorRadius: number,\n    rotation?: number,\n    minorRadius?: number,\n    centerPointProp?: PointProps,\n    radiusPointProp?: PointProps,\n    ellipseProp?: EllipseProps,\n  ) => void;\n  getCenter: () => Cartesian3;\n  getMinorRadius: () => number; // meters\n  getMajorRadius: () => number; // meters\n}\n","import { EditPoint } from './edit-point';\nimport { EditorObservable } from './editor-observable';\nimport { PolygonEditUpdate } from './polygon-edit-update';\nimport { PointProps } from './polyline-edit-options';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\n\nexport class HippodromeEditorObservable extends EditorObservable<PolygonEditUpdate> {\n  setManually: (firstPosition: Cartesian3,\n                secondPosition: Cartesian3,\n                widthMeters?: number,\n                firstPointProp?: PointProps,\n                secondPointProp?: PointProps) => void;\n  getCurrentPoints: () => EditPoint[];\n  getCurrentWidth: () => number; // meters\n}\n","import { AcEntity } from '../../angular-cesium/models/ac-entity';\nimport { EditPoint } from './edit-point';\nimport { AcLayerComponent } from '../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { PointProps } from './polyline-edit-options';\nimport { HippodromeEditOptions, HippodromeProps } from './hippodrome-edit-options';\nimport { GeoUtilsService } from '../../angular-cesium/services/geo-utils/geo-utils.service';\nimport { defaultLabelProps, LabelProps } from './label-props';\n\nexport class EditableHippodrome extends AcEntity {\n  private positions: EditPoint[] = [];\n  private movingPoint: EditPoint;\n  private done = false;\n  private _enableEdit = true;\n  private _defaultPointProps: PointProps;\n  private _hippodromeProps: HippodromeProps;\n  private lastDraggedToPosition: Cartesian3;\n  private _labels: LabelProps[] = [];\n\n  constructor(\n    private id: string,\n    private pointsLayer: AcLayerComponent,\n    private hippodromeLayer: AcLayerComponent,\n    private coordinateConverter: CoordinateConverter,\n    editOptions: HippodromeEditOptions,\n    positions?: Cartesian3[],\n  ) {\n    super();\n    this.defaultPointProps = {...editOptions.pointProps};\n    this.hippodromeProps = {...editOptions.hippodromeProps};\n    if (positions && positions.length === 2) {\n      this.createFromExisting(positions);\n    } else if (positions) {\n      throw new Error('Hippodrome consist of 2 points but provided ' + positions.length);\n    }\n  }\n\n  get labels(): LabelProps[] {\n    return this._labels;\n  }\n\n  set labels(labels: LabelProps[]) {\n    if (!labels) {\n      return;\n    }\n    const positions = this.getRealPositions();\n    this._labels = labels.map((label, index) => {\n      if (!label.position) {\n        label.position = positions[index];\n      }\n\n      return Object.assign({}, defaultLabelProps, label);\n    });\n  }\n\n  get hippodromeProps(): HippodromeProps {\n    return this._hippodromeProps;\n  }\n\n  set hippodromeProps(value: HippodromeProps) {\n    this._hippodromeProps = value;\n  }\n\n  get defaultPointProps(): PointProps {\n    return this._defaultPointProps;\n  }\n\n  set defaultPointProps(value: PointProps) {\n    this._defaultPointProps = value;\n  }\n\n  get enableEdit() {\n    return this._enableEdit;\n  }\n\n  set enableEdit(value: boolean) {\n    this._enableEdit = value;\n    this.positions.forEach(point => {\n      point.show = value;\n      this.updatePointsLayer(point);\n    });\n  }\n\n  private createFromExisting(positions: Cartesian3[]) {\n    positions.forEach(position => {\n      this.addPointFromExisting(position);\n    });\n    this.createHeightEditPoints();\n    this.updateHippdromeLayer();\n    this.updatePointsLayer(...this.positions);\n    this.done = true;\n  }\n\n  setPointsManually(points: EditPoint[], widthMeters?: number) {\n    if (!this.done) {\n      throw new Error('Update manually only in edit mode, after polyline is created');\n    }\n    this.hippodromeProps.width = widthMeters ? widthMeters : this.hippodromeProps.width;\n    this.positions.forEach(p => this.pointsLayer.remove(p.getId()));\n    this.positions = points;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...points);\n    this.updateHippdromeLayer();\n  }\n\n  addPointFromExisting(position: Cartesian3) {\n    const newPoint = new EditPoint(this.id, position, this.defaultPointProps);\n    this.positions.push(newPoint);\n    this.updatePointsLayer(newPoint);\n  }\n\n  addPoint(position: Cartesian3) {\n    if (this.done) {\n      return;\n    }\n    const isFirstPoint = !this.positions.length;\n    if (isFirstPoint) {\n      const firstPoint = new EditPoint(this.id, position, this.defaultPointProps);\n      this.positions.push(firstPoint);\n      this.movingPoint = new EditPoint(this.id, position.clone(), this.defaultPointProps);\n      this.positions.push(this.movingPoint);\n      this.updatePointsLayer(firstPoint);\n    } else {\n      this.createHeightEditPoints();\n\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n      this.done = true;\n      this.movingPoint = null;\n    }\n  }\n\n  private createHeightEditPoints() {\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n\n    const upAzimuth = Cesium.Math.toRadians(bearingDeg) - Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, upAzimuth);\n    const downAzimuth = Cesium.Math.toRadians(bearingDeg) + Math.PI / 2;\n    this.createMiddleEditablePoint(midPointCartesian3, downAzimuth);\n  }\n\n  private createMiddleEditablePoint(midPointCartesian3: any, azimuth: number) {\n    const upEditCartesian3 = GeoUtilsService.pointByLocationDistanceAndAzimuth(\n      midPointCartesian3,\n      this.hippodromeProps.width / 2,\n      azimuth,\n      true,\n    );\n    const midPoint = new EditPoint(this.id, upEditCartesian3, this.defaultPointProps);\n    midPoint.setVirtualEditPoint(true);\n    this.positions.push(midPoint);\n  }\n\n  movePoint(toPosition: Cartesian3, editPoint: EditPoint) {\n    if (!editPoint.isVirtualEditPoint()) {\n      editPoint.setPosition(toPosition);\n      this.createHeightEditPoints();\n      this.updatePointsLayer(...this.positions);\n      this.updateHippdromeLayer();\n    } else {\n      this.changeWidthByNewPoint(toPosition);\n    }\n  }\n\n  private changeWidthByNewPoint(toPosition: Cartesian3) {\n    const firstP = this.getRealPoints()[0];\n    const secP = this.getRealPoints()[1];\n    const midPointCartesian3 = Cesium.Cartesian3.lerp(firstP.getPosition(), secP.getPosition(), 0.5, new Cesium.Cartesian3());\n\n    const bearingDeg = this.coordinateConverter.bearingToCartesian(midPointCartesian3, toPosition);\n    let normalizedBearingDeb = bearingDeg;\n    if (bearingDeg > 270) {\n      normalizedBearingDeb = bearingDeg - 270;\n    } else if (bearingDeg > 180) {\n      normalizedBearingDeb = bearingDeg - 180;\n    }\n    let bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(firstP.getPosition(), secP.getPosition());\n    if (bearingDegHippodromeDots > 180) {\n      bearingDegHippodromeDots = this.coordinateConverter.bearingToCartesian(secP.getPosition(), firstP.getPosition());\n    }\n    let fixedBearingDeg =\n      bearingDegHippodromeDots > normalizedBearingDeb\n        ? bearingDegHippodromeDots - normalizedBearingDeb\n        : normalizedBearingDeb - bearingDegHippodromeDots;\n\n    if (bearingDeg > 270) {\n      fixedBearingDeg = bearingDeg - bearingDegHippodromeDots;\n    }\n\n    const distanceMeters = Math.abs(GeoUtilsService.distance(midPointCartesian3, toPosition));\n    const radiusWidth = Math.sin(Cesium.Math.toRadians(fixedBearingDeg)) * distanceMeters;\n\n    this.hippodromeProps.width = Math.abs(radiusWidth) * 2;\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n  }\n\n  moveShape(startMovingPosition: Cartesian3, draggedToPosition: Cartesian3) {\n    if (!this.lastDraggedToPosition) {\n      this.lastDraggedToPosition = startMovingPosition;\n    }\n\n    const delta = GeoUtilsService.getPositionsDelta(this.lastDraggedToPosition, draggedToPosition);\n    this.getRealPoints().forEach(point => {\n      const newPos = GeoUtilsService.addDeltaToPosition(point.getPosition(), delta, true);\n      point.setPosition(newPos);\n    });\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n    this.updateHippdromeLayer();\n    this.lastDraggedToPosition = draggedToPosition;\n  }\n\n  endMoveShape() {\n    this.lastDraggedToPosition = undefined;\n    this.createHeightEditPoints();\n    this.positions.forEach(point => this.updatePointsLayer(point));\n    this.updateHippdromeLayer();\n  }\n\n  endMovePoint() {\n    this.createHeightEditPoints();\n    this.updatePointsLayer(...this.positions);\n  }\n\n  moveTempMovingPoint(toPosition: Cartesian3) {\n    if (this.movingPoint) {\n      this.movePoint(toPosition, this.movingPoint);\n    }\n  }\n\n  removePoint(pointToRemove: EditPoint) {\n    this.removePosition(pointToRemove);\n    this.positions.filter(p => p.isVirtualEditPoint()).forEach(p => this.removePosition(p));\n  }\n\n  addLastPoint(position: Cartesian3) {\n    this.done = true;\n    this.removePosition(this.movingPoint); // remove movingPoint\n    this.movingPoint = null;\n  }\n\n  getRealPositions(): Cartesian3[] {\n    return this.getRealPoints().map(position => position.getPosition());\n  }\n\n  getRealPositionsCallbackProperty() {\n    return new Cesium.CallbackProperty(this.getRealPositions.bind(this), false);\n  }\n\n  getRealPoints(): EditPoint[] {\n    return this.positions.filter(position => !position.isVirtualEditPoint());\n  }\n\n  getWidth(): number {\n    return this.hippodromeProps.width;\n  }\n\n  getPositions(): Cartesian3[] {\n    return this.positions.map(position => position.getPosition());\n  }\n\n  private removePosition(point: EditPoint) {\n    const index = this.positions.findIndex(p => p === point);\n    if (index < 0) {\n      return;\n    }\n    this.positions.splice(index, 1);\n    this.pointsLayer.remove(point.getId());\n  }\n\n  private updatePointsLayer(...point: EditPoint[]) {\n    point.forEach(p => this.pointsLayer.update(p, p.getId()));\n  }\n\n  private updateHippdromeLayer() {\n    this.hippodromeLayer.update(this, this.id);\n  }\n\n  dispose() {\n    this.hippodromeLayer.remove(this.id);\n\n    this.positions.forEach(editPoint => {\n      this.pointsLayer.remove(editPoint.getId());\n    });\n    if (this.movingPoint) {\n      this.pointsLayer.remove(this.movingPoint.getId());\n      this.movingPoint = undefined;\n    }\n    this.positions.length = 0;\n  }\n\n  getPointsCount(): number {\n    return this.positions.length;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolylinesManagerService } from './polylines-manager.service';\nimport { PointProps, PolylineEditOptions, PolylineProps } from '../../../models/polyline-edit-options';\nimport { PolylineEditUpdate } from '../../../models/polyline-edit-update';\nimport { PolylineEditorObservable } from '../../../models/polyline-editor-observable';\nimport { EditPolyline } from '../../../models';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\nimport { CesiumService } from '../../../../angular-cesium';\n\nexport const DEFAULT_POLYLINE_OPTIONS: PolylineEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  addLastPointEvent: CesiumEvent.LEFT_DOUBLE_CLICK,\n  removePointEvent: CesiumEvent.RIGHT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.9),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.5),\n    outlineWidth: 1,\n    pixelSize: 15,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n  polylineProps: {\n    material: () => Cesium.Color.BLACK,\n    width: 3,\n    clampToGround: false,\n    zIndex: 0,\n    classificationType: Cesium.ClassificationType.BOTH,\n  },\n  clampHeightTo3D: false,\n  clampHeightTo3DOptions: {\n    clampToTerrain: false,\n  },\n};\n\n/**\n * Service for creating editable polylines\n *\n *  * You must provide `PolylineEditorService` yourself.\n * PolygonsEditorService works together with `<polylines-editor>` component. Therefor you need to create `<polylines-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `PolylineEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `PolylineEditorObservable`.\n * + To stop editing call `dsipose()` from the `PolylineEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `PolylineEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n * usage:\n * ```typescript\n *  // Start creating polyline\n *  const editing$ = polylinesEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit polyline from existing polyline cartesian3 positions\n *  const editing$ = this.polylinesEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class PolylinesEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<PolylineEditUpdate>();\n  private updatePublisher = publish<PolylineEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private polylinesManager: PolylinesManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n  private cesiumScene;\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       polylinesManager: PolylinesManagerService,\n       cesiumViewer: CesiumService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.polylinesManager = polylinesManager;\n    this.updatePublisher.connect();\n\n    this.cesiumScene = cesiumViewer.getScene();\n  }\n\n  onUpdate(): Observable<PolylineEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  screenToPosition(cartesian2, clampHeightTo3D: boolean) {\n    const cartesian3 = this.coordinateConverter.screenToCartesian3(cartesian2);\n    // If cartesian3 is undefined then the point inst on the globe\n    if (clampHeightTo3D && cartesian3) {\n      const cartesian3PickPosition = this.cesiumScene.pickPosition(cartesian2);\n      const latLon = CoordinateConverter.cartesian3ToLatLon(cartesian3PickPosition);\n      if (latLon.height < 0) {// means nothing picked -> Validate it\n        const ray = this.cameraService.getCamera().getPickRay(cartesian2);\n        return  this.cesiumScene.globe.pick(ray, this.cesiumScene);\n      }\n      return this.cesiumScene.clampToHeight(cartesian3PickPosition);\n    }\n\n    return cartesian3;\n  }\n\n  create(options = DEFAULT_POLYLINE_OPTIONS, eventPriority = 100): PolylineEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addLastPointRegistration = this.mapEventsManager.register({\n      event: polylineOptions.addLastPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration, addLastPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n      if (!position) {\n        return;\n      }\n      const allPositions = this.getPositions(id);\n      if (allPositions.find((cartesian) => cartesian.equals(position))) {\n        return;\n      }\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n      if (polylineOptions.maximumNumberOfPoints && allPositions.length + 1 === polylineOptions.maximumNumberOfPoints) {\n        finishedCreate = this.switchToEditMode(\n          id,\n          position,\n          clientEditSubject,\n          positions,\n          eventPriority,\n          polylineOptions,\n          editorObservable,\n          finishedCreate);\n      }\n    });\n\n    addLastPointRegistration.subscribe(({ movement: { endPosition } }) => {\n      const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n      if (!position) {\n        return;\n      }\n      // position already added by addPointRegistration\n      finishedCreate = this.switchToEditMode(\n        id,\n        position,\n        clientEditSubject,\n        positions,\n        eventPriority,\n        polylineOptions,\n        editorObservable,\n        finishedCreate);\n    });\n\n    return editorObservable;\n  }\n\n  private switchToEditMode(id,\n                           position,\n                           clientEditSubject,\n                           positions: Cartesian3[],\n                           eventPriority,\n                           polylineOptions,\n                           editorObservable,\n                           finishedCreate: boolean) {\n    const update = {\n      id,\n      positions: this.getPositions(id),\n      editMode: EditModes.CREATE,\n      updatedPosition: position,\n      editAction: EditActions.ADD_LAST_POINT,\n    };\n    this.updateSubject.next(update);\n    clientEditSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n\n    const changeMode = {\n      id,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.CHANGE_TO_EDIT,\n    };\n    this.updateSubject.next(changeMode);\n    clientEditSubject.next(changeMode);\n    if (this.observablesMap.has(id)) {\n      this.observablesMap.get(id).forEach(registration => registration.dispose());\n    }\n    this.observablesMap.delete(id);\n    this.editPolyline(id, positions, eventPriority, clientEditSubject, polylineOptions, editorObservable);\n    finishedCreate = true;\n    return finishedCreate;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_POLYLINE_OPTIONS, priority = 100): PolylineEditorObservable {\n    if (positions.length < 2) {\n      throw new Error('Polylines editor error edit(): polyline should have at least 2 positions');\n    }\n    const id = generateKey();\n    const polylineOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<PolylineEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      polylineOptions: polylineOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n    });\n    return this.editPolyline(\n      id,\n      positions,\n      priority,\n      editSubject,\n      polylineOptions\n    );\n  }\n\n  private editPolyline(id: string,\n                       positions: Cartesian3[],\n                       priority: number,\n                       editSubject: Subject<PolylineEditUpdate>,\n                       options: PolylineEditOptions,\n                       editObservable?: PolylineEditorObservable) {\n\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    const pointRemoveRegistration = this.mapEventsManager.register({\n      event: options.removePointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditPolyline,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.editedEntityId,\n      });\n    }\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n        .subscribe(({ movement: { startPosition, endPosition, drop }, entities }) => {\n          const endDragPosition = this.screenToPosition(endPosition, false);\n          const startDragPosition = this.screenToPosition(startPosition, false);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n          });\n        });\n    }\n\n    pointDragRegistration.pipe(\n      tap(({ movement: { drop } }) => this.cameraService.enableInputs(drop)))\n      .subscribe(({ movement: { endPosition, drop }, entities }) => {\n        const position = this.screenToPosition(endPosition, options.clampHeightTo3D);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n        });\n      });\n\n    pointRemoveRegistration.subscribe(({ entities }) => {\n      const point: EditPoint = entities[0];\n      const allPositions = [...this.getPositions(id)];\n      if (allPositions.length < 3) {\n        return;\n      }\n      const index = allPositions.findIndex(position => point.getPosition().equals(position as Cartesian3));\n      if (index < 0) {\n        return;\n      }\n\n      const update = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.EDIT,\n        updatedPoint: point,\n        editAction: EditActions.REMOVE_POINT,\n      };\n      this.updateSubject.next(update);\n      editSubject.next({\n        ...update,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n      });\n    });\n\n    const observables = [pointDragRegistration, pointRemoveRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: PolylineEditOptions) {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_POLYLINE_OPTIONS));\n    const polylineOptions: PolylineEditOptions = Object.assign(defaultClone, options);\n    polylineOptions.pointProps = Object.assign({}, DEFAULT_POLYLINE_OPTIONS.pointProps, options.pointProps);\n    polylineOptions.polylineProps = Object.assign({},\n      DEFAULT_POLYLINE_OPTIONS.polylineProps, options.polylineProps);\n\n    if (options.clampHeightTo3D) {\n      if (!this.cesiumScene.pickPositionSupported || !this.cesiumScene.clampToHeightSupported) {\n        throw new Error(`Cesium pickPosition and clampToHeight must be supported to use clampHeightTo3D`);\n      }\n\n      if (this.cesiumScene.pickTranslucentDepth) {\n        console.warn(`Cesium scene.pickTranslucentDepth must be false in order to make the editors work properly on 3D`);\n      }\n\n      if (polylineOptions.pointProps.color.alpha === 1 || polylineOptions.pointProps.outlineColor.alpha === 1) {\n        console.warn('Point color and outline color must have alpha in order to make the editor work properly on 3D');\n      }\n\n      polylineOptions.allowDrag = false;\n      polylineOptions.polylineProps.clampToGround = true;\n      polylineOptions.pointProps.heightReference = polylineOptions.clampHeightTo3DOptions.clampToTerrain ?\n        Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.RELATIVE_TO_GROUND;\n      polylineOptions.pointProps.disableDepthTestDistance = Number.POSITIVE_INFINITY;\n    }\n    return polylineOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): PolylineEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (points: {\n      position: Cartesian3,\n      pointProp?: PointProps\n    }[] | Cartesian3[], polylineProps?: PolylineProps) => {\n      const polyline = this.polylinesManager.get(id);\n      polyline.setManually(points, polylineProps);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n\n    observableToExtend.getLabels = (): LabelProps[] => this.polylinesManager.get(id).labels;\n\n    return observableToExtend as PolylineEditorObservable;\n  }\n\n  private getPositions(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPositions();\n  }\n\n  private getPoints(id: string) {\n    const polyline = this.polylinesManager.get(id);\n    return polyline.getRealPoints();\n  }\n}\n","import { CoordinateConverter } from './../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { AcLayerComponent } from './../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\nimport { EditablePolyline } from '../../../models/editable-polyline';\n\n@Injectable()\nexport class PolylinesManagerService {\n  polylines: Map<string, EditablePolyline> = new Map<string, EditablePolyline>();\n\n  createEditablePolyline(id: string, editPolylinesLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                         coordinateConverter: CoordinateConverter, polylineOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\n    const editablePolyline = new EditablePolyline(\n      id,\n      editPolylinesLayer,\n      editPointsLayer,\n      coordinateConverter,\n      polylineOptions,\n      positions);\n    this.polylines.set(id, editablePolyline\n    );\n  }\n\n  get(id: string): EditablePolyline {\n    return this.polylines.get(id);\n  }\n\n  clear() {\n    this.polylines.forEach(polyline => polyline.dispose());\n    this.polylines.clear();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CesiumService } from '../../../angular-cesium/services/cesium/cesium.service';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\nimport { PolylinesManagerService } from '../../services/entity-editors/polyline-editor/polylines-manager.service';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditablePolyline } from '../../models/editable-polyline';\nimport { LabelProps } from '../../models/label-props';\n\n@Component({\n  selector: 'polylines-editor',\n  template: /*html*/ `\n    <ac-layer #editPolylinesLayer acFor=\"let polyline of editPolylines$\" [context]=\"this\">\n      <ac-polyline-desc\n        props=\"{\n        positions: polyline.getPositionsCallbackProperty(),\n        width: polyline.props.width,\n        material: polyline.props.material(),\n        clampToGround: polyline.props.clampToGround,\n        zIndex: polyline.props.zIndex,\n        classificationType: polyline.props.classificationType,\n      }\"\n      >\n      </ac-polyline-desc>\n    </ac-layer>\n\n    <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n      <ac-point-desc\n        props=\"{\n        position: point.getPositionCallbackProperty(),\n        pixelSize: getPointSize(point),\n        color: point.props.color,\n        outlineColor: point.props.outlineColor,\n        outlineWidth: point.props.outlineWidth,\n        show: getPointShow(point),\n        disableDepthTestDistance: point.props.disableDepthTestDistance,\n        heightReference: point.props.heightReference,\n    }\"\n      ></ac-point-desc>\n    </ac-layer>\n\n    <ac-layer #polylineLabelsLayer acFor=\"let polylineLabels of polylineLabels$\" [context]=\"this\">\n      <ac-array-desc acFor=\"let label of polylineLabels.labels\" [idGetter]=\"getLabelId\">\n        <ac-label-primitive-desc\n          props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\"\n        >\n        </ac-label-primitive-desc>\n      </ac-array-desc>\n    </ac-layer>\n  `,\n  providers: [CoordinateConverter, PolylinesManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolylinesEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editPolylines$ = new Subject<AcNotification>();\n  public polylineLabels$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer', {static: false}) private editPointsLayer: AcLayerComponent;\n  @ViewChild('editPolylinesLayer', {static: false}) private editPolylinesLayer: AcLayerComponent;\n  @ViewChild('polylineLabelsLayer', {static: false}) private polylineLabelsLayer: AcLayerComponent;\n\n  constructor(\n    private polylinesEditor: PolylinesEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private polylinesManager: PolylinesManagerService,\n    private cesiumService: CesiumService,\n  ) {\n    this.polylinesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, polylinesManager, this.cesiumService);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.polylinesEditor.onUpdate().subscribe((update: PolylineEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(polyline: EditablePolyline, update: PolylineEditUpdate, labels?: LabelProps[]) {\n    update.positions = polyline.getRealPositions();\n    update.points = polyline.getRealPoints();\n\n    if (labels) {\n      polyline.labels = labels;\n      this.polylineLabelsLayer.update(polyline, polyline.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    polyline.labels = this.editLabelsRenderFn(update, polyline.labels);\n    this.polylineLabelsLayer.update(polyline, polyline.getId());\n  }\n\n  removeEditLabels(polyline: EditablePolyline) {\n    polyline.labels = [];\n    this.polylineLabelsLayer.remove(polyline.getId());\n  }\n\n  handleCreateUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ADD_LAST_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (update.updatedPosition) {\n          polyline.addLastPoint(update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const polyline = this.polylinesManager.get(update.id);\n        polyline.dispose();\n        this.removeEditLabels(polyline);\n        this.editLabelsRenderFn = undefined;\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(polyline, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const polyline = this.polylinesManager.get(update.id);\n        this.renderEditLabels(polyline, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: PolylineEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.polylinesManager.createEditablePolyline(\n          update.id,\n          this.editPointsLayer,\n          this.editPolylinesLayer,\n          this.coordinateConverter,\n          update.polylineOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.movePointFinish(update.updatedPoint);\n\n          if (update.updatedPoint.isVirtualEditPoint()) {\n            polyline.changeVirtualPointToRealPoint(update.updatedPoint);\n            this.renderEditLabels(polyline, update);\n          }\n        }\n        break;\n      }\n      case EditActions.REMOVE_POINT: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.removePoint(update.updatedPoint);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = false;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline) {\n          polyline.enableEdit = true;\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const polyline = this.polylinesManager.get(update.id);\n        if (polyline && polyline.enableEdit) {\n          polyline.endMoveShape();\n          this.renderEditLabels(polyline, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.polylinesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { AcLayerComponent } from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\n\n@Injectable()\nexport class HippodromeManagerService {\n  hippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\n\n  createEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\n                           coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\n                           positions?: Cartesian3[]) {\n    const editableHippodrome = new EditableHippodrome(\n      id,\n      editHippodromeLayer,\n      editPointsLayer,\n      coordinateConverter,\n      hippodromeEditOptions,\n      positions);\n    this.hippodromes.set(id, editableHippodrome);\n  }\n\n  get(id: string): EditableHippodrome {\n    return this.hippodromes.get(id);\n  }\n\n  clear() {\n    this.hippodromes.forEach(hippodrome => hippodrome.dispose());\n    this.hippodromes.clear();\n  }\n}\n","import { publish, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MapEventsManagerService } from '../../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CesiumEvent } from '../../../../angular-cesium/services/map-events-mananger/consts/cesium-event.enum';\nimport { PickOptions } from '../../../../angular-cesium/services/map-events-mananger/consts/pickOptions.enum';\nimport { EditModes } from '../../../models/edit-mode.enum';\nimport { EditActions } from '../../../models/edit-actions.enum';\nimport { DisposableObservable } from '../../../../angular-cesium/services/map-events-mananger/disposable-observable';\nimport { CoordinateConverter } from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditPoint } from '../../../models/edit-point';\nimport { CameraService } from '../../../../angular-cesium/services/camera/camera.service';\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\nimport { HippodromeManagerService } from './hippodrome-manager.service';\nimport { HippodromeEditorObservable } from '../../../models/hippodrome-editor-oboservable';\nimport { HippodromeEditUpdate } from '../../../models/hippodrome-edit-update';\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\nimport { PointProps } from '../../../models/polyline-edit-options';\nimport { LabelProps } from '../../../models/label-props';\nimport { generateKey } from '../../utils';\n\nexport const DEFAULT_HIPPODROME_OPTIONS: HippodromeEditOptions = {\n  addPointEvent: CesiumEvent.LEFT_CLICK,\n  dragPointEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  dragShapeEvent: CesiumEvent.LEFT_CLICK_DRAG,\n  allowDrag: true,\n  hippodromeProps: {\n    fill: true,\n    material: Cesium.Color.CORNFLOWERBLUE.withAlpha(0.4),\n    outline: true,\n    width: 200000.0,\n    outlineWidth: 1,\n    outlineColor: Cesium.Color.WHITE.withAlpha(0.8),\n    classificationType: Cesium.ClassificationType.BOTH,\n    zIndex: 0,\n    shadows: Cesium.ShadowMode.DISABLED,\n  },\n  pointProps: {\n    color: Cesium.Color.WHITE.withAlpha(0.95),\n    outlineColor: Cesium.Color.BLACK.withAlpha(0.2),\n    outlineWidth: 1,\n    pixelSize: 13,\n    virtualPointPixelSize: 8,\n    show: true,\n    showVirtual: true,\n    disableDepthTestDistance: Number.POSITIVE_INFINITY,\n  },\n};\n\n/**\n * Service for creating editable hippodromes\n *\n * You must provide `HippodromeEditorService` yourself.\n * HippodromeEditorService works together with `<hippodromes-editor>` component. Therefor you need to create `<hippodromes-editor>`\n * for each `PolylineEditorService`, And of course somewhere under `<ac-map>`/\n *\n * + `create` for starting a creation of the shape over the map. Returns a extension of `HippodromeEditorObservable`.\n * + `edit` for editing shape over the map starting from a given positions. Returns an extension of `HippodromeEditorObservable`.\n * + To stop editing call `dsipose()` from the `HippodromeEditorObservable` you get back from `create()` \\ `edit()`.\n *\n * **Labels over editted shapes**\n * Angular Cesium allows you to draw labels over a shape that is being edited with one of the editors.\n * To add label drawing logic to your editor use the function `setLabelsRenderFn()` that is defined on the\n * `HippodromeEditorObservable` that is returned from calling `create()` \\ `edit()` of one of the editor services.\n * `setLabelsRenderFn()` - receives a callback that is called every time the shape is redrawn\n * (except when the shape is being dragged). The callback is called with the last shape state and with an array of the current labels.\n * The callback should return type `LabelProps[]`.\n * You can also use `updateLabels()` to pass an array of labels of type `LabelProps[]` to be drawn.\n *\n *\n * usage:\n * ```typescript\n *  // Start creating hippodrome\n *  const editing$ = hippodromeEditorService.create();\n *  this.editing$.subscribe(editResult => {\n *\t\t\t\tconsole.log(editResult.positions);\n *\t\t});\n *\n *  // Or edit hippodromes from existing hippodromes cartesian3 positions\n *  const editing$ = this.hippodromeEditor.edit(initialPos);\n *\n * ```\n */\n@Injectable()\nexport class HippodromeEditorService {\n  private mapEventsManager: MapEventsManagerService;\n  private updateSubject = new Subject<HippodromeEditUpdate>();\n  private updatePublisher = publish<HippodromeEditUpdate>()(this.updateSubject); // TODO maybe not needed\n  private coordinateConverter: CoordinateConverter;\n  private cameraService: CameraService;\n  private hippodromeManager: HippodromeManagerService;\n  private observablesMap = new Map<string, DisposableObservable<any>[]>();\n\n  init(mapEventsManager: MapEventsManagerService,\n       coordinateConverter: CoordinateConverter,\n       cameraService: CameraService,\n       managerService: HippodromeManagerService) {\n    this.mapEventsManager = mapEventsManager;\n    this.coordinateConverter = coordinateConverter;\n    this.cameraService = cameraService;\n    this.hippodromeManager = managerService;\n    this.updatePublisher.connect();\n  }\n\n  onUpdate(): Observable<HippodromeEditUpdate> {\n    return this.updatePublisher;\n  }\n\n  create(options = DEFAULT_HIPPODROME_OPTIONS, eventPriority = 100): HippodromeEditorObservable {\n    const positions: Cartesian3[] = [];\n    const id = generateKey();\n    const hippodromeOptions = this.setOptions(options);\n\n    const clientEditSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.CREATE\n    });\n    let finishedCreate = false;\n\n    this.updateSubject.next({\n      id,\n      positions,\n      editMode: EditModes.CREATE,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeOptions,\n    });\n\n    const mouseMoveRegistration = this.mapEventsManager.register({\n      event: CesiumEvent.MOUSE_MOVE,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n    const addPointRegistration = this.mapEventsManager.register({\n      event: hippodromeOptions.addPointEvent,\n      pick: PickOptions.NO_PICK,\n      priority: eventPriority,\n    });\n\n    this.observablesMap.set(id, [mouseMoveRegistration, addPointRegistration]);\n    const editorObservable = this.createEditorObservable(clientEditSubject, id);\n\n    mouseMoveRegistration.subscribe(({movement: {endPosition}}) => {\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n\n      if (position) {\n        this.updateSubject.next({\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.CREATE,\n          updatedPosition: position,\n          editAction: EditActions.MOUSE_MOVE,\n        });\n      }\n    });\n\n    addPointRegistration.subscribe(({movement: {endPosition}}) => {\n      if (finishedCreate) {\n        return;\n      }\n      const position = this.coordinateConverter.screenToCartesian3(endPosition);\n      if (!position) {\n        return;\n      }\n\n      const allPositions = this.getPositions(id);\n      const isFirstPoint = this.getPositions(id).length === 0;\n\n      const updateValue = {\n        id,\n        positions: allPositions,\n        editMode: EditModes.CREATE,\n        updatedPosition: position,\n        editAction: EditActions.ADD_POINT,\n      };\n      this.updateSubject.next(updateValue);\n      clientEditSubject.next({\n        ...updateValue,\n        positions: this.getPositions(id),\n        points: this.getPoints(id),\n        width: this.getWidth(id),\n      });\n\n      if (!isFirstPoint) {\n        const changeMode = {\n          id,\n          editMode: EditModes.CREATE,\n          editAction: EditActions.CHANGE_TO_EDIT,\n        };\n        this.updateSubject.next(changeMode);\n        clientEditSubject.next(changeMode);\n        if (this.observablesMap.has(id)) {\n          this.observablesMap.get(id).forEach(registration => registration.dispose());\n        }\n        this.observablesMap.delete(id);\n        this.editHippodrome(id, eventPriority, clientEditSubject, hippodromeOptions, editorObservable);\n        finishedCreate = true;\n      }\n    });\n\n    return editorObservable;\n  }\n\n  edit(positions: Cartesian3[], options = DEFAULT_HIPPODROME_OPTIONS, priority = 100): HippodromeEditorObservable {\n    if (positions.length !== 2) {\n      throw new Error('Hippodrome editor error edit(): polygon should have 2 positions but received ' + positions);\n    }\n    const id = generateKey();\n    const hippodromeEditOptions = this.setOptions(options);\n    const editSubject = new BehaviorSubject<HippodromeEditUpdate>({\n      id,\n      editAction: null,\n      editMode: EditModes.EDIT\n    });\n    const update = {\n      id,\n      positions: positions,\n      editMode: EditModes.EDIT,\n      editAction: EditActions.INIT,\n      hippodromeOptions: hippodromeEditOptions,\n    };\n    this.updateSubject.next(update);\n    editSubject.next({\n      ...update,\n      positions: this.getPositions(id),\n      points: this.getPoints(id),\n      width: this.getWidth(id),\n    });\n    return this.editHippodrome(\n      id,\n      priority,\n      editSubject,\n      hippodromeEditOptions\n    );\n  }\n\n  private editHippodrome(id: string,\n                         priority: number,\n                         editSubject: Subject<HippodromeEditUpdate>,\n                         options: HippodromeEditOptions,\n                         editObservable?: HippodromeEditorObservable): HippodromeEditorObservable {\n    let shapeDragRegistration;\n    if (options.allowDrag) {\n      shapeDragRegistration = this.mapEventsManager.register({\n        event: options.dragShapeEvent,\n        entityType: EditableHippodrome,\n        pick: PickOptions.PICK_FIRST,\n        priority,\n        pickFilter: entity => id === entity.id,\n      });\n    }\n    const pointDragRegistration = this.mapEventsManager.register({\n      event: options.dragPointEvent,\n      entityType: EditPoint,\n      pick: PickOptions.PICK_FIRST,\n      priority,\n      pickFilter: entity => id === entity.editedEntityId,\n    });\n\n    pointDragRegistration.pipe(\n      tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n      .subscribe(({movement: {endPosition, drop}, entities}) => {\n        const position = this.coordinateConverter.screenToCartesian3(endPosition);\n        if (!position) {\n          return;\n        }\n        const point: EditPoint = entities[0];\n\n        const update = {\n          id,\n          positions: this.getPositions(id),\n          editMode: EditModes.EDIT,\n          updatedPosition: position,\n          updatedPoint: point,\n          editAction: drop ? EditActions.DRAG_POINT_FINISH : EditActions.DRAG_POINT,\n        };\n        this.updateSubject.next(update);\n        editSubject.next({\n          ...update,\n          positions: this.getPositions(id),\n          points: this.getPoints(id),\n          width: this.getWidth(id),\n        });\n      });\n\n    if (shapeDragRegistration) {\n      shapeDragRegistration\n        .pipe(tap(({movement: {drop}}) => this.cameraService.enableInputs(drop)))\n        .subscribe(({movement: {startPosition, endPosition, drop}, entities}) => {\n          const endDragPosition = this.coordinateConverter.screenToCartesian3(endPosition);\n          const startDragPosition = this.coordinateConverter.screenToCartesian3(startPosition);\n          if (!endDragPosition) {\n            return;\n          }\n\n          const update = {\n            id,\n            positions: this.getPositions(id),\n            editMode: EditModes.EDIT,\n            updatedPosition: endDragPosition,\n            draggedPosition: startDragPosition,\n            editAction: drop ? EditActions.DRAG_SHAPE_FINISH : EditActions.DRAG_SHAPE,\n          };\n          this.updateSubject.next(update);\n          editSubject.next({\n            ...update,\n            positions: this.getPositions(id),\n            points: this.getPoints(id),\n            width: this.getWidth(id),\n          });\n        });\n    }\n\n    const observables = [pointDragRegistration];\n    if (shapeDragRegistration) {\n      observables.push(shapeDragRegistration);\n    }\n\n    this.observablesMap.set(id, observables);\n    return this.createEditorObservable(editSubject, id);\n  }\n\n  private setOptions(options: HippodromeEditOptions): HippodromeEditOptions {\n    const defaultClone = JSON.parse(JSON.stringify(DEFAULT_HIPPODROME_OPTIONS));\n    const hippodromeOptions = Object.assign(defaultClone, options);\n    hippodromeOptions.hippodromeProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.hippodromeProps, options.hippodromeProps);\n    hippodromeOptions.pointProps = Object.assign({}, DEFAULT_HIPPODROME_OPTIONS.pointProps, options.pointProps);\n    return hippodromeOptions;\n  }\n\n\n  private createEditorObservable(observableToExtend: any, id: string): HippodromeEditorObservable {\n    observableToExtend.dispose = () => {\n      const observables = this.observablesMap.get(id);\n      if (observables) {\n        observables.forEach(obs => obs.dispose());\n      }\n      this.observablesMap.delete(id);\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.DISPOSE,\n      });\n    };\n\n    observableToExtend.enable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.ENABLE,\n      });\n    };\n\n    observableToExtend.disable = () => {\n      this.updateSubject.next({\n        id,\n        positions: this.getPositions(id),\n        editMode: EditModes.EDIT,\n        editAction: EditActions.DISABLE,\n      });\n    };\n\n    observableToExtend.setManually = (firstPosition: Cartesian3,\n                                      secondPosition: Cartesian3,\n                                      widthMeters: number,\n                                      firstPointProp?: PointProps,\n                                      secondPointProp?: PointProps) => {\n      const firstP = new EditPoint(id, firstPosition, firstPointProp ? firstPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n      const secP = new EditPoint(id, secondPosition, secondPointProp ? secondPointProp : DEFAULT_HIPPODROME_OPTIONS.pointProps);\n\n      const hippodrome = this.hippodromeManager.get(id);\n      hippodrome.setPointsManually([firstP, secP], widthMeters);\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_MANUALLY,\n      });\n    };\n\n    observableToExtend.setLabelsRenderFn = (callback: any) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.SET_EDIT_LABELS_RENDER_CALLBACK,\n        labelsRenderFn: callback,\n      });\n    };\n\n    observableToExtend.updateLabels = (labels: LabelProps[]) => {\n      this.updateSubject.next({\n        id,\n        editMode: EditModes.CREATE_OR_EDIT,\n        editAction: EditActions.UPDATE_EDIT_LABELS,\n        updateLabels: labels,\n      });\n    };\n\n    observableToExtend.getCurrentPoints = () => this.getPoints(id);\n    observableToExtend.getEditValue = () => observableToExtend.getValue();\n    observableToExtend.getLabels = (): LabelProps[] => this.hippodromeManager.get(id).labels;\n    observableToExtend.getCurrentWidth = (): number => this.getWidth(id);\n\n    return observableToExtend as HippodromeEditorObservable;\n  }\n\n  private getPositions(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPositions();\n  }\n\n  private getPoints(id: any) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getRealPoints();\n  }\n\n  private getWidth(id: string) {\n    const hippodrome = this.hippodromeManager.get(id);\n    return hippodrome.getWidth();\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { AcNotification } from '../../../angular-cesium/models/ac-notification';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { AcLayerComponent } from '../../../angular-cesium/components/ac-layer/ac-layer.component';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapEventsManagerService } from '../../../angular-cesium/services/map-events-mananger/map-events-manager';\nimport { Subject } from 'rxjs';\nimport { CameraService } from '../../../angular-cesium/services/camera/camera.service';\nimport { EditPoint } from '../../models/edit-point';\nimport { HippodromeManagerService } from '../../services/entity-editors/hippodrome-editor/hippodrome-manager.service';\nimport { HippodromeEditorService } from '../../services/entity-editors/hippodrome-editor/hippodrome-editor.service';\nimport { HippodromeEditUpdate } from '../../models/hippodrome-edit-update';\nimport { LabelProps } from '../../models/label-props';\nimport { EditableHippodrome } from '../../models/editable-hippodrome';\n\n@Component({\n  selector: 'hippodrome-editor',\n  template: /*html*/ `\n      <ac-layer #editHippodromesLayer acFor=\"let hippodrome of editHippodromes$\" [context]=\"this\">\n          <ac-corridor-desc props=\"{\n            positions: hippodrome.getRealPositionsCallbackProperty(),\n            cornerType: Cesium.CornerType.ROUNDED,\n            material: hippodrome.hippodromeProps.material,\n            width : hippodrome.hippodromeProps.width,\n            outline: hippodrome.hippodromeProps.outline,\n            outlineColor: hippodrome.hippodromeProps.outlineColor,\n            outlineWidth: hippodrome.hippodromeProps.outlineWidth,\n            height: 0,\n            classificationType: hippodrome.hippodromeProps.classificationType,\n            zIndex: hippodrome.hippodromeProps.zIndex,\n            shadows: hippodrome.hippodromeProps.shadows,\n    }\">\n          </ac-corridor-desc>\n\n          <ac-array-desc acFor=\"let label of hippodrome.labels\" [idGetter]=\"getLabelId\">\n              <ac-label-primitive-desc props=\"{\n            position: label.position,\n            backgroundColor: label.backgroundColor,\n            backgroundPadding: label.backgroundPadding,\n            distanceDisplayCondition: label.distanceDisplayCondition,\n            eyeOffset: label.eyeOffset,\n            fillColor: label.fillColor,\n            font: label.font,\n            heightReference: label.heightReference,\n            horizontalOrigin: label.horizontalOrigin,\n            outlineColor: label.outlineColor,\n            outlineWidth: label.outlineWidth,\n            pixelOffset: label.pixelOffset,\n            pixelOffsetScaleByDistance: label.pixelOffsetScaleByDistance,\n            scale: label.scale,\n            scaleByDistance: label.scaleByDistance,\n            show: label.show,\n            showBackground: label.showBackground,\n            style: label.style,\n            text: label.text,\n            translucencyByDistance: label.translucencyByDistance,\n            verticalOrigin: label.verticalOrigin,\n            disableDepthTestDistance: label.disableDepthTestDistance,\n        }\">\n              </ac-label-primitive-desc>\n          </ac-array-desc>\n      </ac-layer>\n\n      <ac-layer #editPointsLayer acFor=\"let point of editPoints$\" [context]=\"this\">\n          <ac-point-desc props=\"{\n         position: point.getPositionCallbackProperty(),\n         pixelSize: getPointSize(point),\n         color: point.props.color,\n         outlineColor: point.props.outlineColor,\n         outlineWidth: point.props.outlineWidth,\n         show: getPointShow(point),\n         disableDepthTestDistance: point.props.disableDepthTestDistance,\n         heightReference: point.props.heightReference,\n    }\">\n          </ac-point-desc>\n      </ac-layer>\n  `,\n  providers: [CoordinateConverter, HippodromeManagerService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HippodromeEditorComponent implements OnDestroy {\n  private editLabelsRenderFn: (update: HippodromeEditUpdate, labels: LabelProps[]) => LabelProps[];\n  public Cesium = Cesium;\n  public editPoints$ = new Subject<AcNotification>();\n  public editHippodromes$ = new Subject<AcNotification>();\n\n  @ViewChild('editPointsLayer', {static: false}) private editPointsLayer: AcLayerComponent;\n  @ViewChild('editHippodromesLayer', {static: false}) private editHippodromesLayer: AcLayerComponent;\n\n  constructor(\n    private hippodromesEditor: HippodromeEditorService,\n    private coordinateConverter: CoordinateConverter,\n    private mapEventsManager: MapEventsManagerService,\n    private cameraService: CameraService,\n    private hippodromesManager: HippodromeManagerService,\n  ) {\n    this.hippodromesEditor.init(this.mapEventsManager, this.coordinateConverter, this.cameraService, hippodromesManager);\n    this.startListeningToEditorUpdates();\n  }\n\n  private startListeningToEditorUpdates() {\n    this.hippodromesEditor.onUpdate().subscribe((update: HippodromeEditUpdate) => {\n      if (update.editMode === EditModes.CREATE || update.editMode === EditModes.CREATE_OR_EDIT) {\n        this.handleCreateUpdates(update);\n      } else if (update.editMode === EditModes.EDIT) {\n        this.handleEditUpdates(update);\n      }\n    });\n  }\n\n  getLabelId(element: any, index: number): string {\n    return index.toString();\n  }\n\n  renderEditLabels(hippodrome: EditableHippodrome, update: HippodromeEditUpdate, labels?: LabelProps[]) {\n    update.positions = hippodrome.getRealPositions();\n    update.points = hippodrome.getRealPoints();\n\n    if (labels) {\n      hippodrome.labels = labels;\n      this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n      return;\n    }\n\n    if (!this.editLabelsRenderFn) {\n      return;\n    }\n\n    hippodrome.labels = this.editLabelsRenderFn(update, hippodrome.labels);\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  removeEditLabels(hippodrome: EditableHippodrome) {\n    hippodrome.labels = [];\n    this.editHippodromesLayer.update(hippodrome, hippodrome.getId());\n  }\n\n  handleCreateUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n        );\n        break;\n      }\n      case EditActions.MOUSE_MOVE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.moveTempMovingPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ADD_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (update.updatedPosition) {\n          hippodrome.addPoint(update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISPOSE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        hippodrome.dispose();\n        this.removeEditLabels(hippodrome);\n        break;\n      }\n      case EditActions.SET_EDIT_LABELS_RENDER_CALLBACK: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.editLabelsRenderFn = update.labelsRenderFn;\n        this.renderEditLabels(hippodrome, update);\n        break;\n      }\n      case EditActions.UPDATE_EDIT_LABELS: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      case EditActions.SET_MANUALLY: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        this.renderEditLabels(hippodrome, update, update.updateLabels);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  handleEditUpdates(update: HippodromeEditUpdate) {\n    switch (update.editAction) {\n      case EditActions.INIT: {\n        this.hippodromesManager.createEditableHippodrome(\n          update.id,\n          this.editPointsLayer,\n          this.editHippodromesLayer,\n          this.coordinateConverter,\n          update.hippodromeOptions,\n          update.positions,\n        );\n        break;\n      }\n      case EditActions.DRAG_POINT: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.movePoint(update.updatedPosition, update.updatedPoint);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_POINT_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMovePoint();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DISABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = false;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.ENABLE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome) {\n          hippodrome.enableEdit = true;\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      case EditActions.DRAG_SHAPE: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.moveShape(update.draggedPosition, update.updatedPosition);\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n\n      case EditActions.DRAG_SHAPE_FINISH: {\n        const hippodrome = this.hippodromesManager.get(update.id);\n        if (hippodrome && hippodrome.enableEdit) {\n          hippodrome.endMoveShape();\n          this.renderEditLabels(hippodrome, update);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hippodromesManager.clear();\n  }\n\n  getPointSize(point: EditPoint) {\n    return point.isVirtualEditPoint() ? point.props.virtualPointPixelSize : point.props.pixelSize;\n  }\n\n  getPointShow(point: EditPoint) {\n    return point.show && (point.isVirtualEditPoint() ? point.props.showVirtual : point.props.show);\n  }\n}\n","import { fromEvent as observableFromEvent, Observable, Subject } from 'rxjs';\n\nimport { map, merge, takeUntil, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Vec2 } from '../../angular-cesium/models/vec2';\nimport { Cartesian3 } from '../../angular-cesium/models/cartesian3';\nimport { CoordinateConverter } from '../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\n\nexport interface IconDragEvent {\n  initialScreenPosition: Vec2;\n  screenPosition: Vec2;\n  mapPosition: Cartesian3;\n  drop: boolean;\n}\n\n/**\n * The Service is used to preform, handle and subscribe to icon dragging when using the `DraggableToMapDirective`.\n * For more info check `DraggableToMapDirective` docs.\n */\n\n@Injectable()\nexport class DraggableToMapService {\n\n  private coordinateConverter: CoordinateConverter;\n  private dragObservable: Observable<IconDragEvent>;\n  private stopper: Subject<any>;\n  private mainSubject = new Subject<IconDragEvent>();\n\n  constructor(@Inject(DOCUMENT) private document: any, private mapsManager: MapsManagerService) {\n  }\n\n  setCoordinateConverter(coordinateConverter: CoordinateConverter) {\n    this.coordinateConverter = coordinateConverter;\n  }\n\n  drag(imageSrc: string, style?: any) {\n    if (!this.coordinateConverter) {\n      const mapComponent = this.mapsManager.getMap();\n      if (mapComponent) {\n        this.coordinateConverter = mapComponent.getCoordinateConverter();\n      }\n    }\n    this.cancel();\n    const imgElement = document.createElement('img');\n    imgElement.src = imageSrc;\n    imgElement.style.position = 'fixed';\n    imgElement.style.visibility = 'hidden';\n    imgElement.style.width = '30px';\n    imgElement.style.height = '30px';\n    imgElement.style['user-drag'] = 'none';\n    imgElement.style['user-select'] = 'none';\n    imgElement.style['-moz-user-select'] = 'none';\n    imgElement.style['-webkit-user-drag'] = 'none';\n    imgElement.style['-webkit-user-select'] = 'none';\n    imgElement.style['-ms-user-select'] = 'none';\n    Object.assign(imgElement.style, style);\n    document.body.appendChild(imgElement);\n\n    this.createDragObservable();\n    this.dragObservable.subscribe(\n      (e) => {\n        imgElement.style.visibility = 'visible';\n        imgElement.style.left = e.screenPosition.x - imgElement.clientWidth / 2 + 'px';\n        imgElement.style.top = e.screenPosition.y - imgElement.clientHeight / 2 + 'px';\n        this.mainSubject.next(e);\n        if (e.drop) {\n          imgElement.remove();\n        }\n      },\n      (e: any) => {\n        imgElement.remove();\n      },\n      () => {\n        imgElement.remove();\n      }\n    );\n  }\n\n  dragUpdates(): Observable<IconDragEvent> {\n    return this.mainSubject;\n  }\n\n  cancel() {\n    if (this.stopper) {\n      this.stopper.next(true);\n      this.stopper = undefined;\n      this.dragObservable = undefined;\n    }\n  }\n\n  private createDragObservable() {\n    const stopper = new Subject();\n    const dropSubject = new Subject<any>();\n    const pointerUp = observableFromEvent(document, 'pointerup');\n    const pointerMove = observableFromEvent(document, 'pointermove');\n\n    let dragStartPositionX: number;\n    let dragStartPositionY: number;\n    let lastMove: any;\n    const moveObservable = pointerMove.pipe(map((e: any) => {\n        dragStartPositionX = dragStartPositionX ? dragStartPositionX : e.x;\n        dragStartPositionY = dragStartPositionY ? dragStartPositionY : e.y;\n        lastMove = {\n          drop: false,\n          initialScreenPosition: {\n            x: dragStartPositionX,\n            y: dragStartPositionY,\n          },\n          screenPosition: {\n            x: e.x,\n            y: e.y,\n          },\n          mapPosition: this.coordinateConverter ?\n            this.coordinateConverter.screenToCartesian3({x: e.x, y: e.y}) : undefined,\n        };\n        return lastMove;\n      }),\n      takeUntil(pointerUp),\n      tap(undefined, undefined, () => {\n        if (lastMove) {\n          const dropEvent = Object.assign({}, lastMove);\n          dropEvent.drop = true;\n          dropSubject.next(dropEvent);\n        }\n      }), );\n\n    this.dragObservable = moveObservable.pipe(merge(dropSubject), takeUntil(stopper), );\n    this.stopper = stopper;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { DraggableToMapService } from '../services/draggable-to-map.service';\n\n/**\n * This directive is used to allow dragging of icons from outside the map over the map\n * while being notified of the dragging position and drop position with an observable exposed from `DraggableToMapService`.\n * @Input {src: string, style?: any} | string -\n * the [src: string | string] should be the image src of the dragged image.\n * The style is an optional style object for the image.\n *\n * example:\n * ```\n * <a href=\"...\" class=\"...\" [draggableToMap]=\"{src: '../assets/GitHub-Mark-Light.png', style: {width: '50px', height: '50px'}}\">\n *     <img class=\"github\" src=\"../assets/GitHub-Mark-Light.png\">\n * </a>\n * ```\n *\n * In order the get notified of the dragging location  and drop state subscribe to `DraggableToMapService.dragUpdates()`\n * ```\n *  this.iconDragService.dragUpdates().subscribe(e => console.log(e));\n * ```\n *\n * In order the cancel dragging use `DraggableToMapService.cancel()`\n * ```\n *  this.iconDragService.cancel();\n * ```\n */\n\n@Directive({selector: '[draggableToMap]'})\nexport class DraggableToMapDirective implements OnInit {\n  @Input() draggableToMap: { src: string, style?: any } | string;\n  private src: string;\n  private style: any;\n\n  constructor(el: ElementRef, private iconDragService: DraggableToMapService) {\n    el.nativeElement.style['user-drag'] = 'none';\n    el.nativeElement.style['user-select'] = 'none';\n    el.nativeElement.style['-moz-user-select'] = 'none';\n    el.nativeElement.style['-webkit-user-drag'] = 'none';\n    el.nativeElement.style['-webkit-user-select'] = 'none';\n    el.nativeElement.style['-ms-user-select'] = 'none';\n  }\n\n  ngOnInit(): void {\n    if (typeof this.draggableToMap === 'string') {\n      this.src = this.draggableToMap;\n    } else {\n      this.src = this.draggableToMap.src;\n      this.style = this.draggableToMap.style;\n    }\n  }\n\n  @HostListener('mousedown')\n  onMouseDown() {\n    this.iconDragService.drag(this.src, this.style);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { fromEvent as observableFromEvent, Subscription, Observable } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { CesiumService } from '../../../../angular-cesium/services/cesium/cesium.service';\n\n\n/**\n * Toolbar widget, act as a container for ac-toolbar-button components\n * allowing drag configuration and passing `toolbarClass` as attributes\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\" (onDrag)=\"handleDrag($event)\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar',\n    template: `\n        <div class=\"{{toolbarClass}}\">\n            <div *ngIf=\"allowDrag\">\n                <ac-toolbar-button>\n                    <ac-drag-icon></ac-drag-icon>\n                </ac-toolbar-button>\n            </div>\n\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 20px;\n            left: 20px;\n            width: 20px;\n            height: 20px;\n            z-index: 999;\n            -webkit-user-drag: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  toolbarClass: string;\n  @Input()\n  allowDrag = true;\n  @Output()\n  onDrag = new EventEmitter<MouseEvent>();\n\n  dragStyle = {\n    'height.px': 20,\n    'width.px': 20,\n  };\n\n  private mouseDown$: Observable<MouseEvent>;\n  private mouseMove$: Observable<MouseEvent>;\n  private mouseUp$: Observable<MouseEvent>;\n  private drag$: Observable<MouseEvent>;\n  private dragSubscription: Subscription;\n\n  constructor(private element: ElementRef, private cesiumService: CesiumService) {}\n\n  ngOnInit() {\n    this.cesiumService.getMap().getMapContainer().appendChild(this.element.nativeElement);\n    if (this.allowDrag) {\n      this.listenForDragging();\n    }\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.allowDrag && changes.allowDrag.currentValue && !changes.allowDrag.previousValue) {\n      this.listenForDragging();\n    }\n\n    if (changes.allowDrag && !changes.allowDrag.currentValue && changes.allowDrag.previousValue) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.dragSubscription) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  private listenForDragging() {\n    this.mouseDown$ = this.mouseDown$ || observableFromEvent(this.element.nativeElement, 'mousedown');\n    this.mouseMove$ = this.mouseMove$ || observableFromEvent(document, 'mousemove') as Observable<MouseEvent>;\n    this.mouseUp$ = this.mouseUp$ || observableFromEvent(document, 'mouseup') as Observable<MouseEvent>;\n\n    this.drag$ = this.drag$ ||\n                 this.mouseDown$.pipe(\n                    switchMap(() => this.mouseMove$.pipe(\n                      tap(this.onDrag.emit),\n                      takeUntil(this.mouseUp$)\n                    ))\n                 );\n\n    this.dragSubscription = this.drag$.subscribe((event: MouseEvent) => {\n      this.element.nativeElement.style.left = `${event.x}px`;\n      this.element.nativeElement.style.top = `${event.y}px`;\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component(\n  {\n    selector: 'ac-drag-icon',\n    template: `\n        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"  height=\"25\"  width=\"25\"\n\t viewBox=\"0 0 476.737 476.737\" style=\"enable-background:new 0 0 476.737 476.737;\" xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<path style=\"fill:#010002;\" d=\"M475.498,232.298l-3.401-5.149l-63.565-63.565c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tc-6.198,6.198-6.198,16.273,0,22.47l36.423,36.423H254.26V54.253l36.423,36.423c6.166,6.198,16.273,6.198,22.47,0\n\t\t\tc6.166-6.198,6.166-16.273,0-22.47L249.588,4.64l-0.159-0.095l-4.99-3.305L238.369,0h-0.064l-6.007,1.24l-4.99,3.305l-0.191,0.095\n\t\t\tl-63.565,63.565c-6.198,6.198-6.198,16.273,0,22.47s16.273,6.198,22.47,0l36.455-36.423v168.225H54.253l36.423-36.423\n\t\t\tc6.198-6.198,6.198-16.273,0-22.47s-16.273-6.198-22.47,0L4.64,227.149l-0.095,0.159l-3.305,4.99L0,238.369v0.064l1.24,6.007\n\t\t\tl3.305,4.958l0.095,0.191l63.565,63.565c6.198,6.198,16.273,6.198,22.47,0c6.198-6.166,6.198-16.273,0-22.47L54.253,254.26\n\t\t\th168.225v168.225l-36.423-36.423c-6.198-6.166-16.273-6.166-22.47,0c-6.198,6.198-6.198,16.304,0,22.47l63.565,63.565l5.149,3.432\n\t\t\tl6.007,1.208h0.064l6.07-1.24l5.149-3.401l63.565-63.565c6.166-6.198,6.166-16.304,0-22.47c-6.198-6.198-16.304-6.198-22.47,0\n\t\t\tl-36.423,36.423V254.26h168.225l-36.423,36.423c-6.166,6.166-6.166,16.273,0,22.47c6.198,6.166,16.304,6.166,22.47,0\n\t\t\tl63.565-63.565l3.432-5.149l1.208-6.007v-0.064L475.498,232.298z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n    `,\n  }\n)\nexport class DragIconComponent {\n  constructor() {\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Toolbar button widget, act as a single button inside ac-toolbar component\n * Can accepts content components or passing [iconUrl]\n * configure with: `[iconUrl]`,`[buttonClass]`,`[iconClass]`,`(onClick)`\n *\n * Usage:\n * ```\n * <ac-toolbar [allowDrag]=\"true\">\n <ac-toolbar-button [iconUrl]=\"'assets/home-icon.svg'\" (onClick)=\"goHome()\">\n </ac-toolbar-button>\n <ac-toolbar-button [iconUrl]=\"'assets/explore-icon.svg'\" (onClick)=\"rangeAndBearing()\">\n </ac-toolbar-button>\n </ac-toolbar>\n * ```\n *\n */\n@Component(\n  {\n    selector: 'ac-toolbar-button',\n    template: `\n        <div (click)=\"onClick.emit()\" class=\"button-container {{buttonClass}}\">\n            <img *ngIf=\"iconUrl\" [src]=\"iconUrl\" class=\"icon {{iconClass}}\"/>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styles: [`\n        .button-container {\n            border-radius: 1px;\n            background-color: rgba(255, 255, 255, 0.8);\n            height: 30px;\n            width: 30px;\n            padding: 5px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n        }\n\n        .button-container:hover {\n            background-color: rgba(255, 255, 255, 0.95);\n        }\n\n        .icon {\n            height: 30px;\n            width: 30px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n  }\n)\nexport class AcToolbarButtonComponent implements OnInit {\n\n  @Input()\n  iconUrl: string;\n\n  @Input()\n  buttonClass: string;\n\n  @Input()\n  iconClass: string;\n\n  @Output()\n  onClick = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CoordinateConverter } from '../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\nimport { EditActions } from '../../models/edit-actions.enum';\nimport { PolylineEditorObservable } from '../../models/polyline-editor-observable';\nimport { PolylineEditOptions } from '../../models/polyline-edit-options';\nimport { LabelProps, LabelStyle } from '../../models/label-props';\nimport { PolylineEditUpdate } from '../../models/polyline-edit-update';\nimport { EditModes } from '../../models/edit-mode.enum';\nimport { PolylinesEditorService } from '../../services/entity-editors/polyline-editor/polylines-editor.service';\n\n/**\n *\n * Range and bearing component that is used to draw range and bearing on the map.\n * The inputs are used to customize the range and bearing style and behavior.\n * Create component reference and use the `create()` function to start creating R&B on the map.\n * The function receives an optional RangeAndBearingOptions object that defines the created range and bearing style and behavior\n * (on top of the default and global definitions).\n *\n * Usage:\n *\n * my-component.ts:\n *\n * ```\n * \\@ViewChild('rangeAndBearing', {static: false}) private rangeAndBearing: RangeAndBearingComponent; // Get R&B reference\n *  // ...\n * this.rangeAndBearing.create({style: { pointProps: { pixelSize: 12 } }, bearingLabelsStyle: { fillColor: Cesium.Color.GREEN } });\n * ```\n *\n * my-component.html\n * ```\n * <range-and-bearing #rangeAndBearing></range-and-bearing> // Optional inputs defines global style and behavior.\n * ```\n *\n */\n@Component({\n  selector: 'range-and-bearing',\n  template: `\n    <polylines-editor></polylines-editor>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PolylinesEditorService],\n})\nexport class RangeAndBearingComponent {\n  @Input() lineEditOptions?: PolylineEditOptions = {};\n  @Input() labelsStyle?: LabelStyle = {};\n  @Input() distanceLabelsStyle?: LabelStyle = {};\n  @Input() bearingLabelsStyle?: LabelStyle = {};\n  @Input() bearingStringFn?: (value: number) => string;\n  @Input() distanceStringFn?: (value: number) => string;\n  @Input() labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n\n  constructor(private polylineEditor: PolylinesEditorService, private coordinateConverter: CoordinateConverter) {\n  }\n\n  create(\n    {\n      lineEditOptions = {},\n      labelsStyle = {},\n      distanceLabelsStyle = {},\n      bearingLabelsStyle = {},\n      bearingStringFn,\n      distanceStringFn,\n      labelsRenderFn,\n    }: RangeAndBearingOptions = {lineEditOptions: {}, labelsStyle: {}, distanceLabelsStyle: {}, bearingLabelsStyle: {}},\n  ): PolylineEditorObservable {\n    const rnb = this.polylineEditor.create({\n      allowDrag: false,\n      pointProps: {\n        showVirtual: false,\n        pixelSize: 8,\n      },\n      polylineProps: {\n        width: 2,\n      },\n      ...this.lineEditOptions,\n      ...lineEditOptions,\n    });\n\n    if (labelsRenderFn) {\n      rnb.setLabelsRenderFn(labelsRenderFn);\n    } else if (this.labelsRenderFn) {\n      rnb.setLabelsRenderFn(this.labelsRenderFn);\n    } else {\n      rnb.setLabelsRenderFn(update => {\n        const positions = update.positions;\n        let totalDistance = 0;\n        if (!positions || positions.length === 0) {\n          return [];\n        }\n        return (update.editMode === EditModes.CREATE && update.editAction !== EditActions.ADD_LAST_POINT\n            ? [...positions, update.updatedPosition]\n            : positions\n        ).reduce(\n          (labels, position, index, array) => {\n            if (index !== 0) {\n              const previousPosition = array[index - 1];\n              const bearing = this.coordinateConverter.bearingToCartesian(previousPosition, position);\n              const distance = Cesium.Cartesian3.distance(previousPosition, position) / 1000;\n              labels.push(\n                {\n                  text:\n                    (bearingStringFn && bearingStringFn(bearing)) ||\n                    (this.bearingStringFn && this.bearingStringFn(bearing)) ||\n                    `${bearing.toFixed(2)}Â°`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-20, -8),\n                  position: new Cesium.Cartesian3(\n                    (position.x + previousPosition.x) / 2,\n                    (position.y + previousPosition.y) / 2,\n                    (position.z + previousPosition.z) / 2,\n                  ),\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.bearingLabelsStyle as any),\n                  ...(bearingLabelsStyle as any),\n                },\n                {\n                  text:\n                    (distanceStringFn && distanceStringFn(totalDistance + distance)) ||\n                    (this.distanceStringFn && this.distanceStringFn(totalDistance + distance)) ||\n                    `${(totalDistance + distance).toFixed(2)} Km`,\n                  scale: 0.2,\n                  font: '80px Helvetica',\n                  pixelOffset: new Cesium.Cartesian2(-35, -8),\n                  position: position,\n                  fillColor: Cesium.Color.WHITE,\n                  outlineColor: Cesium.Color.WHITE,\n                  showBackground: true,\n                  ...(this.labelsStyle as any),\n                  ...(labelsStyle as any),\n                  ...(this.distanceLabelsStyle as any),\n                  ...(distanceLabelsStyle as any),\n                },\n              );\n\n              totalDistance += distance;\n            }\n\n            return labels;\n          },\n          [\n            {\n              text: (distanceStringFn && distanceStringFn(0)) || (this.distanceStringFn && this.distanceStringFn(0)) || `0 Km`,\n              scale: 0.2,\n              font: '80px Helvetica',\n              pixelOffset: new Cesium.Cartesian2(-20, -8),\n              position: positions[0],\n              fillColor: Cesium.Color.WHITE,\n              outlineColor: Cesium.Color.WHITE,\n              showBackground: true,\n              ...(this.labelsStyle as any),\n              ...(labelsStyle as any),\n              ...(this.distanceLabelsStyle as any),\n              ...(distanceLabelsStyle as any),\n            },\n          ],\n        );\n      });\n    }\n\n    return rnb;\n  }\n}\n\nexport interface RangeAndBearingOptions {\n  lineEditOptions?: PolylineEditOptions;\n  labelsStyle?: LabelStyle;\n  distanceLabelsStyle?: LabelStyle;\n  bearingLabelsStyle?: LabelStyle;\n  bearingStringFn?: (value: number) => string;\n  distanceStringFn?: (value: number) => string;\n  labelsRenderFn?: (update: PolylineEditUpdate, labels: LabelProps[]) => LabelProps[];\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { MapsManagerService } from '../../angular-cesium/services/maps-manager/maps-manager.service';\nimport { CameraService } from '../../angular-cesium/services/camera/camera.service';\nimport { CesiumService } from '../../angular-cesium/services/cesium/cesium.service';\nimport { AcMapComponent } from '../../angular-cesium/components/ac-map/ac-map.component';\n\ninterface ZoomData {\n  container: HTMLElement;\n  borderElement?: HTMLElement;\n  resetOnEscapePressFunc?: EventListenerOrEventListenerObject;\n}\n\n/**\n * The Service is as a \"zoom to rectangle\" tool\n *\n * example:\n * ```\n * constructor(\n *   private cameraService: CameraService,\n *   private cesiumService: CesiumService,\n *   private zoomToRectangleService: ZoomToRectangleService,\n * ) {\n *   this.zoomToRectangleService.init(cesiumService, cameraService);\n * }\n * ...\n * this.zoomToRectangleService.activate({onComplete: () => this.zoomToRectangleService.disable()});\n * ```\n *\n * `init()` - initialize the service with CameraService and CesiumService.\n * If no mapId is provided to activate() - must be called before calling `activate()`.\n *\n * `disable()` - disables the tool.\n *\n * `activate()` -\n * @param options\n * {\n *  onStart - optional - a callback that will be called when the user start drawing the rectangle\n *  onComplete - optional - a callback that will be called when the tool zoom in\n *  autoDisableOnZoom - optional - determines if the tool should auto disable after zoom - default: true\n *  animationDurationInSeconds - optional - zoom animation duration in seconds - default: 0.5\n *  borderStyle - optional - the style of the rectangle element border - default: '3px dashed #FFFFFF'\n *  backgroundColor - optional - the background color of the rectangle element - default: 'transparent'\n *  resetKeyCode - optional - the key code of the key that is used to reset the drawing of the rectangle - default: 27 (ESC key)\n *  threshold - optional - the minimum area of the screen rectangle (in pixels) that is required to perform zoom - default: 9\n *  keepRotation - optional - whether or not to keep the rotation when zooming in - default: true\n *  mouseButton - optional - sets the mouse button for drawing the rectangle - default: left mouse button (0)\n * }\n * @param mapId - optional - the mapId of the map that the tool will be used in.\n *\n */\n\nexport enum MouseButtons {\n  LEFT = 0,\n  MIDDLE = 1,\n  RIGHT = 2,\n}\n\n@Injectable()\nexport class ZoomToRectangleService {\n  constructor(\n    private mapsManager: MapsManagerService,\n    @Optional() cameraService: CameraService,\n    @Optional() cesiumService: CesiumService,\n  ) {}\n\n  private cameraService: CameraService;\n  private cesiumService: CesiumService;\n\n  private mapsZoomElements = new Map<string, ZoomData>();\n  private defaultOptions = {\n    animationDurationInSeconds: 0.5,\n    resetKeyCode: 27,\n    borderStyle: '2px solid rgba(0,0,0,0.5)',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    autoDisableOnZoom: true,\n    threshold: 9,\n    keepRotation: true,\n    mouseButton: MouseButtons.LEFT,\n  };\n\n  init(cesiumService: CesiumService, cameraService: CameraService) {\n    this.cameraService = cameraService;\n    this.cesiumService = cesiumService;\n  }\n\n  activate(\n    options: {\n      onStart?: (acMap?: AcMapComponent) => any;\n      onComplete?: (acMap?: AcMapComponent) => any;\n      mouseButton?: MouseButtons;\n      autoDisableOnZoom?: boolean;\n      animationDurationInSeconds?: number;\n      threshold?: number;\n      keepRotation?: boolean;\n      borderStyle?: string;\n      backgroundColor?: string;\n      resetKeyCode?: number;\n    } = {},\n    mapId?: string,\n  ) {\n    if ((!this.cameraService || !this.cesiumService) && !mapId) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    const finalOptions = Object.assign({}, this.defaultOptions, options);\n    let cameraService = this.cameraService;\n    let mapContainer;\n    let map;\n    if (this.cesiumService) {\n      mapContainer = this.cesiumService.getViewer().container;\n      map = this.cesiumService.getMap();\n    }\n    if (mapId) {\n      map = this.mapsManager.getMap(mapId);\n      if (!map) {\n        throw new Error(`Map not found with id: ${mapId}`);\n      }\n      cameraService = map.getCameraService();\n      mapContainer = map.getCesiumViewer().container;\n    }\n\n    if (!cameraService || !mapContainer) {\n      throw new Error(`The function must receive a mapId if the service wasn't initialized`);\n    }\n    this.disable(mapId);\n    const container = document.createElement('div');\n    mapContainer.style.position = 'relative';\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    container.style.top = '0';\n    container.style.left = '0';\n    mapContainer.appendChild(container);\n    const mapZoomData: ZoomData = { container };\n    this.mapsZoomElements.set(mapId || this.cesiumService.getMap().getId(), mapZoomData);\n    let mouse = {\n      endX: 0,\n      endY: 0,\n      startX: 0,\n      startY: 0,\n    };\n    let borderElement: HTMLElement | undefined;\n\n    container.onmousedown = e => {\n      if (e.button !== finalOptions.mouseButton) {\n        return;\n      }\n      if (!borderElement) {\n        if (options && options.onStart) {\n          options.onStart(map);\n        }\n\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.startX = offsetX;\n        mouse.startY = offsetY;\n        borderElement = document.createElement('div');\n        borderElement.className = 'zoom-to-rectangle-border';\n        borderElement.style.position = 'absolute';\n        borderElement.style.border = finalOptions.borderStyle;\n        borderElement.style.backgroundColor = finalOptions.backgroundColor;\n        borderElement.style.left = mouse.startX + 'px';\n        borderElement.style.top = mouse.startY + 'px';\n        container.appendChild(borderElement);\n        mapZoomData.borderElement = borderElement;\n      }\n    };\n\n    container.onmouseup = e => {\n      if (borderElement) {\n        let zoomApplied;\n        if (mouse && Math.abs(mouse.endX - mouse.startX) * Math.abs(mouse.endY - mouse.startY) > finalOptions.threshold) {\n          zoomApplied = this.zoomCameraToRectangle(\n            cameraService,\n            mouse,\n            finalOptions.animationDurationInSeconds,\n            finalOptions,\n          );\n        }\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n        if (!!finalOptions.onComplete) {\n          finalOptions.onComplete(map);\n        }\n        if (finalOptions.autoDisableOnZoom && zoomApplied) {\n          this.disable(mapId);\n        }\n      }\n    };\n\n    container.onmousemove = e => {\n      if (borderElement) {\n        const rect = (e.currentTarget as any).getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const offsetY = e.clientY - rect.top;\n        mouse.endX = offsetX;\n        mouse.endY = offsetY;\n        borderElement.style.width = Math.abs(mouse.endX - mouse.startX) + 'px';\n        borderElement.style.height = Math.abs(mouse.endY - mouse.startY) + 'px';\n        borderElement.style.left = Math.min(mouse.startX, mouse.endX) + 'px';\n        borderElement.style.top = Math.min(mouse.startY, mouse.endY) + 'px';\n      }\n    };\n\n    const resetOnEscapePress = e => {\n      if (e.keyCode === finalOptions.resetKeyCode && borderElement) {\n        borderElement.remove();\n        borderElement = undefined;\n        mapZoomData.borderElement = undefined;\n        mouse = {\n          endX: 0,\n          endY: 0,\n          startX: 0,\n          startY: 0,\n        };\n      }\n    };\n    document.addEventListener('keydown', resetOnEscapePress);\n    mapZoomData.resetOnEscapePressFunc = resetOnEscapePress;\n  }\n\n  disable(mapId?: string) {\n    if (!this.cesiumService && !mapId) {\n      throw new Error('If the service was not initialized with CesiumService, mapId must be provided');\n    }\n    const data = this.mapsZoomElements.get(mapId || this.cesiumService.getMap().getId());\n    if (data) {\n      data.container.remove();\n      if (data.borderElement) {\n        data.borderElement.remove();\n      }\n      if (data.resetOnEscapePressFunc) {\n        document.removeEventListener('keydown', data.resetOnEscapePressFunc);\n      }\n    }\n    this.mapsZoomElements.delete(mapId);\n  }\n\n  private zoomCameraToRectangle(\n    cameraService: CameraService,\n    positions: { endX: number; endY: number; startX: number; startY: number },\n    animationDuration,\n    options,\n  ): boolean {\n    const camera = cameraService.getCamera();\n    const cartesian1 = camera.pickEllipsoid({ x: positions.startX, y: positions.startY });\n    const cartesian2 = camera.pickEllipsoid({ x: positions.endX, y: positions.endY });\n    if (!cartesian1 || !cartesian2) {\n      return false;\n    }\n    const cartographic1 = Cesium.Cartographic.fromCartesian(cartesian1);\n    const cartographic2 = Cesium.Cartographic.fromCartesian(cartesian2);\n    cameraService.cameraFlyTo({\n      destination: new Cesium.Rectangle(\n        Math.min(cartographic1.longitude, cartographic2.longitude),\n        Math.min(cartographic1.latitude, cartographic2.latitude),\n        Math.max(cartographic1.longitude, cartographic2.longitude),\n        Math.max(cartographic1.latitude, cartographic2.latitude),\n      ),\n      orientation: options.keepRotation ? { heading: camera.heading } : undefined,\n      duration: animationDuration,\n    });\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\nimport { EllipsesEditorComponent } from './components/ellipses-editor/ellipses-editor.component';\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\nimport { DraggableToMapService } from './services/draggable-to-map.service';\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\nimport { RangeAndBearingComponent } from './components/range-and-bearing/range-and-bearing.component';\nimport { ZoomToRectangleService } from './services/zoom-to-rectangle.service';\n\n@NgModule({\n  imports: [CommonModule, AngularCesiumModule],\n  declarations: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    DragIconComponent,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  exports: [\n    HippodromeEditorComponent,\n    PolygonsEditorComponent,\n    CirclesEditorComponent,\n    EllipsesEditorComponent,\n    PolylinesEditorComponent,\n    DraggableToMapDirective,\n    AcToolbarComponent,\n    AcToolbarButtonComponent,\n    RangeAndBearingComponent,\n  ],\n  providers: [\n    DraggableToMapService,\n    ZoomToRectangleService,\n  ]\n})\nexport class AngularCesiumWidgetsModule {\n}\n"]}