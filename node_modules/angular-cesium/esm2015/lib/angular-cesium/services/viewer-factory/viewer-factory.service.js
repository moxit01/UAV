/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class ViewerFactory {
    constructor() {
        this.cesium = Cesium;
    }
    /**
     * Creates a viewer with default or custom options
     * @param {?} mapContainer - container to initialize the viewer on
     * @param {?=} options - Options to create the viewer with - Optional
     *
     * @return {?} new viewer
     */
    createViewer(mapContainer, options) {
        /** @type {?} */
        let viewer = null;
        if (options) {
            viewer = new this.cesium.Viewer(mapContainer, Object.assign({ contextOptions: {
                    webgl: { preserveDrawingBuffer: true }
                } }, options));
        }
        else {
            viewer = new this.cesium.Viewer(mapContainer, {
                contextOptions: {
                    webgl: { preserveDrawingBuffer: true }
                },
            });
        }
        return viewer;
    }
}
ViewerFactory.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ViewerFactory.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    ViewerFactory.prototype.cesium;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld2VyLWZhY3Rvcnkuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2VzaXVtLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItY2VzaXVtL3NlcnZpY2VzL3ZpZXdlci1mYWN0b3J5L3ZpZXdlci1mYWN0b3J5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLGFBQWE7SUFJeEI7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDOzs7Ozs7OztJQVNELFlBQVksQ0FBQyxZQUF5QixFQUFFLE9BQWE7O1lBQy9DLE1BQU0sR0FBRyxJQUFJO1FBQ2pCLElBQUksT0FBTyxFQUFFO1lBQ1gsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsWUFBWSxrQkFDMUMsY0FBYyxFQUFFO29CQUNkLEtBQUssRUFBRSxFQUFDLHFCQUFxQixFQUFFLElBQUksRUFBQztpQkFDckMsSUFDRSxPQUFPLEVBQ1YsQ0FBQztTQUNKO2FBQU07WUFDTCxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQzFDO2dCQUNFLGNBQWMsRUFBRTtvQkFDZCxLQUFLLEVBQUUsRUFBQyxxQkFBcUIsRUFBRSxJQUFJLEVBQUM7aUJBQ3JDO2FBQ0YsQ0FBQyxDQUFDO1NBQ047UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOzs7WUFuQ0YsVUFBVTs7Ozs7O0lBRVQsK0JBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBWaWV3ZXJGYWN0b3J5IHtcbiAgY2VzaXVtOiBhbnk7XG5cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNlc2l1bSA9IENlc2l1bTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgdmlld2VyIHdpdGggZGVmYXVsdCBvciBjdXN0b20gb3B0aW9uc1xuICAgKiBAcGFyYW0gbWFwQ29udGFpbmVyIC0gY29udGFpbmVyIHRvIGluaXRpYWxpemUgdGhlIHZpZXdlciBvblxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY3JlYXRlIHRoZSB2aWV3ZXIgd2l0aCAtIE9wdGlvbmFsXG4gICAqXG4gICAqIEByZXR1cm5zIG5ldyB2aWV3ZXJcbiAgICovXG4gIGNyZWF0ZVZpZXdlcihtYXBDb250YWluZXI6IEhUTUxFbGVtZW50LCBvcHRpb25zPzogYW55KSB7XG4gICAgbGV0IHZpZXdlciA9IG51bGw7XG4gICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgIHZpZXdlciA9IG5ldyB0aGlzLmNlc2l1bS5WaWV3ZXIobWFwQ29udGFpbmVyLCB7XG4gICAgICAgIGNvbnRleHRPcHRpb25zOiB7XG4gICAgICAgICAgd2ViZ2w6IHtwcmVzZXJ2ZURyYXdpbmdCdWZmZXI6IHRydWV9XG4gICAgICAgIH0sXG4gICAgICAgIC4uLm9wdGlvbnNcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2aWV3ZXIgPSBuZXcgdGhpcy5jZXNpdW0uVmlld2VyKG1hcENvbnRhaW5lcixcbiAgICAgICAge1xuICAgICAgICAgIGNvbnRleHRPcHRpb25zOiB7XG4gICAgICAgICAgICB3ZWJnbDoge3ByZXNlcnZlRHJhd2luZ0J1ZmZlcjogdHJ1ZX1cbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmlld2VyO1xuICB9XG59XG4iXX0=