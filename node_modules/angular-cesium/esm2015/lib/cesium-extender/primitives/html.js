/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class HtmlPrimitive {
    /**
     * @param {?} options
     * @param {?=} collection
     */
    constructor(options, collection = null) {
        if (typeof options !== 'object') {
            throw new Error('HtmlPrimitive ERROR: invalid html options!');
        }
        this.scene = options.scene;
        this._mapContainer = options.mapContainer;
        this.show = options.show || true;
        this.position = options.position;
        this.pixelOffset = options.pixelOffset;
        this.element = options.element;
        this.collection = collection;
    }
    /**
     * @param {?} scene
     * @return {?}
     */
    set scene(scene) {
        this._scene = scene;
    }
    /**
     * @param {?} show
     * @return {?}
     */
    set show(show) {
        this._show = show;
        if (Cesium.defined(this.element)) {
            if (show) {
                this._element.style.display = 'block';
            }
            else {
                this._element.style.display = 'none';
            }
        }
    }
    /**
     * @return {?}
     */
    get show() {
        return this._show;
    }
    /**
     * @param {?} position
     * @return {?}
     */
    set position(position) {
        this._position = position;
    }
    /**
     * @return {?}
     */
    get position() {
        return this._position;
    }
    /**
     * @param {?} pixelOffset
     * @return {?}
     */
    set pixelOffset(pixelOffset) {
        this._pixelOffset = pixelOffset;
    }
    /**
     * @return {?}
     */
    get pixelOffset() {
        return this._pixelOffset;
    }
    /**
     * @param {?} element
     * @return {?}
     */
    set element(element) {
        this._element = element;
        if (Cesium.defined(element)) {
            this._mapContainer.appendChild(element);
            this._element.style.position = 'absolute';
            this._element.style.zIndex = Number.MAX_VALUE.toString();
        }
    }
    /**
     * @return {?}
     */
    get element() {
        return this._element;
    }
    /**
     * @param {?} collection
     * @return {?}
     */
    set collection(collection) {
        this._collection = collection;
    }
    /**
     * @return {?}
     */
    get collection() {
        return this._collection;
    }
    /**
     * @return {?}
     */
    update() {
        if (!Cesium.defined(this._show) || !Cesium.defined(this._element)) {
            return;
        }
        /** @type {?} */
        let screenPosition = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this._scene, this._position);
        if (!Cesium.defined(screenPosition)) {
            screenPosition = new Cesium.Cartesian2((-1000), (-1000));
        }
        else if (Cesium.defined(this._pixelOffset) && Cesium.defined(this._pixelOffset.x) && Cesium.defined(this._pixelOffset.y)) {
            screenPosition.y += this._pixelOffset.y;
            screenPosition.x += this._pixelOffset.x;
        }
        if (this._lastPosition && this._lastPosition.equals(screenPosition)) {
            return;
        }
        this._element.style.top = `${screenPosition.y}px`;
        this._element.style.left = `${screenPosition.x}px`;
        this._lastPosition = screenPosition;
    }
    /**
     * @return {?}
     */
    remove() {
        if (this._element) {
            this._element.remove();
        }
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._scene;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._show;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._position;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._lastPosition;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._pixelOffset;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._element;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._collection;
    /**
     * @type {?}
     * @private
     */
    HtmlPrimitive.prototype._mapContainer;
}
//# sourceMappingURL=data:application/json;base64,